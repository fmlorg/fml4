●ファイルをＭＬ参加者が自由に登録できるようにする機能"put" を追加する
  patchを作りました。

●それとＨＤ容量に余裕がないときに、cronなどによって、spoolを消去して
  いくとします。その時、summaryの内容を実際に spoolに残っているファイル
  を反映させるための perl script「restructure-summary.perl」を用意して
  おきました。



■機能"put"

   使用方法は、「# put filename」と記述してその内容をその後において
おくだけです。Subjectにはファイルの中身が分かるように記述してください。
summaryだけで中身が分かるようにするためです。

  実際の動作は、メイル本文全部を spool/filenameに置いて Log, summaryを
書き換えます。本文全文を置くので余分な「# put ....」の記述とかも残って
しまいます。それから数字のファイルを置くとまずいです。その辺はまだチェック
してません。以下が使用例です。
=======ここから===========================================================
# put fi8nagan.ish

  もしもし、ｓｈａです。これが東京ＢＢＳにて掲載された「炎の８日間」と
呼ばれる世にも恐ろしい８日間のドキュメンタリーです(^_^;)。とくと御覧あれ。

┌―武者 義則―――――――――――――――┐
｜日立製作所 基礎研究所 (0492-96-6111(368))｜
└―sha@harl.hitachi.co.jp―Nifty: JCC02032┘

<<< fi8nagan.lzh for MS-DOS or Human68K ( use jis7 ish ) [ 239 lines ] UNIX ver
2.01 >>>
!!!"!WgR!2"DRoXR&\Ii7iXWp:Rc!("H->)zv"!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!-:7r
!!!"!WgR!2"DRoXR&\Ii7iXWp:Rc!("H->)zv"!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!-:7r
!!!"!WgR!2"DRoXR&\Ii7iXWp:Rc!("H->)zv"!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!-:7r
.............................
=======ここまで===========================================================
こんな感じで記述します。


  putで置いたファイルは getで取り寄せできます。getの説明を拡張しておきます。
まず、helpなどには以下の記述を追加しておきます。ちなみに、get自体には何も
手を加えておりません。
=======ここから===========================================================
# put FileName          テキストファイルを登録する
# get FileName          登録ファイルを得る
=======ここまで===========================================================


  具体的な説明としてこんな感じはどうでしょう？以下の説明は、消去されたファイル
を「restructure-summary.perl」によって summaryを更新した場合の「注意」も
載っています。
=======ここから===========================================================
手順
【1】ファイル一覧を取り寄せる。
     本文が「# summary」だけのメイルを送って下さい。

    この形式は以下の通り
 |94/09/04 00:59:53 [6:sha@harlgw92.ha] Hello
 |                   ^=> この番号が article IDである。
 |
 |94/09/08 03:28:23 [fi8nagan.ish:sha@harl.hitach] fire 8 days at Ueda, Nagano
 |                   ^^^^^^^^^^^^=> このようにファイル名のときもある。
 |
  注意：行の先頭が「D 94/09/...」のように「D 」がついていたら既に
      消去されてしまって存在していないファイルなので、取り寄せしないで下さい。


【2】実際にファイルを取り寄せる。
    本文が「# get ID」または「# get filename」のメイルを送って下さい。
   |   
   |# get 6
   |# get fi8nagan.ish
   |
   のように getを使用してください。複数並べることもできます。
=======ここまで===========================================================

  以下にパッチを付けます。libfml.plのバージョンは、
         「libfml.pl,v 1.1.2.7 1994/04/06 11:22:22 fukachan Exp fukachan」
を使用しました。

=======ここから===========================================================
*** libfml.pl	Thu Sep  8 02:46:49 1994
--- libfml.pl-org	Thu Sep  8 01:07:01 1994
***************
*** 109,136 ****
  	  next GivenCommands;
        }
        
-       # put file to the spool ,  added by sha@harl.hitachi.co.jp
-       if (/^put$/io){
- 	  $PutFileName = $Fld[2];
- 	  local($mail_file) = "$SPOOL_DIR/$PutFileName";
- 	  if ( -f $mail_file ) {
- 	     &Sendmail($to,"(put)FileName $PutFileName already exist. $ML_FN");
- 	     $status = "Fail";
- 	  }
- 	  else {
- 	     open(PUTFILE,"> $mail_file")|| (&Logging("$!"), return $NULL);
- 	     print PUTFILE $MailBody;
-  	     close PUTFILE;    
-     	     open(SUMMARY, ">> $SUMMARY_FILE") || (&Logging("$!"), return);
-     	     printf SUMMARY "%s [%s:%s] %s\n", 
-                                $Now, $PutFileName, $User, $Summary_Subject;
-              close(SUMMARY);
- 	     $status = "Success";
-           }
- 	  &Logging("Put \"$PutFileName\", ($From_address), status is $status");
- 	  last GivenCommands;
-       }
-       
        # Off temporarily.
        if(/^off$/io) {
  	  if(&ChangeMemberList('off', $From_address, $ACTIVE_LIST)) {
--- 109,114 ----
=======ここまで===========================================================



■spoolの消去と summaryの更新。

  spoolは例えば、以下のような crontabの記述などで消去されるとします。もちろん
手動で消去した場合でも構いません。以下の例では消去したあとで summaryの更新
操作も行なっています。この２つを一つの perl scriptにまとめるともっとよかった
かもしれません。

  crontabにしろ手動にしろspoolのファイルを消去したあとで、
restructure-summary.perlを起動しますと spool内のファイルをチェック致しまして、
summaryを書き換えます。
=======ここから===========================================================
3 18 * * * find /home/yo-musha/mail/distrib/spool/ -mtime +14 -exec /usr/bin/rm
 {} \; 2>&1 > /dev/null
15 18 * * * /home/yo-musha/mail/distrib/restructure-summary.perl 2>&1 > /dev/nu
=======ここまで===========================================================

  以下に summary更新 scriptを載せます。directoryなどが直書きされています
ので適宜修正して使用してください。以下のscript「restructure-summary.perl」は
消去されたファイルが該当する summaryの行をカットするのではなく、
行頭に「D 」を付加して区別しているだけです。一応ＬＯＧのリストは残るように
との配慮です。ファイル名の restructureとは名ばかりで、単に変更している
だけですね(^_^;)。

=======ここから===========================================================
#!/usr/local/bin/perl
#### made by sha@harl.hitachi.co.jp Thu Sep  8 01:41:24 JST 1994

$NowDir     = "/home/yo-musha/mail/distrib";
$SpoolDir   = "$NowDir/spool";
$Summary    = "$NowDir/summary";
$SummaryBak = "$NowDir/summary.bak";

#####
opendir(DIRHANDLE, $SpoolDir);
@allfiles = grep(!/^\./, readdir(DIRHANDLE));
close DIRHANDLE;
$strfiles = ":" . join(":",@allfiles) . ":";

##print $strfiles,"\n";
####
rename($Summary, $SummaryBak);
open(FROMSUM,"< $SummaryBak") || die "Can't open \"$SummaryBak\" file.";
open(TOSUM,"> $Summary")      || die "Can't open \"$Summary\" file.";

#open(FROMSUM,"< $Summary") || die "Can't open \"$Summary\" file.";

while (<FROMSUM>){
	next if /^D /;
	$str = $_;
	$str =~ s#\d\d/\d\d/\d\d \d\d:\d\d:\d\d \[(.*):.*\] .*\n$#:$1:#;
	if ( index($strfiles, $str, 0) >= 0 ){ # the file exists
		print TOSUM $_;
#		print $_;
	}
	else {                              # the file doesn't exist
		print TOSUM "D $_";
#		print "D $_";
	}
}
close TOSUM, FROMSUM;
#close FROMSUM;
=======ここまで===========================================================

  作ったばかりのほかほかでして、まだほとんど洗練されておりませんが、
とりあえず私が欲しいと思った機能を追加しましたので、とても便利だと思って
おります。いかがなものでしょうか？上に挙げた例などは実際のものを
使用しているため、ちょっとまずいかもしれません(^_^;)。なにか架空の例に
置き換えた方がいいです。

┌―武者 義則―――――――――――――――┐
｜日立製作所 基礎研究所 (0492-96-6111(368))｜
└―sha@harl.hitachi.co.jp―Nifty: JCC02032┘
