.C	各種ユーザ用ユーティリティ等 (bin/, lib/Utilities/ ...)
.l	uip

ここでは bin/ 以下と lib/Utilities/ 以下の階層で提供しているプログラム
について解説します。


.S 	analize_mail_error.pl, analize_mail_error.sh 
.k 	analize_mail_error.pl
.k	analize_mail_error.sh 
.l 	analize_mail_error.pl
.l	analize_mail_error.sh 

ベータ版。エラーメール(複数でもよい)の入力すると 解析してエラーレポー
トを吐く。

   analize_mail_error.pl [-c cut_pattern] [-e exluce_pattern]
		-c アドレスの中から削除するパターン
		-e この文字列を含む排除するアドレスのパターン

例:
	show all +errormail |\
	analize_mail_error.pl -c hostname -e mydomain


.S	アーカイブの作成 (bin/Archive.pl bin/Archive.sh)
.l	bin/Archive.pl
.l	bin/Archive.sh
.k	Archive.pl
.k	Archive.sh
.xref	archive Archive.pl

アーカイブの節を参照


.S	cron (bin/cron.pl)
.l	bin/cron.pl
.k	cron.pl
.xref	cron

4.4BSD の cron と compatible な cron
 

.S	プログラムをデーモン化して実行 (bin/daemon.pl)
.l	bin/daemon.pl
.k	daemon.pl
.xref	cron

例：
	% bin/daemon.pl cron.pl $PWD

cron.pl をデーモン化して実行する。
ようは次のプログラムの perl version です。
.q
#include <stdio.h>
#include <sys/ioctl.h>
#include <sgtty.h>
#include <sys/file.h>

void usage()
{
  char *string="USAGE: targetprogram";
  fputs(string,stderr);
  exit(0);
}

main(argc, argv)
     int argc;
     char **argv;
{
  int f;

  f = open( "/dev/tty", O_RDWR, 0);
  if( -1 == ioctl(f ,TIOCNOTTY, NULL))
    exit(1);
  close(f);
  
  if( argc > 1 )
    execvp(*(++argv), argv);
  else
    usage();

  exit(0);
}

.~q


.S	daily （日々のログ解析）
.l	bin/daily.pl
.l	etc/daily.ignore
.k	daily.pl
.k	daily.ignore

	% bin/daily.pl -f etc/daily.ignore log

は log ファイル（複数も可）を解析しログの中で普通じゃない行をOUTPUTし
ます。どういう行を正常の動作とみなして無視するかは

	etc/daily.ignore

というファイルに入っています。各行が無視するキーワードです。
増やすなら足せばいいし、減らすなら切ってしまえば良いでしょう。
毎朝 cron で実行するといいとおもいます。


.S	DNS のチェック (bin/dns_check.pl)
.l	bin/dns_check.pl
.k	dns_check.pl

DNS のテストをする、ちょっとしたプログラム。

% make dns_check

とするとこのプログラムを実行する。


.S	emumail.pl
.k	emumail.pl
.l	bin/emumail.pl

sendmail -> fml.pl の 「sendmail -> 」の部分を emulation します。
debug に便利かなと


.S	EXPIRE を実行するプログラムの例 (bin/expire.pl)
.xref	expire expire.pl


.S	FMLのコマンドへのユーザインターフェイス (bin/fmlctl.pl)
.l	bin/fmlctl.pl
.k	fmlctl.pl
.k	.fmlctlrc

通常 fml のコマンドをテストする場合メール経由で実行しますが、ＭＬのホー
ムで fmlctl を使うと、fml のコマンドをメール経由でなくても実行します。

例えば 
	# mget last:10 mp

をメールで送らずとも

	% fmlctl.pl mget last:10 mp

をすると、このコマンドを実行して、メールでの返答でなく画面に結果を出し
ます。長い場合もあるので less 等で見ると良いでしょう。

-i オプションの場合インタラクティブ・モードに入るので (perl debugger 
もどきのインターフェイス)、これで複数のコマンドを実行したりもできます。

SYNOPSIS
	fmlctl.pl -i [-c configfile] [-d ML_directory] [-h] [DIR] [LIBDIR]

	-a	ADMIN MODE (コマンド は # admin ... が前についてるものと仮定) 
		つまり help をいれても # admin help のことだと思う。
	-c	fmlctl の設定ファイル
		デフォールトでは $HOME/.fmlctlrc を探して評価する
	-d	ＭＬのホームの指定
	-h	このメッセージ
	DIR	ＭＬのホーム (config.ph のある場所)
	LIBDIR	ＭＬのホームとは他の場所に libfml.pl 等があるならその場所


例：	通常は subscribe address をメールで送る場合

	% fmlctl subscribe ひとのあどれす

インタラクティブモード (interactive mode)

	% fmlctl -i 
	fmlctl<1> subscribe address

例：
	fmlctl<1> subscribe 	address
	fmlctl<1> addadmin	address

管理者モードか否かは $ENABLE という変数で決まっているので、
通常のコマンドを実行したい場合は

	u $ENABLE

管理者モードへ移行したい場合は

	e $ENABLE = 1

を実行すればできます。覚え方は「CISCOと同じenable」です（笑）
この場合 # admin シンタックスは要らず、その後の部分だけでよいです。
つまり help といれても admin help の意味になります。
またパスワードは必要ありません(こちらの方が重要でしょう)。


実行例：

   % chdir /var/spool/ml/elena
   % bin/fmlctl.pl -i $PWD /usr/libexec/fml
   Fml Control (Interactive Administration Interface)
   
    chdir /var/spool/ml/elena
   
    Loading the configuration [/var/spool/ml/elena/config.ph]
   
   Setting the Mailing List [Elena@axion.phys.titech.ac.jp], O.K.?
   
 [[[ COMMAND MODE ]]]
   
     FmlCtl<0> h
   
           !number   do the previous action of the number
           !string   do the string in the shell
           e         eval string
           e.g. e $debug = 1
           h         help
           H         history
           p         print the value
           e.g. p $debug
           q         quit
           u         undef the value
           e.g. u $debug
           
     FmlCtl<1> e $debug = 1
   eval "$debug = 1;";
     FmlCtl<2> p $debug
   1
     FmlCtl<3> u $debug
   eval "undef $debug;";
     FmlCtl<4> H
   1:h
   2:e $debug = 1
   3:p $debug
   4:u $debug
   5:H



.S	WIX言語フォーマッタ (bin/fwix.pl)
.k	fwix.pl
.l	bin/fwix.pl
.xref	WIX

WIX言語のフォーマッタ 


.k	$LANG
.k	$COMMENT (bin/fwix.pl)
.k	$KEYWORD (bin/fwix.pl)
.k	$FORMAT  (bin/fwix.pl)
.k	$HTML_KEYWORD (bin/fwix.pl)

   $COMMENT = '^\.comment|^\.\#';

	コメントを意味する予約語

   $KEYWORD = 'C|ST|S|C\.S|P|http|label|l|key|k|seealso|xref|A|ptr';

	chapter section 等予約語の定義
	
   $FORMAT  = 'q|~q';

	quote 等で特殊フォーマット命令を適用するもの		

   $HTML_KEYWORD = 'HTML_PRE|~HTML_PRE';

	HTMLモード用の予約語

   $LANG は 日本語か英語かが入り動作モードを制御しています。


.S	gen_summary.pl (summary ファイルを再生成する)
.k	gen_summary.pl
.l	bin/gen_summary.pl

MLの spool から summary を再生成する。

in fml-support ML's Count: 02393

   gen_summary.pl -I /usr/local/fml めーりんぐりすとのDIR/spool > summary

        -I lib*.pl のある場所（必須）
        -m オプションで MIME Decoding もします。


.S	URL の中身を取り出す (bin/geturl.pl)
.k	geturl.pl
.l	bin/geturl.pl
.k	$WWW_HOME
.k	$WITH_WWW_WATCH
.k	$LIBRARY_TO_OVERWRITE

	bin/geturl.pl URL

でその中身を取り出して、URLのパス名の最後の文字列（index.html等）に
saveします。画像データや音声データでも同様にファイルに落せます。

   % $FML/bin/geturl.pl http://www.iij.ad.jp/index.html
   LOG>"eval sys/socket.ph" O.K.
   LOG>>>> HREF=http://www.iij.ad.jp/index.html
   
   LOG>TalkWithHttpServer(www.iij.ad.jp, 80, /index.html, http, *re)
   LOG>open(HOUT, > /var/tmp/href:21452
   LOG>>>> ENDS HREF=http://www.iij.ad.jp/index.html
   
   LOG>/var/tmp/href:21452 -> index.html
   % ls -l index.html 
   -rw-r--r--  1 fukachan  wheel  2046 Sep 15 18:41 index.html

なお引数がないと環境変数 $WWW_HOME の内容を落します。libhref.pl の使い
方のデモだと思えば良いでしょう。

一般には例えば GNU wget 等のWWWデータを落すソフトが多数あります。


.S	ローカルテスト (bin/localtest.pl)
.l	bin/localtest.pl
.k	localtest.pl

gmake localtest の実体。メッセージIDチェックをチェックしている都合上、
これを使わずにローカルテストをするとメールがループしているとみなしてし
まうので、TEXT をメールの見本として使って fml のテスト

	cat TEXT | perl fml.pl $PWD 

のようにはできず

	bin/localtest.pl -f < TEXT | perl fml.pl $PWD 

のようにしないとテストできません。



.S	NEWSYSLOG SHELL VERSION (bin/newsyslog.sh)
.l	bin/newsyslog.sh
.k	newsyslog.sh

libnewsyslog.pl がなかった時代の産物。


.S	Multipart Canceler フィルタ (bin/multipart.pl)
.l	bin/multipart.pl
.k	multipart.pl

なお makefml で作るとサンプルに見本がついています。

.q
From:    Yuao TANIGAWA <yuao@infonia.or.jp>
Subject: Multipart Canceler
To:      fml-support@axion.phys.titech.ac.jp (fml supporting ML)
Date:    Fri, 10 Jan 1997 21:09:03 +0200
X-Mail-Count: 01937

  最近、ML に Multipart/Mixed とか Multipart/Alternative とかの
形式で、メールを送ってくる人がいるので（特にコマンドの処理がで
きないので）、Multipart Canceler なるフィルタを作ってみました。
  Multimart/Mixed の場合は、# End of Document No.??? でつなげる。
Multipart/Alternative の場合は、最初の文書以外は捨てる。...と
いうことをしています。
  使い方は、fml を起動するのに "|/fmlpath/fml.pl ..." と記述し
ているところを "|/scriptpath/multipart.pl|/fmlpath/fml.pl ..."
などと記述すれば機能します。
.~q


.S	SMTPライブラリを使った /usr/bin/Mail のemulation (bin/pmail.pl)
.l	bin/pmail.pl
.k	pmail.pl


.S	パスワードの初期化と変更 (bin/passwd.pl)
.l	bin/passwd.pl
.k	passwd.pl

fml でのパスワードは crypt された形で保存されます。つまり UNIX の 
/etc/passwd と同じようにです。

bin/passwd.pl を使って下さい。使い方は、

 passwd.pl [-i] [-f password-file] user password
    -i で user のパスワードを password で初期化
    -f etc/passwd に代わるパスワードファイルを指定

例：
	% passwd.pl -i fukachan@phys.titech.ac.jp 

とユーザ名つきで入れると

	Address: fukachan@phys.titech.ac.jp 
	Password: 

となるのでパスワードを入れて下さい。

	fukachan@phys.titech.ac.jp 32ZrV/XvYj1kY

のように etc/passwd が初期化される。ここの32ZrV/XvYj1kY は入力したパス
ワードを暗号化した結果です。

この etc/passwd は

	ＭＬのリモート管理(admin approve コマンド)
	moderated モード

等で使われます。
.xref REMOTE-ADMINISTRATION &DEFINE_MODE


.S	POP経由でスプールへ、POPを使ってＭＬを実行 (bin/pop2recv.pl)
.k	bin/pop2recv.pl
.k	bin/inc_via_pop.pl
.k	pop2recv.pl
.k	inc_via_pop.pl
.xref	popfml cron fml_local

libexec/popfml.pl がこの目的の専用プログラムです。
.xref	popfml

注意： inc_via_pop.pl は昔の名前（今はリンク）


.S	POP経由の自動RefileやＭＬの実行 (bin/pop2recv.pl)
.l	pop2recv.pl
.xref	popfml cron fml_local


.S	与えられたファイルを分割して送り出すプログラム (bin/split_and_msend.pl)
.l	bin/split_and_msend.pl
.k	split_and_msend.pl

与えられたファイルを分割して送り出すプログラムを太古の昔使ってた名残。
事実上使ってない。fml 2.x では OBSOLETE のため無保証 or 単なるおまけ。 
 

.S	SPOOL -> HTML Hierarchy (bin/spool2html.pl)
.l	spool2html.pl
.k	bin/spool2html.pl
.k	spool2html.pl

ターゲットとなるdirectory中のメールをHTML化します。

SYNOPSIS:

  spool2html.pl [-h] [-I INC] [-f cf] [-d HTTP_DIR] [-t TYPE] [-D DIR] SPOOL

    -h    this message
    -d    $HTTP_DIR
    -f    cf (例えばMLの設定ファイルconfig.phを評価する）
    -t    number of day ($HTML_INDEX_UNIT)
    -D    $DIR (fml の $DIR)
    -I    @INC に INCLUDE PATH を付け加える
    
    SPOOL $SPOOL_DIR
    

ターゲット SPOOL 中のメールを HTML化し $HTTP_DIR 中に変換します。
注意： 2.1GAMMA#103 以降はデフォールトでスレッド処理も実行します。 

変換の仕方については SyncHtml (.ptr{SyncHtml}) を参照してください。

ＭＬなら config.ph を評価して実行するので -f config.ph で呼び出しても
ＯＫです。

なお -D で設定していない場合 $DIR には $PWD が設定されています。
config.ph を評価する場合には気をつけて下さい。


.S	MLを止めて(ロックして)config.phの edit をしたい (bin/vipw.pl)
.k	vipw.pl
.l	bin/vipw.pl
.k	maintenance.pl

flockを使って夜中とかじゃなくてメールが来得る時間帯にメインテナン
スをしたい時は？

% bin/vipw.pl 

とすれば、MLの機能をflockでロックして、

	shell% $EDITOR $PWD/config.ph

を vipw.pl は実行します。
＃ maintenance.pl の発展版ですね。よって maintenance.pl はもう配布され
＃ ていません。

vipw.pl [-d $DIR] [-p] [-h] [-f file-to-edit] [$DIR(of ML)] 
    -h help
    -d ＭＬのconfig.phのあるdirectory
    -p ＭＬのconfig.phのあるdirectoryのしたのetc/passwdを代わりにedit
    -f editしたいファイル
    ＭＬのconfig.phのあるdirectory

すべてを省略した場合 $PWD の config.ph 
もっとも、-f とかの場合ちゃんと ロックしたかったら directory の指定が
必要ですね


.S	MH scan.format (lib/Utilities/scan.format)
.l	scan.format 
.k	scan.format 
.k	lib/Utilities/scan.format

lib/Utilities/scan.format を あなたの ~/Mail にいれると

  65 -06/14 Horaki Hikari fml-su Subject uja  <<うじゃ…

のような表示になります。    ↑ここが X-ML-Name: の部分の６文字

MHは暗号のようですが、ポイントは今レジスターに何が入っているかと、

	if	%<
	elif	%?
	else	%|
	fi	%>

が理解できれば scan.format は書けます。

X-ML-Name: とかと名前が違うフィールドは ↓この辺を

%?{X-Mailinglist-Name}%6{X-Mailinglist-Name}\

X-ML-Name: とかがないＭＬは、この辺↓のマッチングパターンのエントリを
適当に増やして、適当に増やしてください。

%?(match NetBSD.ORG)NetBSD\


.S	mgetで得たファイルをmh以外で読む時 (lib/Utilities/packmbox.pl)
.l	packmbox.pl
.k	packmbox.pl

packmbox.pl	(by ukai@hplj.hpl.hp.com)
		1,2,3,...のように並んでいるファイルをmbox形式のファイ
		ルにするスクリプト

		つまり、mget してきたファイルたちをｍｈでない人はmbox
		にした後で好きなインターフェイスをつかえばよいように

lib/Utilitites/packmbox.pl を使って、

	(cd spool; packmbox.pl ) > ~/mbox

として、mbox をつくれば、これにたいして、/bin/Mail なり Rmail なりを使
うことができて便利でしょう。MH なら例えば mbox を作った後

	inc -file ~/mbox -truncate 

のようにすれば、mbox から inbox へ入ります。


.S	RMAILファイルからfmlへのメッセージの取込み (lib/Utilities/Rmail2fml.pl)
.l	Rmail2fml.pl
.k	Rmail2fml.pl

Rmail2fml.pl	(yamane@ngi.co.jp)
		RMAILファイルから fmlへのメッセージの取込みプログラム


.S	宇宙歴関係
.l	my-mh-post
.l	my-mh-post.pl
.l	stardate.el
.k	my-mh-post
.k	my-mh-post.pl
.k	stardate.el

MHのpost部分をいれかえて、  

	X-Stardate: [-31]8122.12

のような宇宙歴をヘッダにつける。

post を入れ換えるべき 

	SHELL VERSION が my-mh-post
	PERL  VERSION が my-mh-post.pl

libstardate.pl はコマンドラインで呼ぶと宇宙歴そのものをOUTPUTします。
これを使って、mh-e レベルで宇宙歴をヘッダにつけるEmacs Lisp が 
stardate.el です。


.S	bin/RecreateConfig.pl
.l	bin/RecreateConfig.pl
.k	RecreateConfig.pl

fml 2.x では配布されていません。 fml 1.x 用なので OBSOLETE です。


.S	weekend-msend.sh
.l	bin/weekend-msend.sh
.k	weekend-msend.sh

設定ファイルを別に持ち msend.pl を一週間に一度起動するようにすれば一週
間に一度まとめ送りするようになります。
それを一週間に一度送るための script の例です。

m=1u みたいに常に送りつけるように設定しておいて送り時間は cron でコン
トロールするようにします。もっともコマンドでコントロールできません。管
理者が手で設定すると仮定しています。
＃まぁそれ用の別のアドレス作ってしまえばできますけどね

要点は

        MSEND_RC=$DIR/weekend/msendrc
        ACTIVE_LIST=$DIR/weekend/actives
        MEMBER_LIST=$DIR/weekend/members

で ACTIVE_LIST に 

	address m=1オプション

	例：
	address m=1u

とか書いておくという部分です。


.S	X-Stardate: をつける（mh-e）
.l	x-stardate
.k	STAR TREK
.k	stardate.el
.xref	stardate.el

lib/Utilities/stardate.el を load してください
＃ emacs 19 でなきゃかきかえないとだめ

たとえば、.emacs に
(load-libaray "stardate")
(setq startrek-stardate-process "/some-directory-path/libStardate.pl")

とすると mh-comp の draft buffer をつくるときに 
X-Stardate: をつけてくれます。


.# $Id$
.# Copyright (C) 1993-1996 fukachan@phys.titech.ac.jp
.# Copyright (C) 1996-1997 fukachan@sapporo.iij.ad.jp
.# fml is free software distributed under the terms of the GNU General
.# Public License. see the file COPYING for more details.
