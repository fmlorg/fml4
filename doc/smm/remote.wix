.C	リモート管理
.label	REMOTE-ADMINISTRATION
.key	$REMOTE_ADMINISTRATION


.S	リモート管理モード ('remote')
.k	リモート管理モード
.k	--remote
.k	&DEFINE_MODE('remote')

ロングラインオプションで

	fml.pl --remote
か
	config.ph で &DEFINE_MODE('remote');

の方が楽だとおもいますね。このモード設定は

	$REMOTE_ADMINISTRATION = 1;
	$REMOTE_ADMINISTRATION_REQUIRE_PASSWORD = 1;

を設定します(後述)。つまりリモート管理を認め、なおかつ管理者であること
を証明するためにはパスワード認証が必要という設定です。


.S	カスタマイズできる変数
.k	$ADMIN_MEMBER_LIST
.k	$ADMIN_HELP_FILE
.k	$REMOTE_ADMINISTRATION_REQUIRE_PASSWORD
.k	$PASSWD_FILE
.k	$DIR/etc/passwd

リモートで管理者になれる人のリスト

	$ADMIN_MEMBER_LIST	= "$DIR/members-admin";

このリモート管理サーバのコマンドのヘルプ

	$ADMIN_HELP_FILE	= "$DIR/help-admin";

もし、リモートの管理者にパスワードを要求するなら、

	$REMOTE_ADMINISTRATION_REQUIRE_PASSWORD = 1; 

０にすれば パスワードチェック をおこなわない設定です

このチェックに使うパスワードファイルです。

	$PASSWD_FILE = "$DIR/etc/passwd";

注意：
$REMOTE_ADMINISTRATION_REQUIRE_PASSWORD は
REMOTE_AUTH (TYPO で REMORE_AUTH) が古い変数名。
＃Backward compatible にしてあるので、どっちの変数でもいいんですけど


.S	approve password command SYNTAX
.key	{approve}
.key	{for SID approve}
.label	admin:approve

どっちもどっちですが、

   password認証して、その後は全部認証したものとみなす
   毎回 password を書く 

＃どっちもそれなりに面倒くさいが…

ようは 毎回 password を書く っとことです。
これは Listserv もどきインターフェイス拡張のために付け加えられました


.S	アドミンモードでのアドレスの複数マッチ問題について 
.key	アドレスの複数マッチ
.key	アドミンコマンド

OFF コマンド等は multiple-matching を認めません。
つまり、

	fukachan@aoi.chan.panic
 と
	fukachan@uja.aoi.chan.panic

は両方ともマッチしてしまう時、チェックをきびしくしてひとつのアドレスだ
けを選ぶのがデフォールトの挙動ですが、

アドミンコマンドの時だけは multiple です。
つまり、上の両方のアドレスを一気に消して、新しく add したりできるわけです。


.S	アドミンのコマンド一覧

# admin pass パスワード（もしパスワードを必要とする設定なら）
# admin passwd 新しいパスワード（もしパスワードを必要とする設定なら）
# admin help		管理者コマンドヘルプを取り寄せる（このファイル）
# admin log		ログを取り寄せる
# admin add address	address の人をＭＬに登録する
# admin off address	address の人をＭＬ一時おやすみにする
# admin on address	address の人のＭＬ一時おやすみを解除
# admin bye address	address の人をＭＬメンバーから削除
# admin addadmin address
# admin addpriv  address	address の人を管理者メンバーとして登録
# admin byeadmin address
# admin byepriv  address	address の人を管理者メンバーから削除
# admin dir		ＭＬのある場所の階層全部のリスト（ls -lR）
# admin ls options	ＭＬのある場所のリスト（ls）
# admin ls -l
# admin ls -l spool	のようにオプションも可
# admin remove filename	ＭＬのある場所の filename というファイルを削除
# admin get filename	ＭＬのある場所の filename というファイルをとってくる
# admin put filename	ＭＬのある場所の filename というファイルを置く。
# admin rename filename1 filename2 
		filename1 というファイルをfilename2 という名前にする


.S	アドミンのコマンド一覧(approve) 2
.label	admin:approve-2

# approve password commands 

は ２行分

# pass  password
# admin commands

と同じです。全部上のコマンドで # admin を # approve password に置き換
えれば同じです。


.S	パスワードファイルの設定
.label	set-passwd

fmlのソース/bin/passwd.pl 

っていうのがあります。使い方は、

passwd.pl [-i] [-p password-file] username new-password

例：
% passwd.pl fukachan@phys.titech.ac.jp uja
で、

fukachan@phys.titech.ac.jp 32ZrV/XvYj1kY

こういう fukachan@phys.titech.ac.jp 用のエントリを 

	fmlのソース/etc/passwd

につくります（デフォールト）。もし、他の場所なら 

% bin/passwd.pl -p /some/directory/passwd fukachan	uja

のように -p オプションで指定してください。


.S	パスワード設定:昔のドキュメント採録:

#lib/remote/README に 1例が詳しく書いてありますんで、そちらも参照く
#ださい。(Written by oota@pes.com1.fc.nec.co.jp)
****************************
passwdの作り方書いてなくて、、もうしわけないです。

<初期パスワードのつくりかた>
passwdの文字列を uja とすると(11という数字に意味はない、なん
か適当は数字です、DESのアルゴリズムの番号です)
% perl -e 'print crypt("uja", 11)' 
のOUTPUT をencrypted passwdとして使って下さい

etc/passwd の中身のシンタックス(デフォールト)は
mail-address	encrypted-passwd 
です。
 
初期パスワードをなんらかの形で相手に与えてすぐに変えてもらうこ
とが重要でしょう
#できればメールでなく電話とかがいいんだろうなぁ
 
mailの エラー時 ヘッダしか普通はpostmasterにはいきません。
本文にパスワードを書くようにしたのはそのためですが、
運悪くいってしまうかもしれません。気をつけて下さい。
#securityはsmtpもtelnetもどっこいどっこいってか;-)

% chmod 600    etc/passwd
% chown 管理者 etc/passwd
もわすれずに


.S	ログファイルがＭＬ本体と管理者コマンドで同じなんだけど…

ログファイル ってＭＬ本体と管理者コマンドって同じファイルを使ってるん
ですよね。分けた方がいいのかなぁ？？？

もし変えたいなら
libhml.pl で こうなってますんでいじってください
      if(/^admin$/io) {
	  # if you would like to change logfile for admin commands.
	  # $LOGFILE	= "$DIR/log-admin"; 


.S	リモート管理の古い設定への注意
.key	リモート管理の古い設定への注意

古い設定のままでは動きません。ごめんなさい

昔は、リモートでの管理は eval へ渡すフックをしかけることで実装していま
した。 
いまでは、$REMOTE_ADMINISTRATION で ON, OFF できるようにしました。
(libfml.pl 1.5.2 から)

以下に出てくる $REMOTE_ADMINISTRATION_REQUIRE_PASSWORD は、
REMOTE_AUTH (TYPO で REMORE_AUTH) が古い変数名。
#Backward compatible にしてあるので、どっちの変数でもOKですが


.S	Client インターフェイス
.xref	fmlctl.pl

FmlRemoreControl はリモートでMLをコントロールするためのインターフェ
イスです。
Bourne Shell script です。
先頭の ML というとこをろMLのアドレスにして使って下さい。
INPUT したコマンドをMLに投げます。

INPUT> ls

    は

% echo "# admin ls" | mail -v $ML

と同じです


.# $Id$
.# Copyright (C) 1993-1996 fukachan@phys.titech.ac.jp
.# Copyright (C) 1996      fukachan@sapporo.iij.ad.jp
.# fml is free software distributed under the terms of the GNU General
.# Public License. see the file COPYING for more details.
