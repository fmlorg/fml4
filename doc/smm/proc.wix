.C	コマンドについて
=E.C	Commands

この章ではコマンドの定義などについて解説します。


.S	コマンドの一覧
=E.S	Available command index
.k	コマンドの一覧->helpファイル

help ファイルを見て下さい:-)
=E
Please see "help" file for standard commands list.
doc/help.jp (Japanese) and doc/help.en (English) are available.

.S	ＭＬで使えるコマンドを増やすor減らす
=E.S	How to Add or Remove Available Commands
.l	add-procedures
.xref	add-admin-procedures

config.ph でコントロールできます。いくつかの変数がありますが、次のよう
に作動します
=E
You can set up what commands you add or remove in config.ph.
FML interprets it as follows:

   1	@PermitProcedure が定義してあるなら
	@PermitProcedure で許しているコマンドだけを設定します。
	もし、定義されていなければデフォールトのすべてのコマンドが
	利用可能になります。
	これらの設定はグローバル変数の %Procedure に定義されます。
=E
   1 	If @PermitProcedure is defined, FML disables all commands 
	and permits commands defined in it. 
	If not defined, %Procedure (default) is used which is 
	automatically set in the first phase of FML command routine

   2	%LocalProcedure が定義されているなら
	1 で定義された %Procedure を %LocalProcedure で上書きします。
=E
   2	%LocalProcedure overwrites %Procedure.

   3	@DenyProcedure が定義されているなら
	@DenyProcedure のコマンドだけを使えなくする
=E
   3 	If @DenyProcedure is defined, remove commands defined in
	@DenyProcedure from %Procedure.

Example:

	○ guide と summary のみを使用可能、それ以外はすべて使用不可
=E
	permit only "guide" and "summary", but disables other commands.

	@PermitProcedure = ('guide', 'summary');

	○デフォールトに加え自分で定義した hack コマンドも使える
=E
	add my "hack" command. You need to write subroutine "ProcHack".

	%LocalProcedure = ('hack', 'ProcHack');

	もちろんこの場合はどこかで sub ProcHack { ...; } があって
	この関数を用意しておく必要がある。

	○デフォールトの中で get 関係は使えなくする
=E
	Disable "get" commands but others are available.

	@DenyProcedure = ('get', 'send', 'mget', 'msend');

	○ メンバーリストなどを取れないようにする
=E
	Disable commands to retrieve member lists

	@DenyProcedure = ('member', 'active', 'members', 'actives');


.S	ハッシュ %Procedure の特殊なキー
=E.S	Special keys available in %Procedure
.l	%Procedure-special-key

ハッシュ %Procedure には特別な書き方があります。通常は
=E
%Procedure has a special format. Usually the key and value of the hash
is as follows:

	ハッシュのキー	値
	----------------------------------------
	コマンド名	関数名
=E
	hash key	the corresponding value
	----------------------------------------
	command name	the corresponding Function name (e.g. ProcHoeHoe)

ですが、
=E
FML defines and uses the following special syntaxes.

	ハッシュのキー	値
	----------------------------------------
=E
	hash key	the corresponding value
	----------------------------------------

	key		Function Name (e.g. ProcHoeHoe)
	#key		file name
	r#key		1 or 0
	r2a#key		1 or 0
	l#key		the maximum request for key in one mail

○ #key はファイルを送り返す関数でのファイル名です。実はファイルを送り
返す関数は共通なので、これを利用すると好きなファイルを送り返す新しいコ
マンドがほいほい作れます。
=E
'#key' is a file name to send back since the function to send back a
file is common and the file to send differs. You can use this to
define a new command to a special file.

例: "help" コマンドは $HELP_FILE ("#help"の値) を送り返す。
=E
Example: "help" command definition. 

		    # help for usage of commands
		    'help',	'ProcFileSendBack',
		    '#help',	$HELP_FILE,


Example: add your new command "news" to send back "$DIR/news" file.
.xref my-file-sendback-command

%LocalProcedure = ('news',	'ProcFileSendBack',
		   '#news',	"$DIR/news");
			
○ r#key はこのコマンドを実行したら実行のログをユーザーに送り返します。
=E
* If "r#key" is defined, FML sends the trace log of the command to the
user who submits the command mail.

例: "off" コマンドではログをユーザーに送り返す。
=E
Example: "off" command definition

		    'off',    'ProcSetDeliveryMode',
		    'r#off', 1,

○ r2a#key はこのコマンドを実行したら実行のログを管理者に送り返します。
* If "r2a#key" is defined, FML sends the trace log of the command to
$MAINTAINER. 

例: "bye" や "unsubscribe" のコマンドの実行ログは管理者にも送る。
=E
Example: "bye" and "unsubscribe" to notify the log to maintainers.

		    'bye',             'ProcSetMemberList',
		    'r#bye',           1,
		    'r2a#bye',         1,
		    'unsubscribe',     'ProcSetMemberList',
		    'r#unsubscribe',   1,
		    'r2a#unsubscribe', 1,

Ex 2: "chaddr" case.
		    'chaddr',         'ProcSetMemberList',
		    'r#chaddr', 1,

例: "get" は１メールで１０個まで
=E
Example: "get" command requets is up to 10 in one mail.

	             'l#get',      10,

.S	コマンドの # syntax 
=E.S	'# syntax' is required?
.k	# コマンド シンタックス

.if LANG == ENGLISH
Usually, '# ' part is NOT needed. In default FML sets up
"listname@FQDN" for post and "listname-ctl@FQDN" for command.

If both posting and command addresses are the same, a keyword for the
switching between post function and command function is required. '#
syntax' is the key of switching.

.fi
.if LANG == JAPANESE
デフォールトではポストするＭＬとコマンド用のＭＬは別々に用意されます。
配送用のアドレスとコマンド用のアドレスが同じ場合($MAIL_LIST と
$CONTROL_ADDRESS が同じ場合)に問題となります。

この場合記事とコマンドを見わける必要があります。その切替えのキーワード
が"# syntax"です。これは最初の3行のどこかに "# command(英文字Only)" シ
ンタックスを見つけた場合にコマンドとして認識することで区別しています。

○ # でモードを切替えるのが不必要な場合

makefml が作る listname-ctl アドレスはコマンド専用なので要りません。も
ちろんあっても # 部分は勝手に解釈するのでどっちでも構いません。
Listserv 形式のシンタックスをうけつけるように拡張されたインターフェイ
ス(libexec/fmlserv.pl)を使う場合も無関係です。

“コマンド専用のアドレスにメールが来た場合”は必要がない場合には以下の
ような設定の場合がありえます。

	1. config.ph に $COMMAND_ONLY_SERVER = 1;
	2. fml.pl に --ctladdr がついている
	   (include-ctl はそうなっている)

コマンド専用のアドレスで"# command" も "command" も同じコマンドになり
ます。またコマンドのシンタックスで

	# get 1
	#get 1

は同じです。同様に

	# help
	#help

を同じものにみなします。

.key	$COMMAND_SYNTAX_EXTENSION
	$COMMAND_SYNTAX_EXTENSION = 1;

両方解釈するなら１、"# summary" みたいな形式だけなら０
.fi

コマンドはデフォールトで "# get 1" と "#get 1" は同じものとみなしてい
ます。# で始まるか否かだけで判定しています。--ctladdr で fml.pl を呼び
出している場合(例えば include-ctl を使っている場合)は # も必要ありませ
ん。
=E
To configure that "# command" is the same as "#command", set 

	$COMMAND_SYNTAX_EXTENSION = 1; (default 1)
.k	$COMMAND_SYNTAX_EXTENSION

がデフォールトです。


.S	Subject: にコマンドを書く場合
=E.S	Commands are Available In Subject:?
.k	$USE_SUBJECT_AS_COMMANDS
.xref	STDIN->fml

	$USE_SUBJECT_AS_COMMANDS = 1;

の場合は、Subject: の部分をコマンドとみなします。コマンドと思えるキー
ワードを見つけた場合は、コマンドモードへ移行します。この場合も普通の 
subject なのか否かを判定する必要があるので'#' で切り分ける論理を応用し
ます。
.xref	STDIN->fml
=E
enables FML to understand Subject: as a command.  If FML needs to
determine the usual subject: or not, we apply the same logic shown in
the previous section. The switching between command mode and not, we
need to trap

	# で始まり、英文字が続く行 (\s*\w+\s|^\#\s*\w+)
	# で始まり、$CHADDR_KEYWORD のキーワード
=E
	beginning with '#', 
	English words or $CHADDR_KEYWORD (chaddr is special)

$COMMAND_ONLY_SERVER がセットされている場合は、キーワード # の有無に関
わらず、上記のキーワードを探索します。
.xref	$COMMAND_ONLY_SERVER
=E
When $COMMAND_ONLY_SERVER is set or include-ctl("fml.pl --ctladdr "),
ignore the switching key '#'.

.S	一つのメールで使えるコマンドの数の上限
=E.S	Maximum Number Of Commands In On Mail
.k	$MAXNUM_COMMAND_INPUT
.xref $INCOMING_MAIL_SIZE_LIMIT

一回のメールで使えるコマンドの個数の上限は $MAXNUM_COMMAND_INPUT です。
もし未定義なら無限大です:)。デフォールトは未定義で何個でも書けます。
=E
If $MAXNUM_COMMAND_INPUT is defined, the maximum number of commands in
on mail is $MAXNUM_COMMAND_INPUT. If not defined, the number is
infinite:). In default INFINITE!

.S	間違ったコマンドを送ってきた人への警告
=E.S	Warning for Invalid Commands

デフォールトでは警告しません。
=E
In default, FML does not warn against invalid commands and ignore
them. If you want to warn it, set

	$USE_INVALID_COMMAND_WARNING = 1; (default 0)
.k	$USE_INVALID_COMMAND_WARNING
.k	USE_WARNING 

を設定すると間違ったコマンドへの警告メールをだします。これは signature 
を自動的に付ける設定をしている場合への対処です。一般には exit 等で明示
的にコマンド指定を終わらせるのを推奨するかMUAでシグニチャーを自動的に
つけないようにするのを推奨するのがよいでしょう。

.S	コマンドの終り(シグニチャア対策)
=E.S	End of Command Sets Against Signature
.key	signature 対策

=E
Please use one of them to show the end of commands sequence. 

	exit 
	end
	quit

というコマンドを追加しました。このコマンドのところでアクションは終了し
ます。signature があってもいいように、こうしました。

.S	もし有効なコマンドがないメールが来たら？
=E.S	If an empty effective command mail comes in ?

ヘルプファイルを送り返します。
=E
FML sends back help file.

.S	library コマンド
=E.S	Library Commands for Special Purposes
.l	library
.k	library コマンド

library コマンドはＭＬの中に配送されないsubのＭＬを含んでいるような状
態です。次のようなコマンドがあります(help ファイルも見てね)
=E
FML does not accept "put" style commands in default for security.
So "library" commands are defined in @DenyProcedure (see config.ph).
If you use "put" style commands, you can use "library" commands series.
==
"library" commands are a sub-mailing list. This command has its own
summary file and archive directories. "put" file is stored in
$LIBRARY_ARCHIVE_DIR ($SPOOL_DIR for ML) and summary file is
$LIBRARY_DIR/summary. The system is closed under $LIBRARY_DIR.
This system uses the same routines as the usual ML. Hence the file
name is number. Also FML does not permit the freedom of file names to
put for security.

.if LANG == JAPANESE
	library put	このコマンド以降の部分を記事として保存
	library get 	ファイル名(数字)
	library summary	
	library index	libraryとして蓄えられた記事の
			サマリ・ファイルを送り返します。
	library unlink [番号] 指定番号の記事をライブラリーから削除する
	library delete [番号] 同上
	library rm     [番号] 同上
.fi
.if LANG == JAPANESE
	library put	put a file (after this line)
	library get 	file to get (number)
	library summary	
	library index	summary file (index file) in library 
	library unlink [number]	remove "number" file in library
	library delete [number]
	library rm [number]
.fi

等があります。 削除にあたっては From: のアドレスがそのファイルをかつて
突っ込んだ人と同じである必要があります。
=E
Removing needs the authentication that From: address is the same
person which submitted the file in the past.

ファイル名が数字なのは一つにはＭＬ本体と全く同じように実装しているから
です。そして security 上ファイル名をユーザが自由に選ぶことはさせません。
やるなら submit した後で管理者が後で名前の変更 rename(2) をするべきで
す。
=E
Please rename a number file name to arbitrary file name by hand if you
like it.

$DIR の代わりに対応するものとして次のものがが定義されています。
.k	$LIBRARY_DIR
.k	$LIBRARY_ARCHIVE_DIR

	$LIBRARY_DIR		library コマンドの HOME ($DIRに相当)
	$LIBRARY_ARCHIVE_DIR	library コマンドの SPOOL($SPOOL_DIRに相当)
=E
	$LIBRARY_DIR		library HOME  (<=> $DIR)
	$LIBRARY_ARCHIVE_DIR	library SPOOL (<=> $SPOOL_DIR)

library コマンドの特定のコマンドを使えないようにするには 
@DenyLibraryProcedure に定義します。シンタックスと理屈は 
@DenyProcudure と同様です。
.xref add-procedures
=E
To disable one of library commands, set @DenyLibraryProcedure.
How to use this array is the same as @DenyProcedure. 
.xref add-procedures

例: 'library put' を使えないようにする。
=E
e.g. disable 'library put' command.

	@DenyLibraryProcedure = ('put');

				
.S	index コマンド
=E.S	index command
.l	index
.k	index コマンド
.k	$INDEX_SHOW_DIRNAME
.k	$INDEX_FILE 

取り寄せられるファイルの一覧を返します。もし $DIR/index ($INDEX_FILE) 
が存在する場合はそれを使います。そうでない場合は$SPOOL_DIR
@ARCHIVE_DIR の内容を調べて返します。
=E
If $INDEX_FILE ($DIR/index) exists, FML sends back it as an index of
archives FML has. If not exists, FML scans $SPOOL_DIR and @ARCHIVE_DIR
not recursively and reports the result.

$INDEX_SHOW_DIRNAME がセットされている時は ($DIR からの相対的な)
directory 階層も表示します。デフォールトではファイル名とそのサイズだけ
です。これ以上細かい制御を行なう場合は $INDEX_FILE を書く方が良いでしょ
う。
=E
If $INDEX_SHOW_DIRNAME is set, FML scan	is recursive.

.S	listname-command (qmail の場合のおあそび)
=E.S	listname-command (qmail case; a trick) 

makefml が .listname-default というサンプルを作りますが、これを 
/var/qmail/alias に入れてさらに config.ph で
=E
makefml craetes a sample .listname-default. If you copy it to
/var/qmail/alias/ and set 

	$USE_DOT_QMAIL_EXT = 1;

を設定すると listname-command のようなシンタックスが使えるようになりま
す。
=E
in config.ph, you can use listname-command-argument for "command
argument" to listname-ctl. For example, 

	send "get 100 " to elena-ctl@baycity.asia

は次のアドレスと同じにできます。
=E
is the same as

	send "" to elena-get-100@baycity.asia

単に qmail をいじくってるうちにできたのでそのままいれてあります。でも 
mget 100-110 とかはどうしよう:D (getだけは例外にしなきゃだめかのぉ）

またコマンドの - が使えないので
=E
"-" is not used, so fml recognizes

	elena-mget--1-3-mp@DOMAIN 

宛のメールを
=E
as a command

	"mget 1-3 mp" 

コマンドと解釈するようにしてあります。

.# $Id$
.# Copyright (C) 1993-1998 Ken'ichi Fukamachi
.#          All rights reserved. 
.#               1993-1996 fukachan@phys.titech.ac.jp
.#               1996-1998 fukachan@sapporo.iij.ad.jp
.# 
.# FML is free software; you can redistribute it and/or modify
.# it under the terms of GNU General Public License.
.# See the file COPYING for more details.
