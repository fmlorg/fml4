.C	Mail Traffic Information
.l	mti
.l	MTI

.S	How to

てっとりばやいカスタマイズを最初にいっておくと
=E
How to customize MTI ? The most important variables are

	$MTI_BURST_SOFT_LIMIT
	$MTI_BURST_HARD_LIMIT

の数字を小さくすると、少ない数のメールでも爆弾とみなすようになります。
デフォールトの数字は 1 程度でこの時は十数通程度集中してメールがくるか
否か程度が目安になっています。
=E
IF you change this value smaller, even small traffic can be a bomb.
In default the limit is about 1, sequential in-coming 12-15 mails is
the limit of a bomb or not.

.S	Traffic Monitor

トラフィックのモニターは(学術的興味は別として:)特に必要だとは思いませ
ん。が、トラフィックをモニタすることでメール爆弾(mail bombing)の自動検
出への応用などが考えられると思います。さらなる応用としてメールのループ
なども検出できるでしょう。
=E
FML 2.2 (after 2.1B) has internal traffic monitor system called "MTI".
It checks the traffic and detects intermittency (burst) effect of
traffic against a mail bombing. It is applicable to trap mail loops
for a bonus:) though several loop checks must reject the loop before
MTI routines.

Bombing チェックの第一歩は直観的に考えると「トラフィックが一気に大きく
なる時を捉えること」です。しかしこの論理ではUUCPやダイアルアップIPなど
で溜ったメールを一気に掃き出す必要のあるネットワークから出てくる場合や、
ネットワークエラーのために溜ったメールが一気に来る場合なども一気にメー
ルが来るため、正しいメールなのかそれともメール爆弾なのか区別がつかない
などの問題があります。でもそれはある程度はしょうがないので、UUCPやネッ
トワークエラーなども引っ掛けてしまう可能性を覚悟の上で使う必要がありま
す。
=E
Firstly to trap mail bombing is to detect the intermittency effect /
burst of mail traffic. This logic is effective except for the case
burst that traffic from network errors and hosts over UUCP or DIP
service.  We cannot determine the burst occurs from network errors or
bombings. We should observe the burst to assume the possibility that
we regard network errors as a mail bombing.

いづれの場合でも「意図的なアタックを自動検出できるか？」はどの程度 
fake されたメールが FML につっこまれるかに依存します。これはSMTPに認証
の能力がないからで、IP Spoofing も可能であれば fml.pl が起動された時刻
以外は全て fake も理論上有り得ます。
=E
In all cases, how effect MTI depends on the fake level of injected
mails.  Since SMTP has no authentication now, we cannot believe
anything except for the time when a mail kicks off fml.pl.

.S	Mail Traffic Information

MTI (Mail Traffic Information) はFML内蔵のメールトラフィックモニタシス
テムです。MTIは From: Return-Path: Sender: などの address やホスト情報
を KEY にしてメールがFMLを起動した時間やあるホストの通過時間を cache 
します。この情報を用いて MAIL BOMB ATTACK の監視ができるはずですが、前
述の理由により、うまい評価関数を探すのが非常に大変です。
=E
Mail Traffic Information (MTI) is FML built-in traffic monitor. It
monitors the traffic and logs (via Berkeley DB) the traffic in the
past 1 hours (default) with the date and From:, Return-Path:, Sender:
fields et.al.

.S	メール爆弾 (MAIL BOMBING) 判定評価関数
=E.S	MAIL BOMBING Evaluation Function

注意: 以下表記できないので TeX を一部織り混ぜて書く。
=E
Here we use TeX statements to show some mathematical concepts.

メールは時間軸に沿って fml.pl を起動する。この時系列について考える。
メール (m_i) が送られてきてFMLを起動した時間を t_i とし、そのメールの
ヘッダの Date: を d_i とする。ここで i は単なるインデックスでFMLを起動
した順番(正確にはFMLを起動してさらにロックがはずれ実際に処理された順番
になるが)としよう。
=E
Consider a time sequence of mails incoming to fml.pl. Let the time
when a mail m_i comes and runs fml.pl be t_i, the Date: time of the
mail be d_i. "i" is an index number. It has the same order as the
article sequence number ordering.

MTI では cache として それぞれのメールの t_i と d_i を対にしてキャッシュ
している。m_i は From: Sender: などのアドレスを KEY にしてキャシュして
いる。なお一定時間($MTI_EXPIRE_UNIT)経過後 t_i の情報はキャッシュから
捨てられる。
.k	$MTI_EXPIRE_UNIT
=E
MTI caches a set (t_i, d_i) for m_i. The key of database is addresses
of e.g. From:, Sender:, Return-Path:. MTI discards data entries after
$MTI_EXPIRE_UNIT (3600 sec in default).

MTIのデフォールトの評価関数では
=E
In default MTI evaluation function is 

	Σ 1 / | t_i - t_j + ε | 
=E
	\sum 1/  | t_i - t_j + \epsilon | 

の値を評価する。ここで ε は発散を防ぐためのものである。t_i - t_j は
FMLを起動した時間差だから、多くのメールが送り付けられ連続して起動した
場合には小さな値をとる。これを逆数にして和を取るのでFMLを連続して起動
した場合は大きい値をとることになる。この値がある閾値(threshold)を越え
ると BOMBING だとみなす。
=E
where \epsilon is against divergence. |t_i - t_j| is the difference of
time between when fml.pl runs.  It becomes smaller if mails comes
continuously. We sum up the inverse of it, so the sum becomes large if
the burst occurs. If the sum is over some thresholds, we think our
server is attacked!

この threshold には 0.2 などの値を設定する。この数字の選び方はかなり微
妙ではっきりとした方針は作れない。例えば
=E
This threshold is typically 0.2. The choice of this value is sensitive.
For example, we evaluate it in the following way

.if LANG == JAPANESE
		i=N
	E{t} =	Σ 1 / | t_i - t_j + ε | > Σ 1/M 〜 N/M
		i=1

	| t_i - t_j + ε | < M
.fi
.if LANG == ENGLISH
		i=N
	E{t} =	\sigma 1 / | t_i - t_j + \epsilon | > \sigma 1/M \sim N/M
		i=1

	| t_i - t_j + \epsilon | < M
.fi

と見積もると M = 10, N = 5 でだいたい N/M 〜 0.2 となる。つまり 0.2 は
10秒程度の短い間隔で来るメールが5通連続で来たらメール爆弾か否かの判定
の閾値とみなせる。
=E
where M = 10, N = 5. It yields N/M = 0.2. It means our limit is that
5 mails comes continuously in the time slice of 10 seconds.

この論理の明らかな問題点は 途中のネットワークのエラーやUUCP、DIPなど常
に接続されていないようなネットワークからメールが送られる場合で、この場
合は queue に溜ったメールが一気に送られてくることがあり得る。上の条件
だけではそれも BOMBING だとみなされてしまう。
=E
This logic has a problem. We cannot distinguish network errors and
bombings only based on the in-coming mails burst trap.

そのためメールヘッダの Date: フィールドの値 d_i を用いて同様な判定を下
すことを考える。つまり
=E
To distinguish network errors or bombing, we calculate a sum of
sequences d_i (Date:) in the same way. So consider

	E{d} =	Σ 1 / | d_i - d_j + ε |
=E
	E{d} =	\sigam 1 / | d_i - d_j + \epsilon |

を考えることにしよう。

普通にメールを書いて queue に溜め一気に送り出す場合を考えると Date: は
かなり飛び飛びの値をとるだろう。そのため E{t} は値が大きくても E{d} の
値は大きくはならないはずである。当然それがうまく判定されるような 
threshold をうまく選んでおく必要がある。
=E
Usually we edit a mail draft and post it on random time sequence.
Hence the time of Date: is random. When network errors delay mail
delivery, Date: is random (E{d} is small) and fml.pl runs in burst
(E{t} is large). When a real mail bomb attack you, both E{d} and E{t}
must be large.

E{d} でも、例えばださいMUAがあって同じ Date: 同じ Message-Id で複数メー
ルを出してしまうとすると、この時は d_i - d_j 〜 0、E{d} >> 1 になって
しまい一瞬でメール爆弾だと判定してしまうだろう。そのため実際のコードで
は発散を防ぐための ε を導入するのではなく
=E
A bad MUA may send plural mails in the same Date: ;_; In such a case,
E{d} >> 1 in one mail. We avoid this by limit the minimum for |d_i -
d_j |.

	Σ 1 / ( | d_i - d_j | < 3 ? 3 : | d_i - d_j | )
=E
	\sigma 1 / ( | d_i - d_j | < 3 ? 3 : | d_i - d_j | )

のように和を取っている。

.S	評価関数
=E.S	Evaluation Function (default)
.k	$MTI_BURST_SOFT_LIMIT
.k	$MTI_BURST_HARD_LIMIT

.if	LANG == JAPANESE
ここではデフォールトの評価関数について解説する。詳しくは前節参照。
ここで E{t} E{d} は上述の計算方式で計算したものとする。

	E{t}	fml.pl を起動した時刻の差の逆数を足したもの
	E{d}	メールヘッダの Date: の差の逆数を足したもの

を計算する。判定は以下のように行なう。
.fi
.if	LANG == ENGLISH
Let E{d} and E{t} be the same sum described above. 
We consider the following evaluation.
.fi

1	soft limit

	メールを出す大元で一辺に出す時は E{d} の方が一般に大きい
	E{d} < E{t} はネットワークエラーやUUCPの可能性がある
=E
	If mail bombing (as describe above)
	E{d} > E{t} or E{d} is nearly equal to E{t}.
	If E{d} < E{t}, network errors may occur.
	If E{d} > E{t} and E{d} > $MTI_BURST_SOFT_LIMIT, 
	mail bomb attack comes in, so we reject them.

2	hard limit

	条件 1 は Date: が fake されていれば役に立たない。
	そのため E{d} E{t} どちらかがある threshold を越えたら
	それ以外の条件を問わず bomb とみなす。
=E
	Condition 1 is not effective if the mail header is faked.
	So we use another absolute limit.
	If E{d} > $MTI_BURST_HARD_LIMIT or
	   E{t} > $MTI_BURST_HARD_LIMIT,
	we reject in-coming mails.

3 	">" (greater than) 

	">" (greater than) はある誤差の範囲で greater than 
	であるべきだろう
=E
	The value of sum up has some measurement errors. 
	We need some margin for ">" evaluation.

.if	LANG == JAPANESE 	
	if ( E{d} > E{t} ) {
		if ( E{d} > $MTI_BURST_SOFT_LIMIT) {
			メール爆弾に違いない
		} 
	}
	else {  # e.g. 条件 1 が成立しないように fake された時

		if ( E{t} > $MTI_BURST_HARD_LIMIT ) {
			メール爆弾に違いない
		}
		if ( E{d} > $MTI_BURST_HARD_LIMIT ) {
			メール爆弾に違いない
		}
	}
.fi
.if	LANG == ENGLISH
	if ( E{d} > E{t} ) {
		if ( E{d} > $MTI_BURST_SOFT_LIMIT) {
			mail bomb
		} 
	}
	else {  # if the mail header is a fake

		if ( E{t} > $MTI_BURST_HARD_LIMIT ) {
			mail bomb
		}
		if ( E{d} > $MTI_BURST_HARD_LIMIT ) {
			mail bomb
		}
	}
.fi

.S	MTIの設定変数
=E.S	MTI Configuration Variables

	$USE_MTI

MTI 機能を ON にする。これを enable しないと以下の機能は全て作動しない。
=E
Enables MTI function to work. If not set, MTI does not work.

	$USE_MTI_TEST (ベータテストの間だけ存在)

BOMBING と判定した場合に弾くか否か？βテストの間はこの変数をいれないと
弾かずにMTIの判断がログに残っていくだけです。ベータテストが終ったらこ
の変数はなくなり、自動的に弾くように変更されます。

	$MTI_BURST_SOFT_LIMIT
	$MTI_BURST_HARD_LIMIT

デフォールトの評価関数のパラメータ(上述)
=E
described above.

	$MTI_BURST_MINIMUM
.k	$MTI_BURST_MINIMUM

和を取る時に $MTI_BURST_MINIMUM 以下の値は $MTI_BURST_MINIMUM へ繰り上
げ。デフォールトは3 (3秒)。
=E
described above.

	$MTI_COST_EVAL_FUNCTION
.k	$MTI_COST_EVAL_FUNCTION

自分でカスタマイズした評価関数を呼び出すならこの変数に関数名をセットす
る。
=E
Evaluation Function you write.

	$MTI_COST_EVAL_HOOK
.k	$MTI_COST_EVAL_HOOK

HOOK

.S	トラフィックの最大値
=E.S	Maximum Limit of Traffic

MTIのおまけの機能として評価関数を Σ 1 と取ると単純に単位時間辺りの記
事数になる。これを評価し、あるLIMITを越えたら reject する。
単位時間は $MTI_EXPIRE_UNIT (default 3600 sec.) である。
=E
If the evaluation function is \sigma 1, we can count the mail traffic
in the unit time. The cost does not count the burst effect but is
the usual average. The unit is $MTI_EXPIRE_UNIT.

	$MTI_DISTRIBUTE_TRAFFIC_MAX
.k	$MTI_DISTRIBUTE_TRAFFIC_MAX

時間あたりの投稿数の最大値。
=E
The maximum of traffic of distribution mails from an address.

	$MTI_COMMAND_TRAFFIC_MAX
.k	$MTI_COMMAND_TRAFFIC_MAX

時間あたりのコマンドメール数の最大値。それぞれについて独立に設定できる。
=E
The maximum of traffic of distribution command mails from an address.

.S	その他
=E.S	Other variables

	$MTI_EXPIRE_UNIT
.k	$MTI_EXPIRE_UNIT

cache life time.

	$MTI_APPEND_TO_REJECT_ADDR_LIST
.k	$MTI_APPEND_TO_REJECT_ADDR_LIST

bomber と判定されたアドレスを $REJECT_ADDR_LIST ($DIR/spamlist) にも加
えるか？否か。デフォールトは NO 。というのは必ずしも From: のアドレス
ではないので $REJECT_ADDR_LIST に入れることに意味があるかどうかは不明
のため。
=E
If set, we inject the address we determined as a bomber to
$REJECT_ADDR_LIST ($DIR/spamlist). However it may be not effective
since $REJECT_ADDR_LIST is rejection based on From: address checks.

.S	ファイルなど
=E.S	Files

	$MTI_DB
.k	$MTI_DB
	$MTI_HI_DB
.k	$MTI_HI_DB

	$MTI_DIST_DB
	$MTI_HI_DIST_DB
	$MTI_HI_COMMAND_DB
	$MTI_COMMAND_DB
.k	$MTI_DIST_DB
.k	$MTI_HI_DIST_DB
.k	$MTI_HI_COMMAND_DB
.k	$MTI_COMMAND_DB

cache files.

	$MTI_MAIL_FROM_HINT_LIST
.k	$MTI_MAIL_FROM_HINT_LIST

$DIR/mti_mailfrom.hint というファイルにMTIのログをヒントとして残す。こ
れをどう使うかはまた別の問題。例えばこれを sendmail に check_mail のデー
タとして渡すなどの応用が考えられる。
=E
This file ($DIR/mti_mailfrom.hint) is a list we regard as a bomber.
It is a hint. How you apply this to your operation depends on you.

.S	カスタマイズ関数とハッシュデータ
=E.S	Arguments of function

ベータテストなので、後で仕様が変わるかもしれなひ:)
=E
Here is Beta test specification:)

    $fp = $MTI_COST_EVAL_FUNCTION || 'MTISimpleBomberP';
    &$fp(*e, *MTI, *HI, *addrinfo, *hostinfo);

	%Envelope	Envelope
	%MTI		アドレスと時刻
	%HI		ホストと時刻
	%addrinfo	来たメールのヘッダから解析した address 
	%hostinfo	Received: から割り出したホストの通過時間
			でも評価関数で使ってない;D
=E
	%Envelope	Envelope
	%MTI		address => time sequence
	%HI		host => time sequence
	%addrinfo	address
	%hostinfo	host evaluated from Received: fields

.# $Id$
.# Copyright (C) 1993-1998 Ken'ichi Fukamachi
.#          All rights reserved. 
.#               1993-1996 fukachan@phys.titech.ac.jp
.#               1996-1998 fukachan@sapporo.iij.ad.jp
.# 
.# FML is free software; you can redistribute it and/or modify
.# it under the terms of GNU General Public License.
.# See the file COPYING for more details.
