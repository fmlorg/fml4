.C	ファイルをまとめて操作する関数群 (mget と まとめおくり)
.l	mget
	
.S	mget options (help file より)

	mgetはそのコマンドごとに
	まとめおくりはユーザーごとに

送り方が指定できます。

help ファイルより抜粋

# mget 1-10,5みたいなsyntax 	[モード]	[時間間隔]
# mget 正規表現 		[モード]	[時間間隔]
			ファイルをまとめて送り返す
			スプールの記事や、
			(もしあれば)アーカイブにあるファイル
   引数：
	範囲を指定	1-10,12,15-100 1,2,10
			first first:10 last:30 100-last(mh的 Syntax)
	正規表現	e.g. * ? 1? 1?? 
	モード		gz tgz ish rfc934 b rfc1153 d unpack uf(default=tgz)
	時間間隔	送り返すメールが複数の時の間隔(default=300)	
   モード：
		オプションなしは tar+gzip で spool.tar.gz
	tgz	同上
	uf	PLAINTEXT(UNIX FROM)
	gz	GZIP(UNIX FROM)
	b	RFC934 format 	PLAINTEXT(mh-burst)
	rfc934	
	ish	lha + ish 
	lhaish
	i
	li
	lu	lha + uuencode
	lhauu
	unpack	PLAINTEXT(UNIX FROM)
	uu	UUENCODE
	d	RFC1153 format 	PLAINTEXT
	rfc1153	RFC1153 format 	PLAINTEXT


ここでは、これら
	複数のファイルを一辺に取り扱う方法
	そのフォーマットについての少し細かい点

に関して記述します。


.S	mget3 のデフォールトの変更
.k	mget3のデフォールトの変更
.k	$MGET_MODE_DEFAULT
.l	$MGET_MODE_DEFAULT

○ 複数のファイルを一つにする時のまとめ方のデフォールト

libsendfile.pl では

    local($mode)   = $MGET_MODE_DEFAULT || 'tgz'; # default

のようになっています。オプションで明示的な指定がない場合は

	tar して gzip かけるファイルフォーマット

で送り返されます。このデフォールトは $MGET_MODE_DEFAULT で変更できます。
定義して意味のある変数は 上述のmgetのオプションと同じ田と思っていれば
良いです。

正確には(libutils.pl中で定義されている) %MSendOpt というハッシュテーブ
ルのKEYです。
.k	%MSendOpt


○ アーカイブ (var/archive や library コマンドや…)の encoding デフォールト

spool とは別にＭＬのアーカイブがある場合があるでしょう。例えば

	電話番号簿(TEXT)
	１００個ずつにまとめたスプールの記事(BINARY)

このアーカイブを取り寄せる時のデフォールトは

	テキスト	$MGET_TEXT_MODE_DEFAULT
			(デフォールトは 'mp' MIME/Multipart)
			
	バイナリ	$MGET_BIN_MODE_DEFAULT
			(デフォールトは 'uu' uuencode された状態); 

.q
		$mode = -T $opt ? 
		    ($MGET_TEXT_MODE_DEFAULT || 'mp'): 
			($MGET_BIN_MODE_DEFAULT || 'uu'); 
.~q
	    

.S	mget3 インターフェイス:パターンマッチ戦略
.key	mget3
.label	mget3

	この時点で flock もはずれて、最後の最後
	あとは、&Notify だけが残っている

	MH風展開を実行
		e.g. 1,last:30 -> 1,70-100

	if V2 フォーマットでTRY
		e.g.
		spool/PLAIN-ARTITLE
		archive/100.tar.gz 
		等を探索
		return

	elsif ではそのパターンはアーカイブ？
		ほとんど Exact にアーカイブ内を探索
		return

	elsif V1 format 探索もＯＫ？
		なら、実行
		return

	else
		NO MATCH or V1 FORMAT ERROR


.S	プログラムのパス
.xref	order-of-option-effeciency, init-data-structure
.k	$TAR
.k	$UUENCODE
.k	$COMPRESS
.k	$ZCAT
.k	$LHA
.k	$ISH

多くのプログラムは下請けのプログラムを呼びます。これらはインストールの
時の make で自動的に検出され設定されるはずです。

しかし自分でチェックしながら config.ph に書くのは管理者として望ましい
態度です。sitede.ph 等で一回ちゃんと記述しておくのもよいです。

現在自動的に検出し設定されるのは次のコマンドです。 

	$TAR                           = "/usr/bin/tar cf -";
	$UUENCODE                      = "/usr/bin/uuencode";
	$COMPRESS                      = "/usr/bin/gzip -c";
	$ZCAT                          = "/usr/bin/zcat";
	$LHA                           = "/usr/local/bin/lha";
	$ISH                           = "/usr/local/bin/ish";


.S	mget3の送り返しプロセス
.k	mget3の送り返しプロセス

いくつかのファイルをまとめて送り返すプロセスの最終ステージは、次のよう
に行なわれます。

   ○  mget3 interface はロックがかかっている状態のうちに 
		
	$TMP_DIR に送り返すべきファイルを作っておく

なお $TMP_DIR に作られる中間ファイルは次のようなファイル名になっている。

	m:"モード名":"プロセスID"return.数字(分割されるため)

送り返すものが複数になった時のために”分割の数字”は必要であるのは自明
だが、一意にファイルを定めるためにはプロセスIDとモード名までがセットに
なる必要がある。というのは一つのプロセスで複数のモードで mget コマンド
を使うことができるからである。
		
   ○	ロックをはずす (&Unlock();)

というのは、送り返すプロセスが長い場合ＭＬ自体およびその後に来たもっと
手間のかからないプロセスさえもロックして止まてしまうのはいけないからで
ある。

   ○	$FML_EXIT_HOOK から mget3_SendingEntry を呼び出す。
.k	$FML_EXIT_HOOK
.k	&mget3_SendingEntry
.k	%mget_list
.k	$SLEEPTIME

mget3_SendingEntry は %mget_list に従い下位インターフェイスを呼び出す。

ロックははずれているので、複数の送り返しプロセスがどう時に走っても構わ
ない。

ファイルが分割されている場合、送り返しは $SLEEPTIME 時間ごとに行なわれ
る。mget コマンドで明示的に指定される場合以外はデフォールトの 
$SLEEPTIME が優先される。

注意：なお、通常いま送り返そうとしている中間ファイルが overwrite され
ることはありえない。異常な場合は有り得るだろうが…（そんな状態のOS下で
プロセスはマトモに動かないだろう）


.S	コマンドで単なるシンタックスエラーの警告をしない
.label	{USE_WARNING}
.key	$USE_WARNING

明示的に $USE_WARNING をセット
e.g. in config.ph

	$USE_WARNING = 1;

するとコマンドメールでの単なるシンタックスエラーの警告をしない

e.g. 
# helps 			←コマンドのエラーは警告
＃うじゃ			←シンタックスエラー警告なし
＃しぐにちゃ〜	uja@uja.ac.jp	←シンタックスエラー警告なし


.S	mget の送り返し時のファイルサイズ
.key	$MAIL_LENGTH_LIMIT

in libsendfile.pl

	$MAIL_LENGTH_LIMIT = 1000;

を変える。Internetならともかく、パソコン通信の人へも配送する時は気を使
いますよね。
＃最近は３０００らしいまで設定可能みたいです(e.g. NIFTY)
＃参照 http://www.iij.ad.jp/sapporo/staff/fukachan/fml/ の下
＃pc-van は何の問題もなかったと思いました（たしか）
   
1000行でだいたい50kくらいになります。


.S	UNIX FROM 形式
.l	UNIX-FROM

4.4BSD UNIX の sendmail は /usr/libexec/mail.local を使い各ユーザ(e.g. 
fukachan) 宛のメールを /var/mail/fukachan に保存しています。
この形式が UNIX FROM 形式です。$HOME/mbox も同様ですね。

MH の inc はこの形式のファイルを処理することを前提にしています。


.S	MIME/MultipartのBNF表現（RFC1521より）
.label	MIME-Multipart

   boundary := 0*69<bchars> bcharsnospace

   bchars := bcharsnospace / " "

   bcharsnospace :=    DIGIT / ALPHA / "'" / "(" / ")" / "+" /"_"
                 / "," / "-" / "." / "/" / ":" / "=" / "?"

   Overall, the body of a multipart entity may be specified  as
   follows:

   multipart-body := preamble 1*encapsulation
                  close-delimiter epilogue

   encapsulation := delimiter body-part CRLF

   delimiter := "--" boundary CRLF ; taken from Content-Type field.
                                   ; There must be no space
                                   ; between "--" and boundary.

   close-delimiter := "--" boundary "--" CRLF ; Again, no space
   by "--",

   preamble := discard-text   ;  to  be  ignored upon receipt.

   epilogue := discard-text   ;  to  be  ignored upon receipt.

   discard-text := *(*text CRLF)

   body-part := <"message" as defined in RFC 822,
             with all header fields optional, and with the
             specified delimiter not occurring anywhere in
             the message body, either on a line by itself
             or as a substring anywhere.  Note that the
             semantics of a part differ from the semantics
             of a message, as described in the text.>


.S	MIME/Multipartの見本


Date: Thu, 18 May 95 22:33:00 JST
From: Elena@phys.titech.ac.jp (Elena Lologrigita)
Subject: P R E S E N T
To: fukachan@phys.titech.ac.jp
MIME-Version: 1.0
Content-type: multipart/mixed;
	boundary="--Thu_18_May_95_22:32:56--"


----Thu_18_May_95_22:32:56--
Content-Type: message/rfc822

Date: Thu, 18 May 95 21:45:17 JST
From: fukachan@phys.titech.ac.jp
Subject: あほうどり
To: Elena@phys.titech.ac.jp (Elena Lolobrigita ML)
Message-ID: <19950518.01905.Elena.Lolobrigita@Baycity.asia>

「なんとなく いいかんじだな〜 そのほうがおもしろいし 」
につきますね、この番組
「明日に」でも「明日へ」でも「明日」でもない「あしたキックオフ」なんで
すよ（う〜ん、なんとなくわかるが（笑））

（ふ）：やっぱり、＃３、＃７、＃２３、＃２７、＃３２ ですか

----Thu_18_May_95_22:32:56--
Content-Type: message/rfc822

Date: Thu, 18 May 95 22:00:29 JST
From: Elena@phys.titech.ac.jp
Subject: あしたキックオフ
To: Elena@phys.titech.ac.jp (Elena Lolobrigita ML)
Message-ID: <19950518.01906.Elena.Lolobrigita@Baycity.asia>

はまるとあの変な雰囲気から抜けられなくなります（笑）やっぱり 
アミノテツロー の謎のマニアックな味？とでもいうのがこの番組が
一番全壊^H開してますね。
もちろん 脚本・シリーズ構成：山本優 あっての「フリーキック」です

----Thu_18_May_95_22:32:56----


.S	RFC934
.l	RFC934

rfc934	"Proposed Standard for Message Encapsulation"

mh の burstで複数の展開に展開できます。

例：
------- Forwarded Message

From: Anna
Subject: Mama told me

やっぱり「あほうどり」ですね。シリーズの核心です。
脚本：山本優	絵コンテ：アミノテツロー	演出：鈴木敏明

------- Forwarded Message

From: Elena
Subject: Albatoros

イングリッドは隼の妹という根も葉もあるような話が…（笑）

------- Forwarded Message


.S	RFC1153 digest 
.l	RFC1153
.k	RFC1153-digest

comp.sys.ibm.pc.digest とかでみるでしょ？あれです。RFC は aboutすぎて
読んでもよくわかりません;_;

例：
Date: Sat, 20 May 95 01:33:50 JST
From: Elena@phys.titech.ac.jp
Subject: Freekick
To: fukachan@phys.titech.ac.jp

GODAI BBS DIGEST	Sat, 20 May 95	Volume 95: Issue 120

Today's Topics:
	エレナさんの特技は？ 

------------------------------

Date: Sat, 20 May 95 00:00:31 JST
From: "Ken'ichi Fukamachi" <fukachan>
Subject: 	エレナさんの特技は？ 
X-Mail-Count: 01932

エレナさんの特技は水撒きだってば(^^) 水撒き

（ふ）「とんでもだめだよ、おにいちゃん。アルバトロスは風にのるんだ」

------------------------------

End of GODAI BBS Digest V95 Issue #120
********************************


.S	1153 のカスタマイズ
.k	librfc1153.pl
.k	&Rfc1153Custom($mode, *conf)

$RFC1153_ISSUE		ＭＬの記事番号ではなく1153形式で送り出す時の番号
$RFC1153_SEQUENCE_FILE	その番号を保存するファイル

	このルーチンが呼ばれるたびにカウンタは進みますが、
	前述のように各ユーザごとに1153で送る場合を考えると
	送り方はそれぞれ違うのだから
	番号はちゃんとつながってはくれません。
	これを解決する方法はありません

$RFC1153_LISTNAME 	まとめ送りする1153 digest につけるタイトル
$RFC1153_VOL		Volume 例えば96年度のまとめ送りなら Volume 96の
			ようなレベルの番号


$RFC1153_CUSTOM_HOOK	&Rfc1153Custom($mode, *conf) の中で
			行なわれるフック


&Rfc1153Custom($mode, *conf) の内部：

    ########## CUSTOMIZE BELOW ##########
    $issue     = $RFC1153_ISSUE    || 1;
    $listname  = $RFC1153_LISTNAME || "UJA";
    $vol       = $RFC1153_VOL      || $year;
    $IssueSeq  = $RFC1153_SEQUENCE_FILE  || 
	"$FP_VARLOG_DIR/IssueSeq"; # file to remember count;

    &GetTime;
    &eval($RFC1153_CUSTOM_HOOK, 'RFC1153 custom:');
    $issue = &Rfc1153GetSeq($IssueSeq);


.S	lzh + ish option
.key	lzh
.key	ish
.key	$LHA
.key	$ISH

	# mget 200-210 ish

の用に指定するとlzh して ish(s7 mode)したものを送り返します。

	$LHA = "/usr/share/bin/lha";
	$ISH = "/home/axion/fukachan/bin/ish";

等をどこかで（config.phとか）で設定して下さい。make 時に自動探索は一応
して設定されているはずですが確認はして下さい。


.S	SJIS にファイルを変換して送る （lzh + ish option）
.key	lzh
.key	ish

config.ph で $USE_SJIS_IN_ISH = 1; をセットしてください。

使う時は jcode.pl を INCLUDE PATH へいれておいてください。
^M ^Z もつけます。すべて、外部コマンドを使わずに自力でやります。


.# $Id$
.# Copyright (C) 1993-1996 fukachan@phys.titech.ac.jp
.# Copyright (C) 1996      fukachan@sapporo.iij.ad.jp
.# fml is free software distributed under the terms of the GNU General
.# Public License. see the file COPYING for more details.
