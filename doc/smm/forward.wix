.C	~/.forward でＭＬ
.l	.forward
.key	~/.forward
.key	$HOME/.forward

/etc/aliases をいじれないユーザや密かにＭＬを実行する:-)ユーザ向けの話
です。

.S	.forward での方法の概論
.label	{forward-intro}

~/.forward もsendmailは/etc/aliasesと同様に実行されます。
~/.forward に

"|/home/beth/rosy/ml/fml.pl /home/beth/rosy/ml /home/beth/rosy/ml" 

とかけば、 ＭＬを作ることができます。この場合 sendmail は 
fml.pl の STDIN にSMTPでもらったメールの内容を送りこみます。

この場合の問題は、自分自身へも配送するのでループ(bounce)問題をどう避け
るか? が問題になります。

.forward 方式では2通りの考え方ができます。

○	架空のユーザを作りその .forward を使う
	この場合ＭＬの名前は架空のユーザになります

○	自分のアカウントで受けて、ヘッダをみてＭＬ宛か否か？を
	判定して、ＭＬを実行する。


.S	架空のユーザーを作る

○	架空のユーザを作りその .forward を使う
	この場合ＭＬの名前は架空のユーザになります

~/.forward に include ファイルと同様の内容を書けば良いだけです。
注意することはこの場合

	MLのアドレス		==	架空のユーザ
	管理者のアドレス	==	他のアカウント

になるでしょう。

shell サービスのあるインターネットプロバイダならできますが、
そうでないところもありますから注意して下さい。


.S	自分のアカウントで実行する

自分のアカウントで受ける → フィルタで振り分ける
				 → 	自分のメールスプール
				 → 	ＭＬ１
				 → 	ＭＬ２

フィルタは何かのキーワードでＭＬ宛か自分宛かを判定する必要があります。
フィルタの話は .ptr{filter} を見て下さい。

例:
	Subject: [Elena]

Subject: に [Elena] を含むメールが来たらＭＬへ流すとか

	To: あなたのアカウント (ML-1)

が来たら ML-1 を見つけたら ML-1 へメールを流すとか、そういったキーワー
ド探索をフィルタでするということです。そしてマッチしなかった内容は全部
あなたのメールスプールいきということです。


.# $Id$
.# Copyright (C) 1993-1996 fukachan@phys.titech.ac.jp
.# Copyright (C) 1996-1997 fukachan@sapporo.iij.ad.jp
.# fml is free software distributed under the terms of the GNU General
.# Public License. see the file COPYING for more details.
