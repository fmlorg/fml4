.C	自動登録
.l	auto-regist

.S	Introduction
.k	自動登録のIntroduction
.k	$ML_MEMBER_CHECK

○ fml で "自動登録" といっているのは
.k	$FILE_TO_REGIST
.k	$MEMBER_LIST


   1 あるアドレスについて、
   2 すでにＭＬのメンバーであるかどうかをチェックして
	$FILE_TO_REGIST (デフォールトは $MEMBER_LIST)
	の中のアドレスについてチェックします
   3 もしメンバーでないならそのアドレスをＭＬに登録する
	$FILE_TO_REGIST (デフォールトは $MEMBER_LIST)
	に登録します。
   4 登録した場合にはガイド等を送ってあげる

   また、管理者へ登録した旨をメールで知らせます。

という一連の動作のことです。

なお、1997/02 以降の 2.1 GAMMA TEST (2.0 current) の自動登録には 
confirmation モードが実装されています(詳細は後述)。現在のお勧めはこの
モードを使うことです。このセクションでは通常の自動登録について述べます。


○ メンバーチェックおよび登録に使うアドレスは 

	From: にあるアドレス
or
	明示的にメールの本文中で指定されたもの

のいづれかです。RFC822的には Reply-To: があれば Reply-To: を使うべきだ
と思うのですが、危険なので使いません。それは、例えば Reply-To: ＭＬそ
れ自身をつけたまま登録要請をしてくる人が存在するために Reply-To: を信
じるのは危険すぎるためです。

また、それはユーザ用のメールインターフェイスの設定をなにげなしにうのみ
にしてしまうようなユーザ教育の敗因ともいえます。
”郵政省の郵便なら宛先、送り返して欲しい先を確かめないということがあり
うるでしょうか？…”


○ またガイド等を送り返すわけですが、config.ph には
	
	$WELCOME_FILE	= "$DIR/guide";	# could be "$DIR/welcome"
	$WELCOME_STATEMENT = 
	"Welcome to our $ML_FN\n You are added automatically\n";

という変数があります。

$WELCOME_FILE は送り返す歓迎の文章を書いたファイル (とりあえず、guide
にしておいてあります) で、また、そのメールの Subject が

	Subject: Welcome to our (Elena ML)
	 You are added automatically

のょうになります (since $ML_FN = "(Elena ML)")


.S	自動登録の仕方のvariation(登録するアドレスとキーワードについて)
.k	自動登録の仕方のvariation
.k	自動登録の仕方のvariation(登録するアドレスとキーワードについて)
.k 	自動登録に使うアドレスはどこから選ぶか？
.k 	自動登録に使うキーワードをSubjec: でキーワードを宣言してもらう
.k 	自動登録に使うキーワードをメール本文で宣言してもらう


variation は

	登録すべきアドレスをどこから選ぶか？
	登録アクションの起動にキーワード等を必要とするか？

により何種類も存在します。

   0 自動登録の宣言
.k	&DEFINE_MODE('auto');
.k	--auto
.k	$ML_MEMBER_CHECK

	config.ph で &DEFINE_MODE('auto');
		か
	$ML_MEMBER_CHECK = 0; 
		か
	コマンドラインで --auto 

	と指定します。

	これは config.ph で

		$ML_MEMBER_CHECK = 0; 

	と宣言することと同じです。
	なぜこの分かりにくい変数名の宣言(メンバーチェックをするの否定)
	かというと、もともと

	「ＭＬとは private communication なのだから管理者がリクエスト
	を吟味して手動で操作するのが筋だろう」

	という思想からメンバーチェックをするのがデフォールトだからです。


   1 自動登録を設定してそれ以外特に設定をしない時
.k	$DEFAULT_SUBSCRIBE

	From: からアドレスを割り出してそれを比較・登録に使います。
	$DEFAULT_SUBSCRIBE (デフォールトは "subscribe") で指定されるキー
	ワードでメール本文に

		subscribe your-mail-address 

	の形で登録したいメールアドレスを変更できます。
	From: と違うアドレスで登録したい時にこの方法で明示的に行なえます
	これから述べるキーワードを必要とする場合と違うのは 

		subscribe your-mail-address 

	のようなキーワードを含む書き方が"必須ではない"という点です。

	From: をみてメンバーでない人からのメールだった場合は自動的に
	メンバーに加えます。

	[歴史] この形式はもともとOFF会用MLなんかに便利です。
		例：「出席します」メールがそのまま流れる。



   2 自動登録のためには Subject: にキーワードを必要とする場合
.k	&DEFINE_MODE('autosubject');
.k	--autosubject

	config.ph で &DEFINE_MODE('autosubject');
	コマンドラインオプションで --autosubject
	この簡易モード宣言は

		$ML_MEMBER_CHECK = 0;
		$REQUIRE_SUBSCRIBE = "subscribe";
.k	$REQUIRE_SUBSCRIBE

	と同じです。この場合

	○ Subject: subscribe の時 From: のアドレス
	○ Subject: subscribe address なら、この address 

	をメンバーチェックおよび登録に使います。

	このいづれかのパターンにマッチしない場合は登録は行なわれず、
	登録の仕方が間違っているとユーザにメールが送られます。


   3 自動登録のためにはメール本文にキーワードを必要とする場合
.k	&DEFINE_MODE('autobody');
.k	--autobody

	config.ph で &DEFINE_MODE('autobody');
	コマンドラインオプションで --autobody
	この簡易モード宣言は

		$ML_MEMBER_CHECK = 0;
		$REQUIRE_SUBSCRIBE = "subscribe";
		$REQUIRE_SUBSCRIBE_IN_BODY = 1;
.k	$REQUIRE_SUBSCRIBE
.k	$REQUIRE_SUBSCRIBE_IN_BODY

	と同じです。この場合メールの本文に

	○ subscribe の時は From: のアドレス
	○ subscribe address なら、この address 

	をメンバーチェックおよび登録に使います。

	このいづれかのパターンにマッチしない場合は登録は行なわれず、
	登録の仕方が間違っているとユーザにメールが送られます。


.S	Confirmation モード (お勧め)
.l	confirmation-mode
.k	confirmation mode
.k	$CONFIRMATION_ADDRESS
.k	$CONFIRMATION_LIST
.k	$CONFIRMATION_RESET_KEYWORD
.k	$CONFIRMATION_EXPIRE
.k	$CONFIRMATION_KEYWORD
.k	$CONFIRMATION_SUBSCRIBE
.k	$CONFIRMATION_FILE

Confirmation (登録の確認) は自動登録をいきなりは行なわず、リクエストへ
対し一旦「パスワードつきの確認メール」をリクエストしてきたメールの 
From: のアドレスへ返します。処理の流れは次のようになります。

1	subscribe request

リクエストでは心理的なファクターを考慮し、次のようなリクエストを送って
もらいます。

	subscribe あなたの名前 (注意: Email Address ではなくあなたの名前)
例：
	subscribe Ken'ichi Fukamachi

のようなリクエストを送ってもらいます。$CONFIRMATION_SUBSCRIBE でこの 
subscribe というキーワードは変更できます。

2	reply from fml server

その一度めの登録リクエストに対し次のような行(この数字↓はあくまでも例
です)

	confirm 84682771 Ken'ichi Fukamachi

を含む reply が From: のアドレスに返ります。 
「このメーリングリストに登録をしてもよいか？を確認するメール」です。
これは「勝手にメーリングリストへ登録されてしまう」等のいたずらへの予防
策です。

また reply にはこのモードの説明ドキュメント $CONFIRMATION_FILE
($DIR/confirm) が含まれて送られます。


3	confirmation 

あなたがこのメーリングリストへの参加確認のメールを受けとったなら、

	confirm パスワード(数字) あなたの名前

”この行だけ" を含むメールをもう一度登録用のアドレス 

	$CONFIRMATION_ADDRESS

へメールを返してもらいます。
通常 $CONTROL_ADDRESS でほう(fmlserv か $MAIL_LIST かもしれませんが)。

そうするとリクエストを出したユーザからの確認が得られたとみなし、サーバ
は From: のアドレスを登録します。

なお "confirm" というキーワードは $CONFIRMATION_KEYWORD で変更できます。

[失敗した時最初からやり直したい場合]

	confirm パスワード(数字) あなたの名前

のメールをなくしてしまったとか、分からなくなってきたので最初からやりな
おしたいという場合は、”最初から”つまり

	subscribe Ken'ichi Fukamachi

を送ることからやり直してもらえばＯＫです。なお confirm reset
($CONFIRMATION_RESET_KEYWORDで設定) というコマンドで同じことができます
が、まぁもう一度 subscribe してもらえばよいでしょう。


.S	登録とメンバーチェックに使うファイルについて
.k	$MEMBER_LIST
.k	@MEMBER_LIST
.l	@MEMBER_LIST

自動登録の場合はactivesを使わずmembersファイルがmemberとactivesの両方
を兼任する形になっています。

	$FILE_TO_REGIST($MEMBER_LIST)

に対して登録を行ないますが、メンバーチェックは

	@MEMBER_LIST

のファイル群に対して行ないます。これを利用するといろいろなことができる
はずです。

簡単な例： 実は fml.pl のデフォールトは

    @MEMBER_LIST = ($MEMBER_LIST, $ADMIN_MEMBER_LIST);

です。つまりリモートで管理する権限のある人をSETUPしたら、メンバーリス
トがなくてもリモートでＭＬのConfigができます。


また、confirmation モードでのリクエスト要求は

	$CONFIRMATION_LIST

というファイル(デフォールトは $DIR/var/log/confirm)に保存され、

	$CONFIRMATION_EXPIRE

の時間(デフォールトは一週間)の間に reply が返ってくれば有効です。


.S	自動登録した際そのメールをフォワードするか否か？
.key	$AUTO_REGISTERED_UNDELIVER_P
.k	$AUTO_REGISTERD_UNDELIVER_P


「subscribe」としか本文にないメールは流したくないので、自動登録のデフォー
ルトでは登録要請をしているそのメールをＭＬへ流しません。管理者へその旨
を通知するだけです。

また自明ですがこの「フォワード処理をするか？否か？」は「どのアドレスを
登録に使うか？」の動作とは独立な設定です。

フォラードしたくないなら

	$AUTO_REGISTERED_UNDELIVER_P = 1;

そうでないなら 0 です。

しかしながら、流すという設定をしても、subscribe だけのメール (じつは8
行)は流しません。管理者以外は見てもうれしくないという配慮からです。
＃off 用ならともかく『subscribe』と signature 4行くらいしかなかったり
＃するメールを流してもしょうがないです。

8 = 1 + 3行本文 + 4行シグニチャア ということで、デフォールトでは

	$AUTO_REGISTRATION_LINES_LIMIT = 8; 

のように定義されています。つまり 8 行を越えたメールはながれますが、そ
うでないとながれません。

これを -1 にしておけば、たとえ 中身の無いメールでも流れます;-)
＃注意： 0 だと、8 に変更されてしまう

なお、TYPOで $AUTO_REGISTERD_UNDELIVER_P になっている version が昔の 
fml にはありえます _o_


.S	メンバーチェックはしないけど自動登録はしたくない(+ trick)
.l	+trick
.key	+ トリック
.key	/etc/aliases ＋ アーカイブ

現在では配送するだけのモード設定というのがあるので、listname と 
listname-ctl と２つのアドレス(デフォールト)を使えるなら、
これを使うより配送用とコマンド用をわけた方が良いと思います。
例: --distribute もしくは config.ph で &DEFINE_MODE('distribute') 
.xref --distribute

そういう観点では backward compatibility という趣はあります。

使い方: members ($MEMBER_LIST) に

	+

と書いておくと、この行に出あった時点で認証ＯＫとなります。

つまり + を書いておくと、

	$ML_MEMBER_CHECK  = 1;

メンバーチェックするモードでもメールを素通しします。
＃シンタックスはNISにならっているです:-)

この時デフォールトでは誰にでもコマンドが実行できるようにはしていません。
ＭＬのメンバーでない人に解放しているからといってコマンドも実行させてよ
いとは限らないからです。

    	$PROHIBIT_COMMAND_FOR_STRANGER = 1;
.k    	$PROHIBIT_COMMAND_FOR_STRANGER

という変数が定義されています。これを 0 にすればコマンドが使えるように
なります。コマンドラインでは、これを 0 にするための

        --caok
.k        --caok

＃CAOK == Command Anyone OK

が用意されています。


.S	複数アドレスから投稿だが配送先は一つ(自動登録モード)
.k	複数アドレスから投稿だが配送先は一つ(自動登録モード)
.xref	fml-file-structure
.key	skip
.key	s=skip
.label	auto-regist-2

自動登録では見知らぬアドレスは全部新しい人とおもってしまうのですが、

	複数アドレスから投稿可能だが
	配送先ははある一つのアドレスに送って欲しい

という場合を考えて、members(自動登録では actives と兼任) で

	# fukachan@phys.titech.ac.jp
   および
	fukachan@phys.titech.ac.jp	skip

というシンタックスは fukachan@phys.titech.ac.jp をメンバーとして扱いま
すが、配送先にはしません。

つまり

	fukachan@phys.titech.ac.jp	skip
	Elena@phys.titech.ac.jp	
	# Pollyanna@phys.titech.ac.jp

という $MEMBER_LIST のファイルがあるとすると、fukachan, elena,
pollyanna のどのアドレスからでも投稿はできるが、配送は elena にしか行
なわれないということになります。

なお、今の話とは無関係ですが 

fukachan@phys.titech.ac.jp	matome

の行も「まとめ送りの人だから」リアルタイムの配送の対象にはなりません。


.S	サーバをインストールしたホストからのメンバーの自動登録ができない
.k	user@domain でないと自動登録できない
.k	サーバをインストールしたホストからのメンバーの自動登録ができない
.k	user@domain 形式でないメールアドレスは登録の対象になるか？
.l	rejct-address-in-autoregist

この話は 
	user@domain 形式でないメールアドレスは登録の対象になるか？ 
という問題に還元されます。

RFC82 に従い user@domain 形式でないメールアドレスは ILLEGAL とみなすべ
きです。つまりこれに対して何らかかの Operation を実行するのはよくない。
と考えられます。

localhost とからとか条件をつけて、$PeerAddr を利用すると少しまともな
気がしますが
.xref $PeerAddr

user@domain フォームでない ILLEGAL なメールアドレス がすどおりして、サ
イトを越えて Deliver されてしまうようなこともありうると考えられます。
＃もちろんよくないが実際に出来てしまう。

よって変な補整を加えてしまうとかえってまずいとおもうんです。そういう場
合こそ管理者が吟味してＭＬの設定をメインテナンスするべきでしょう。

それにもかかわらず自動的に登録するやり方としては次のようなものが考えら
れます。

○ sendmail.cf をいじる

これが一番まともな方法だと思うのですが、Rule Set 10 で

R$+			$@$1<@$S>			user w/o host

で、user -> user@domain に変換する。
＃事前に DS$m されている（$m == domain である）

○ MHをいじる等のインターフェイスの制御でもＯＫですが、
   すべての場合にＯＫとは限らない

○ subscribe 形式の強制

“From行のアドレスに@以下をつけないでメールが送られてくる”

をやらせないために、ローカルドメインの人は 
	subscribe uja@localhost-name.uja.jp 
形式を必ず使ってもらう。


○ フックによる自動補正

自動補整も やってやれなくはないです。でも変なこと（or illegal）
がおこってもおこらないでね:-) YOUR OWN RISK

$START_HOOK  = q#
	if ($From_address !~ /\@/) {
		$From_address = "$From_address\@ローカルなドメイン";
	}
#;

ローカルなドメイン は自分のドメイン です。


.S	自動登録の際の配送モード
.k	$AUTO_REGISTRATION_DEFAULT_MODE
.l	$AUTO_REGISTRATION_DEFAULT_MODE


登録を

	アドレス $AUTO_REGISTRATION_DEFAULT_MODE

の形で行なう。fml の内部表現↑で設定する必要があるので注意して下さい。

例: デフォールトを skip にする

	$AUTO_REGISTRATION_DEFAULT_MODE	= "s=1"; 

    まとめおくりで３時間に一回 Multipart に設定。

	$AUTO_REGISTRATION_DEFAULT_MODE	= "m=3mp"; 


.S	$AUTO_REGISTRATION_HOOK

$AUTO_REGISTRATION_HOOK = q#
    $e{'GH:Reply-To:'} = $MAINTAINER;
#;

WELCOMEのメールの Reply-To: を管理者宛にする

.# $Id$
.# Copyright (C) 1993-1996 fukachan@phys.titech.ac.jp
.# Copyright (C) 1996-1997 fukachan@sapporo.iij.ad.jp
.# fml is free software distributed under the terms of the GNU General
.# Public License. see the file COPYING for more details.
