.C	コマンドライン オプション
.l	clo
.k	コマンドラインオプション

.S	コマンドライン オプション -\S+

コマンドラインといっても、/etc/aliases から呼ばれるinclude file の
	"|/usr/libexec/fml/fml.pl $DIR $LIBDIR -option" 
のオプションの話のことです。
デバッグの時に shell 上で手動実行する時でも同様です。

SYNOPSIS
   fml.pl   [ options ] $DIR [ options ]  [ $LIBDIR [ options ] ]

	fml.pl MSendv4.pl sid.pl は同じ引数のとりかたをします。
	注意：fml_local.pl は MH を意識してるので異なります。

オプションと引数が共存するときは、引数が -ではじまるならオプション、そ
れ以外は Directoryの変数 だと仮定します。順番は関係ありません
Directory に関しては そのDirectoryが存在すれば、引数の順に $DIR、
$LIBDIR にセットされます。

DESCRIPTION
	-d		デバッグモード
			（ＭＬへの配送以外すべてを実行可能）

	-bt   		アドレステストモード	(Become Test)
			メンバーチェックのところまで実行する。
			ＭＬへの配送やコマンドは実行しない。
			いまのところ debug mode とかわらへんねん:-)
	-bd		デーモンモード	(Become Daemon)

	-sOPT $OPT 	をセットする。(e.g. -sdebug == -d)
	-uOPT $OPT 	をオフする。  (e.g. -udebug は $debug = 0; と同じ）
	-lfile		file を $LOAD_LIBRARY 変数に代入する 
			e.g. -llibfml.pl 下↓参照


＊＊注意：-btのように『空白は無し』です。(だってその方がコードが簡単:-)＊＊

例：
	-llibfml.pl とすると、コマンド専用アドレスのできあがりです
	＃ CONTROL_ADDRESS とおなじ意味ですね

	-llibftpmail.pl ftpmail 専用アドレス
	-sdebug		debug mode
	-sUSE_MIME	$USE_MIME = 1; と同じ

とかできるわけです

例：
"|/usr/libexec/fml/fml.pl /Baycity /Baycity/lib -d -sUSE_MIME -sDUMPVAR"

デバッグモード かつ $USE_MIME =1; で 変数のダンプも行なう。


.S	ロングラインオプション --\S+=\S+
.k	--MAIL_LIST=mailing-list-name@domain 

	--MAINTAINER=fukachan@sapporo.iij.ad.jp

$MAINTAINER の値を fukachan@sapporo.iij.ad.jp で Overwrite します。
config.ph の後評価されるので、ロングラインオプションを使って ある値だ
けを変更することが可能です。

複数のMLがある時に便利だと思います。
一番便利な使い方は、config.ph をひとつ用意して、コピーして使い回し、
アドレスだけを 

	--MAIL_LIST=mailing-list-name@domain 

で変更する などの使い方でしょう。
ML作成の二つ目以降では、普通アドレスしか変えないものですから:-)


.S	設定ファイルとコマンドラインオプション

各ＭＬの場所に config.ph を置く代わりにfmlのライブラリが置いてある場所
にocnfig.ph もしくは sitedef.ph をひとつだけ置いてそれだくを保守するの
も便利です。この場合は

   1	(もしあれば) 共用directory の config.ph  を loading
   2	(もしあれば) 共用directory の sitedef.ph を loading
   3	その後コマンドラインオプションを評価

なので、例えばコマンドの設定パス($TAR $UUENCODE)等はマシンが同じなら
一回設定すれば後は同じなので、コマンドラインオプションでＭＬ名を決めると
かすると設定が一瞬で終りますね:-) 

例：

mkdir して、cp してコマンドラインを書き換えるとはい、おしまひ

例２：

あと共用の $START_HOOK なんかもあるでしょう。sitedef.ph の $START_HOOK 
でＭＬ共通のヘッダ変換

	Subject: は Origina-Subject: へ保存
	Subject: から情報を減らす[ML名 数字]を消したSubject:に変換

とかしますよね？(^^;)


.S	簡易モード設定 （ロングラインオプション）--\S+
.l	--mode
.k	--mode
.k	&DEFINE_MODE('mode')
.k	&DEFINE_SUBJECT_TAG

＃さぁこれで N 秒はやく設定できるぜ（苦笑）

		--mode

の形で 簡単に作動モードを変更することが出来ます。細かい変更をするため
には config.ph をいじるべきですが、config.ph に慣れていない人や、お手
軽に変更する、２つ目以降の簡易ＭＬ作成 には非常に便利です。

同じことを config.ph でする時は

		--mode
は
		&DEFINE_MODE('mode');

になります。もっともアドレスによって挙動を変えるとかができない
（config.phは共通だから）ので、そういう場合は等価ではなくなります。
その場合はコマンドラインオプションの方が便利ですね。


注意： 	コマンドラインの  --mode は config.ph で指定する 
	$Envelope{"mode:$mode"} と同じです。

例：	
	"| fml.pl  --distribute $DIR " 
は $DIR/config.ph での $Envelope{'mode:distribute'} = 1; と同じ

.k	--distribute
.l	--distribute
 --distribute	

	distribgute only 
	スプールして再配送しているだけ

	再配送してスプールするために使うアドレスに使う場合は
	このモードを使うようにするべきである。
	
	例： /etc/aliases
	ip-connection: "|$FML/fml.pl $DIR --distribute"

	#ip-connections ML のようなものの受け口に使う場合には
	#このモードを使うようにするべきである。

.k	--mladdr=uja@domain	
 --mladdr=uja@domain	

	config.ph がなくても

	MAIL_LIST  = uja@domain
	MAINTAINER = uja-request@domain

	等アドレス設定をよきにはからう:-)
	＃とりあえず -request なのは USENET 依頼の伝統芸なだけ

.k	--tag=subject-tag-definition
.k	--subjecttag=subject-tag-definition
  --subjecttag=subject-tag-definition
  --tag=subject-tag-definition

Subject のTAGを定義する。fml のデフォールトは「使いもせず情報を減らす」
タグはつけない。

	--tag='(:)'

		Subject: (Elena:100)

	--tag='[:]'

		Subject: [Elena:100]	(HMLタイプ)

	--tag='( )'

		Subject: (Elena:100)

	--tag='[ ]'

		Subject: [Elena:100]


	--tag='[,]'

		Subject: [Elena,100]

	--tag='(,)'

		Subject: (Elena,100)


なお、モード指定中でTAGを定義している場合は後で評価された内容が優先さ
れるので注意。例： HML Emulation mode  (--hml)

これらのTAGは $SUBJECT_FREE_FORM の変数を定義すれば自由にカスタマイズ
できるのですが、それをあらかじめ定義しておくことで便利なユーザインター
フェイスになるようにしたものです。

config.ph では

	&DEFINE_SUBJECT_TAG("(:)");

のように呼び出してあげて下さい。
.xref &DEFINE_SUBJECT_TAG


.k	--auto
.l	--auto
 --auto
	投稿者がメンバーでない場合自動的にMLに登録する

.k	--check
.l	--check
 --check 
	投稿者がMLのメンバーか否かチェックを行う(default)

.k	--moderated
.l	--moderated

 --moderated
	メールは一回管理者へフォワードされる。
	管理者が査読してOKとみなしたらＭＬへ投げる。
	Approval: password フィールドをヘッダにつけてＭＬに
	投げればメールは配送される。
	よってＭＬに投稿できるのはパスワードを知っている人に限られる。
	パスワードはリモート管理のし方と同様に保守して下さい。

.k	--fml	
 --fml
	MAINTAINER = uja-admin@domain 
	admin syntax を使う

.k	--hml
 --hml 
	hml 1.6 compatible mode 
	例えば Subject: [Elena:100] シンタックス等

.k	 --fmlserv
 --fmlserv		

	CONTROL_ADDRESS = fmlserv@domain

	コマンドインターフェイスとして 
	fmlserv@domain があることが必要

.k	--listserv
.k	--majordomo
 --listserv
 --majordomo

	は  --fmlserv と同一である。

.k	--remote
 --remote
	リモート管理モード（パスワードを要求する）
	具体的には
		$REMOTE_ADMINISTRATION = 1;
		$REMOTE_ADMINISTRATION_REQUIRE_PASSWORD = 1;
	をセットしている

.k	--html
 --html

	最後に SyncHtml を呼出し Html 化する

	var/htdocs/Ｎ通ごとにdirectoryを作り階層化して保存

	例：
	var/htdocs/100/index.html 
	
	この index.html の中では 逆順 つまり １００、９９、…
	のように URLが並ぶ

.k	--mime
 --mime
	$USE_MIME = 1;

.k	--force:field=value
 --force:field=value

	MLの配送時 field の値を強制的に value に設定する
	＃注意： field name は小文字である

	例： 

	reply-to: を常にMLにしてしまう
	--force:reply-to=uja@domain

config.ph では

	$Envelope{"fh:reply-to:"} = 'uja@domain'; と同じ

便利なように、

	&DEFINE_FIELD_FORCED('reply-to') = 'uja@domain';

というマクロも用意されている。
.k	&DEFINE_FIELD_FORCED()
.k	DEFINE_FIELD_FORCED()

.k	--oh:field
.k	--original:field
 --original:field	

	＃ キーワード original, org, oh は等価

	MLの配送時 field の値をオリジナルのものを使うように設定する
	＃注意： field name は小文字である。また、force と違いオリジナ
	＃ルを使うのだから =value という部分はないことに注意

	例： 事情により To: Cc: のみはオリジナルのものに戻して配送したい

	--oh:to --oh:cc

config.ph では $Envelope{"oh:to:"} = 1; とおなじ。便利なように、

	&DEFINE_FIELD_ORIGINAL('to');

というマクロも用意されている。
.k	&DEFINE_FIELD_ORIGINAL()
.k	DEFINE_FIELD_ORIGINAL()

.k	--permit:variable
 --permit:variable
	$Permit{"variable"} = 1;


例：
	From: を強制的に fml-maintainer@phys.titech.ac.jp に設定して
	フォワードをする。
	＃この場合配送先は $MAIL_LIST_DIR/fml-query/actives で決まる。

	perl $FML/fml.pl $MAIL_LIST_DIR/fml-query \
	--distribute \
	--mladdr=fml-query@phys.titech.ac.jp \
	--force:from=fml-maintainer@phys.titech.ac.jp


ロングラインオプションによる変数の設定：

.k	--variable
 --variable
	$variable = 1;

.k	--variable=value
 --variable=value
	$variable = $value;

例：
	$MAINTAINER を fml-admin@uja にする
	＃ config.ph での $MAINTAINER = 'fml-admin@uja'; と同じ

	perl $FML/fml.pl $MAIL_LIST_DIR/fml-query \
	--distribute \
	--mladdr=fml-query@phys.titech.ac.jp \
	--force:from=fml-maintainer@phys.titech.ac.jp
	--MAINTAINER=fml-admin@uja

例：
	デバッグモードをオン！
	perl $FML/fml.pl $MAIL_LIST_DIR/fml-query --debug

.k	--debug

.# $Id$
.# Copyright (C) 1993-1996 fukachan@phys.titech.ac.jp
.# Copyright (C) 1996      fukachan@sapporo.iij.ad.jp
.# fml is free software distributed under the terms of the GNU General
.# Public License. see the file COPYING for more details.
