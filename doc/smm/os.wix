.C	OS依存性。OSごとのインストールの注意

.S	4.4BSD

NetBSD 1.1 および 1.2 はターゲットマシンなので、なにもなし
他の 4.4 BSD based については不明。BSDI 2.1 では動くのを確認ずみ

.S	4.3BSD

旧ターゲットマシンなので、多分なにごともなくうまくいくでしょう

.S	SUN OS 4.1.3

fmlの昔のヴァージョンでは lseek system call をつかうところで、こけてま
したが、その問題はもう発生しません。

sendmail: NFS ごしの fpathconf() はうまく作動しません。ローカルに 
include をもつか、fmlを置く場所をローカルにするか等の技が必要になるか
もしれません


.S	HP-UX 9?

setuid まわりが 4.3と4.4の中間みたいな感じで止まってます。
sendmail はいろいろとまわりみちをして、setuid を実行するようですが、
:include: を使う限りうまくいくらしいです。
＃Version依存性がよくわからないんですが…

もし、それでだめなら perl -U をつかってもらうということで


.S	SGI Indy (IRIX5.3)
.q
From:    nino@windy.mech.utsunomiya-u.ac.jp

私のホストは、SGIのIndy(IRIX5.3)なんですが、そのまま
では全然動かなかったので、-D_POSIX_CHOWN_RESTRICTED
を付けてkernelをreconfigして何とかなりました。更に、
:includeを使える様にするために、sendmailを入れ換え、
大文字が使えなかったので、CFも入れ換えました。
(See fj.sys.sgi)

.~q


.S	プロセスは誰の権限で動くか？
.key	uid
.key	setuid
.key	ユーザー権限ということ
.label	{fml-uid}

「プロセスは誰の権限で動くか？」というのは sendmail 自体は root 権限で
走っているからで、fml 実行時は fml 管理者のプロセスとして走ります。
システムに「メーリングリスト管理者のプロセスとして走る」用に命令するこ
とがシステムによって違うことがあるので厄介なことが発生します。
＃注意: 以下の説明とは異なる場合ももちろんありえます。
.xref fml-process, msend

○ローカルに fml にメールを投げる

	自分のuidで実行します

○外からメールがやってきたら？
	つまり sendmail がうけとって fml を起動する場合

	外→ sendmail は uid = 0 で待っている(デーモン)
	     ＃昔の sendmail だと daemon の場合もあるだろう

	     → setuidしてユーザー権限 (uid は include の持ち主)にして
		fml.pl を起動し、メールを fml.pl へ渡す
		＃これは fml.c で作った fml を使うか
		＃:include list 形式での呼びだし

ここで setuid() の話が関係するわけです。

各オペレーティングシステムでどう setuid をすればうまくいくか？ は次の
節にまとめてあります。
注意：以下のまとめは昔 INSTALL に書いてありましたが、INSTALL のサイズ
は適当な大きさに押えたいので細かいデータはすべてこの doc/op に収録して
いくことにしてます。


.S	/etc/aliases の書き方と OS 依存性

make すると fml という "C Wrapper" (setuidをするもの) が生成されます。
makefml が fml.c を自動的に補正してくれているはずです。

/etc/aliases では
	Elena: :include:/some/directory/include-file 
		もしくは
	Elena: "|/some/directory/fml-2.1/fml"

の両方の書き方ができますが、ＯＳによってうまくいったりいかなかったりし
ます。現在では include-file 形式が普通のような気がします。

ターゲットマシン (4.4 BSD)以外での挙動はよくわかりません。security 上
からも一番いいのは最新版の sendmail に入れ換える事です。まずはそこから
でしょう。

OS 附属の sendmail 等を使うと挙動がおかしいのはよくある話です。
“ setuid のしかた"で大別すると、以下の2種類に別れます。

 [4.3BSD]
	fml (fml.cから作る) でも :include: でもOKでしょう

 [4.4、POSIX準拠のOS、その他]
	:include: 式か 
	最後の技;-) rootにsetuidされたfml(make OPT=-DPOSIX)	

以下は実際にテストされたOS一覧です

	キーワード：
	uid		ownerが自分自身で 4755 した fml
	include		sendmail に setuid をまかせる :include:を使う
	root		ownerがrootで 4755 した fml
			＃こういうことは最後の手段であまりやりたくない…

＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿
4.3BSD			uid include
4.4BSD 			include
BSD386 1.1		include
SUN4.1.2 - 4.1.3JLE 	uid include
Solaris 2.4 		include
Solaris 2.3J 		だめ？ (2.3 以前はまんがいち動けばらっき〜のようだ)
DEC OSF/1		[:include でかつ perl -U が必要（なぜ;_;？）]
			-U はいらないこともあるらしい
OSF/1 Alpha AXP V2.1 	include
HP UX 9?		[:include でかつ perl -U が必要？]
			＃なんか、setreuid しかないんだけど…＞HP-UX
SVR3 [4.3BSD とおなじ]	uidでＯＫのはず

＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿
manualで確認した機種一覧
4.3BSD系	SONY NEWS 4.x
		4.1.3JLE
		SVR3

POSIX準拠	4.4BSD
		NetBSD 
		BSD/OS 2.x
		BSD386 1.1
		Solaris 2.4	

その他の注意：
・単に NFS ごしだからうまくいかなった という場合(オチ;-)もあるでしょう

setuid に関する限り、「setuid する時だけ local ならいい」なわけで、例
えば /usr/local/ml/fml とかを作ってもらって fml.pl 自体は NFS ごしの 
home とかにおいてある という風にしてあればうまくいくでしょう。

注意: 起動自体がうまくいっても NFS ごしのため、それ以外の system call 
がうまく動かない可能性はありえます。

・NFSごしにファイルが存在すると setuid を認めない機種 もある
たとえば
		SUN 4.1.3JLE 4.1.4
		＃これは fpathconf の return 値が問題

現実的に uid 管理がどうなされているかを考えれば、設計思想としてそれは
正しいでしょう。

・ fml と include を試してみてどっちもうまくいかなかったら最後の手段の
root に setuid した fml を使うという方法があります。

root のケースでは root しか書けない /usr/local/ml/driver とかにインス
トールしてもらうとかしたほうがいいとおもいます。取り扱いには注意してく
ださいね。管理者とよく相談してみてください(重要)
＃もしかしたら sendmail が呼ぶ関数のどこかで rootのsetuid をみとめない
＃かもしれないということもあるかもしれない。単にNFSかもしれないが:-)


.# $Id$
.# Copyright (C) 1993-1996 fukachan@phys.titech.ac.jp
.# Copyright (C) 1996-1997 fukachan@sapporo.iij.ad.jp
.# fml is free software distributed under the terms of the GNU General
.# Public License. see the file COPYING for more details.
