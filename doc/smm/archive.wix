.C	アーカイブ, Archive
.l	archive

.S	Introduction
.l	archive-and-expire-conflicts

場所をとるから古い記事は tar で100個くらい固めて gzip かけると 1/4 く
らいになります。100 というマジックナンバーの目安は 100 個固めると 50K 
前後になるので好都合な値にうまくなるという経験論から来ています。
効率がいいのはヘッダとか同じようなものが繰り返し出てくるからですね。

しかし $USE_EXPIRE と $USE_ARCHIVE を同時に使う場合は要注意です。必ず 
$EXPIRE_LIMIT が記事の数で指定されていて、

	$EXPIRE_LIMIT > $ARCHIVE_UNIT 

でなくてはいけません。念のため

	$EXPIRE_LIMIT = $ARCHIVE_UNIT * 2;

くらいにしておくのが良いでしょう。


.S	config.ph の設定
.l	$USE_ARCHIVE

現在ではHOOKをかけなくてすむように 

	$USE_ARCHIVE = 1;
.k	$USE_ARCHIVE

をセットすれば呼べるようになっています。
アーカイブが作られる場所は @ARCHIVE_DIR の先頭の内容

	@ARCHIVE_DIR = ('var/archive');
.k	@ARCHIVE_DIR

です。ここでは 'var/archive' です。配列 @ARCHIVE_DIR の内容は複数あっ
てもいいですがそれは get, mget の時に探す対象となるだけで作る場所とは
みなされません。
何個ずつ単位でまとめるかは

	$ARCHIVE_UNIT 
.k	$ARCHIVE_UNIT 

で決まります。この値がないと

	$DEFAULT_ARCHIVE_UNIT
.k	$DEFAULT_ARCHIVE_UNIT

が使われます。デフォールトは 100 です。backward compatibility のためこ
の変数がなくても 100 になります。
＃ @StoredSpool_DIR = ('var/archive'); は Obsolete な書き方です。
＃ Backward Compatibility として
＃ 内部で @ARCHIVE_DIR に代入してるので、どちらでも動きます
.key	@StoredSpool_DIR


.S	"# get 1 " と archive

例えば、"# get 1 " というコマンドを送り込んだ時

	ml-dir/spool/	

を探索し、

	もしファイル spool/1 が見つかればＯＫ、
	見つからない時は

	ml-dir/var/archive/	

という場所も探し、1-100 までがtar + gzipされている 

	var/archive/100.tar.gz 

があれば、ファイル １ を取り出して１だけを送り返します。


.S	"# mget 1 " と archive

上と同じです。


.S	"# mget 1-10 " と archive

これも同様で、もし見つからない時はアーカイブ(100.tar.gz)から1〜10
の記事を取り出してその10個だけを送り返します。


.S	"# get 100.tar.gz" と archive

これは "# mget 100.tar.gz" と再解釈され

	var/archive/100.tar.gz 

を送り返します。デフォールトはこれを uuencode したものです


.S	"# mget 100.tar.gz" と archive

上述のようになります。


.S	gzip file にする(アーカイブへの変換)
.l	Archive.pl
.k	bin/Archive.pl
.key	Archive.pl

$USE_ARCHIVE の自動操作にまかせずに時々手で or cron でこのプログラムを
動かしても良いです。cron で自動処理するなら次の節を御覧下さい

	Archive.pl [-dh] [-A ARCHIVE_DIR][-u unit] MAX
	-d	debug mode
	-h	help 
	-A	アーカイブを作る場所を指定
		config.ph より強い
	-u	固める単位。デフォールトは記事１００個ずつ

	MAX	これで最大どの記事までをアーカイブするか強制指定
		デフォールトでは今の記事番号の直前の”１００の倍数”
		までをアーカイブの対象の記事としてアーカイブを作る。

注意：このプログラムはＭＬのホームで実行されることを前提にしています。
よって、

	chdir /var/spool/ml/Elena; perl bin/Archive.pl 

のように使うことを期待されています。

これは Archive.pl 2000 とかすると、2000 までのファイルを 100 個ずつの
塊にして、archiveに作ります。変数は Archive.pl の先頭でセットしてくだ
さい。スプールのオリジナルは消さないので、注意を払って消して下さい
(とりかえしがききませんから、それは)
＃自分じゃ、念のため ある程度まとまったところでこうやって手動でつくっ
＃てます。

例えば、

	spool/1-100	を tar+gzip して var/archive/100.tar.gz
	spool/101-200	を tar+gzip して var/archive/200.tar.gz

のようなファイルをarchiveの下に作るプログラムが bin/Archive.pl です。

目的のＭＬの場所にまでいって

% ls 

MSendrc		actives		config.ph	deny
guide		help		list		log
members		objective	seq		spool
summary		welcome

% test -d var || mkdir var
% test -d var/archive || mkdir var/archive

% perl Archive.pl 3800

	…たくさんメッセージが出るが省略…

% ls archive

100.tar.gz   200.tar.gz 
	…たくさんメッセージが出るが省略…


spoolの 3800 までの 100 個ずつのパッケージを作りました。spoolの方の元
メールを自動的に消しはしない(安全のため)ので、自分で消して下さい。


.S	アーカイブ作成を cron で自動処理
.key	Archive.sh
.key	Archive.pl
.key	crontab

cronで自動的（例えば週一日曜の朝とか）に次の形で

   (chdir "MLサーバのdirectory名"; /usr/local/bin/perl bin/Archive.pl)

とでもすれば良いでしょう。
＃見本として bin/Archive.sh があるので見てみてね。

 いくつかＭＬがあるなら、シェルスクリプトにまとめて呼べば楽ですね。
ようするに まとめ送りと一緒とかでもよいですね

例：
crontab が
例：

	0 * * * * /bin/sh /usr/libexec/fml/archive.sh


/usr/libexec/fml/archive.sh は
例：
	#!/bin/sh

	(chdir /var/spool/ml/Elena;    /usr/local/bin/perl bin/Archive.pl)
	(chdir /var/spool/ml/Freekick; /usr/local/bin/perl bin/Archive.pl)



.S	何故、まとめてgzip化したいのか？

１．一個一個gzipかけると、約半分にしかなりませんが、１００個まとめて書
けると、ヘッダとかの重なりがあるので約２５％にまで圧縮できるようになり
ます。

２．Mail-Countが万を越える頃になるとi-nodeの計算に時間がかかるようにな
るのでファイル数を減らす or ほかの場所に移すことに意味があるようになり
ます。そこでspoolの中身をうつし、100分の一のファイル数にすると効果が非
常にあります。また、kernel 内の directory cache が大きくなるのも避けた
いところですから、そのためにもよいです。


.# $Id$
.# Copyright (C) 1993-1996 fukachan@phys.titech.ac.jp
.# Copyright (C) 1996-1997 fukachan@sapporo.iij.ad.jp
.# fml is free software distributed under the terms of the GNU General
.# Public License. see the file COPYING for more details.
