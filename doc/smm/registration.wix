.C	メンバーの登録について
=E.C	Registration

○ 手動登録とは『fmlの動いているホストに入って、メンバーリストをいじる』
場合です。エディターないしmakefmlを使って行ないます。登録意志の確認を
fmlがしてくれることもありますが、最後のメンバーリストをいじる部分はＭ
Ｌ管理者が何らかの行動を起こす必要があります。

○ 自動登録とは『fmlが登録意志の確認から実際の登録作業』までを自動的に
行ないます。エラーの時だけが管理者の出番です。

○ 注意: 管理者がコマンドを送ってメンバーの登録を行なうやり方は手動登
録と呼んでいます。例: "admin subscribe fukachan@fml.org"

用語集 => .ptr{term-registration}
自動登録については次章の .ptr{auto-regist} を見て下さい。
=E
Technical Terms => .ptr{term-registration}
See .ptr{auto-regist} for automatic registration details.

.S 	subscribe コマンド(手動登録)時の挙動について(5 way hand shake)
=E.S	Manual Registration; how to handle subscribe requests

*_*_HANDLER が auto_regist でない場合です。この時は管理者宛に登録依頼
メールをもらい、それをみて登録作業をします。ユーザーを登録するためには 
fml の動いているホストで makefml add を使ったり手でファイルを編集する
必要があります。

しかし、その登録依頼は他人のフリをしているのかもしれません。そのため登
録の前に本人かどうかの確認をするべきです。confirmation はこの確認作業
を fml が行なう場合です。forward_to_admin (元々の場合)で管理者がメール
を書いて正当性チェックをする場合のことをさしています。

	$MANUAL_REGISTRATION_TYPE ('confirmation' or 'forward_to_admin')
.k	$MANUAL_REGISTRATION_TYPE
.l	$MANUAL_REGISTRATION_TYPE

.if LANG == JAPANESE
$MANUAL_REGISTRATION_TYPE は confirmation がデフォールトです。

手動で登録作業をするＭＬで、subscribe request をうけたらconfirm を返し、
confirm が帰ってきたら管理者は手で登録する。デフォールトは 
confirmation にしてある。＃ 2.2A

     ユーザ			fml			管理者
     
     1 ユーザがリクエストをfmlへ送る。
     subscribe request ->
     
     2 fmlは確認のメールを返す
     		<-  confirm req
     
     3 ユーザは確認のメールを返す
     confirm it       ->  
     
     4 fmlは確認したら、管理者に知らせる。
       ユーザにはちょっと待たれよとメールを送る

     		    confirm Okだったよん、いれてあげてぇ -> 管理者
     		<-
     confirmした
     管理者にしらせたからしばし待たれよ
      
     5 管理者が何らかの方法でユーザを加える。手で加えるなりコマンドなりで

     		admin add アドレス		<-
     		approve パスワード add アドレス
     
     (if $ADMIN_ADD_SEND_WELCOME_FILE == 1
     		<-
       welcome ♪のメール)

$MANUAL_REGISTRATION_CONFIRMATION_FILE というファイルがある時はこのファ
イルも送り返します。デフォールトではテンプレートを作ってありません。
.fi
.if LANG == ENGLISH
How to handle 'subscribe' request to ML modified by maintainers' hand. 
In default fml confirms the will to From: address.

     subscriber           fml            maintainers/administrators
     
     1 a subscriber requests 'subscribe NAME' to fml.
     subscribe request ->
     
     2 fml sends back a confirmation of the will.
     		<-  confirm req
     
     3 He/She confirms and replis it.
     confirm it       ->  
     
     4 Fml confirmed the will and let maintainer to know it. 
       Fml also notifies the request is forwarded to maintainers.

     		    confirmed -------> "please add this subscriber"
     		<-
     confirmed
     Please wait a little.

     5 A maintainer edits the member list by hand or sends 
       remote administration commands.

     		admin add <address>
     		approve PASSWORD add <address>
     
     (if $ADMIN_ADD_SEND_WELCOME_FILE == 1,
     		<-
       "welcome!" mail is also returned)

If $MANUAL_REGISTRATION_CONFIRMATION_FILE file exists, fml sends back
it to the requester. In default this template does not exist.
.fi

	$MANUAL_REGISTRATION_CONFIRMATION_FILE (default $DIR/confirm.msub)
.k	$MANUAL_REGISTRATION_CONFIRMATION_FILE
.l	$MANUAL_REGISTRATION_CONFIRMATION_FILE


.S	ほんとに抜けるか？を確認する unsubscribe 
=E.S	unsubscribe confirmation
.l	unsubscribe-confirmation

自動登録には confirmation がありますが、その逆に抜ける時にも 
confirmation を求めるモードです。デフォールトではしません。
.xref confirmation
=E
"confirmation" mode is also available in "unsubscribe". FML uses the
same routine of "confirmation" in automatic registration.  Hence you
can restrict "unsubscribe" in the same way as in the case of automatic
registration.
.xref confirmation

設定するためには

	$UNSUBSCRIBE_AUTH_TYPE = "confirmation";

とします。やり方は confirmation と同様です。「本当に抜けるのね？」と確
認を求めるメールが返るので、そのメールに reply してもらうと本当に抜け
ることができます。
=E
When "unsubscribe" request comes in, FML sends back a confirmation
request to verify the will. See .ptr{autoregist} and speculate the
action.

.S	アドレスの変更 ("chaddr" command)
=E.S	change address ("chaddr" command)

.if LANG == JAPANESE
ISPを変わった時、ドメイン名が変更になった場合などには新しいアドレスに
変更する必要があります。old-address を new-address へ変えるには

	1. chaddr コマンド
	2. 一回抜けてもう一度入る

の２つの方法があります。chaddrコマンドは

	chaddr old-address new-address

というシンタックスのコマンドです。
.fi
.if LANG == ENGLISH

When you change your ISP, domain ... you need to change your address
registered in ML. To change it, there are two methods

	1. chaddr command
	2. unsubscribe once and subscribe again
.fi

○ fml 2.2 の仕様, fml 2.2.1 の仕様 (default)
必ず『古いアドレスから』このコマンドを送ってください
=E
* fml 2.2, fml 2.2.1 default
  Please send the following address from "old-address" to change
	old to new one registered in ML member lists.

	From: old-address
	To: list-ctl@domain

	chaddr old-address new-address

○ fml 2.2.1 のオプション  "chaddr confirmation"
=E
* fml 2.2.1 option "chaddr confirmation"

.if LANG == JAPANESE
chaddr を実行する前にconfirmationを行なうオプションがあります。

	$CHADDR_AUTH_TYPE = 'confirmation';

0. 	chaddrリクエストがfmlに来たら、それを行なっていいか？の確認の
	メールを送り返します。新旧両方のアドレスへ送ります。

1. 	新旧のアドレスのどちらか一方から chaddr を確認するメールがfml
	に届いたら chaddr 処理を実行以下の条件が必要です。

 1.1 コマンドを送ったメールのFrom: に設定したアドレスが、オプションに指
 　　定したアドレスのどちらかと一致する
 1.2 指定したアドレスのどちらかはすでにメンバー

2. 	結果にかかわらず、新旧両方のアドレスとＭＬサーバの管理者の３人に変
	更の通知がメールで送られます。
	＃ 管理者には届かないようにすることはできます。
	＃ @DenyProcedure('r2a#chaddr');
.fi
.if LANG == ENGLISH
fml 2.2.1 and fml-current (2.2B) has an option

	$CHADDR_AUTH_TYPE = 'confirmation';

to enable "chaddr confirmation". Fml confirms the chaddr to old and
new addresses. The process is as follows:

0.	Fml receives chaddr request. Fml sends back the confirmation.

1.	If fml receives the confirmation from each of old and new
	addresses, fml does chaddr process.

	chaddr process needs

   1.1	From: old-address or From: new-address	
   1.2	either of old-address or From: new-address should be a member	

2.	Fml sends back the result to both old-address, new-address
	and ML-maintainer. 
	# If you set 
	#	@DenyProcedure('r2a#chaddr');  (in config.ph)
	# maintainer will not receive a mail of the chaddr result.
.fi

NOTE: 1999/10/04

	chaddr でサブドメインだけを変更しようとすると通常はエラーになる
	というのは変更先のアドレスがすでにメンバーリストにあるので。
	そのため
=E
   chaddr: check the new address and the current address similarity
	For example, unless this, sub-domain change must be an error.
	e.g. chaddr foo@a.b.x.y.z foo@123.b.x.y.z
	So, we gains the ADDR_CHECK_MAX if we encounters this case.
	And we need SaveACL and RetACL to get back to the
	original state after this function calling(like Context Switch).

		chaddr foo@a.b.x.y.z foo@123.b.x.y.z

	のような時は、アドレスの似ている度合いを見て一時的に
	$ADDR_CHECK_MAX の値を上げることで正しく動作させる。
	これに伴い &SaveACL, &RetACL でこの関数呼び出しを
	保護する必要がある。HOOkなどで呼び出してる人は注意。


.# 自動登録
.include autoregist.wix

.# $Id$
.# Copyright (C) 1993-1999 Ken'ichi Fukamachi
.#          All rights reserved. 
.#               1993-1996 fukachan@phys.titech.ac.jp
.#               1996-1999 fukachan@sapporo.iij.ad.jp
.# 
.# FML is free software; you can redistribute it and/or modify
.# it under the terms of GNU General Public License.
.# See the file COPYING for more details.
