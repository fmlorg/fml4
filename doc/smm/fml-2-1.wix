.C	FML 2.1 RELEASE への付録
=E.C	Appendix to FML 2.1 Release

この章は再録です。多くのものは歴史的に削除されたがメモ/記録としてある
とよいかもしれないというものです。
=E
We do not translate this chapter since FML 2.1 Release support both
Japanese and English incompletely.


.S	DEFINE_MODEによる配送モード設定について(obsolete)

以下では配送のモードについて解説します。fml の設定変数は非常に多岐に渡っ
ています。またメタレベルで設計されている部分もあります。そのため設定の
自由度は高いのですが、一つの内容に複数の設定変数が附随してきます。

しかし多くの場合一つ一つの変数を設定しなくてもデフォールトの値で決め打
ちでも動かすことはできます。むしろ初心者にはその方がわかりやすいでhそ
う。そこで、代表的なモードは”簡易モード設定”という形でわかりやすいユー
ザインターフェイスを提供するようになっています。初めはわからなくてもい
いので、もっと細かくいじりたくなった時にその設定の意味を調べれば良いと
おもいます。

	DEFINE_MODE
.k	DEFINE_MODE
.k	&DEFINE_MODE
.xref	auto-regist

config.ph で簡易モード設定をするための関数です。以下のような理由のため
に導入されました。

○ 歴史的な理由で自動登録とメンバーチェックをするモードの設定等で同時
にいくつかの変数を設定する必要がある時にTYPOの可能性を低くする

○ 変数の設定の中には 1 or 0 だけでは不充分な場合がある

&DEFIN_MODE(mode-name); は必ず config.ph の最後 (1; より前) に書いて下
さい。というのはモード設定の中には config.ph の値を overwrite する必要
のあるものがあるからです(もちろん必要のないものもあります)。

conflict する例(古い例):

	$ML_MEMBER_CHECK = 1; (上の方)
…
	&DEFINE_MODE('autoregist'); （autoregistは古い変数名。一番最後）

と書くと、$ML_MEMBER_CHECK は 0 に overwrite され自動登録モードになっ
てしまいます。

これはこの時はよいのですが、後で trouble が発生した時に見通しを悪くし
ます。そのためこういう変数の conflict が発生しないようなものに限って使
うべきです。またこれらの理由により、2.1 gamma にあった、いくつかのもの
を除いて多くのモード設定は 2.1 release ではobsolete になりました。
backward compatible のため 2.1 release でも設定は有効ですができるだけ
使うべきではありません。


	&DEFINE_MODE の定義について
.l	&DEFINE_MODE

以下 ＭＬ = 

	listname@domain		include     ファイルを呼ぶ
	listname-ctl@domain	include-ctl ファイルを呼ぶ(ctladdr mode)

とする。前提条件としてＭＬは通常そのメンバーだけが投稿する。
メンバーでない人が投稿という概念はない。


(歴史的な)メンバーチェックの定義:＃ほんと歴史的だな、これ…

	$ML_MEMBER_CHECK = 1	メンバーチェックを通った人は投稿可
				違うなら reject 

	$ML_MEMBER_CHECK = 0	メンバーチェックを通らないなら
				メンバーに加える or confirm に回して配送しない
				メンバーでない人が投稿という概念ははないので
				no check という意味にはとらない

	例外処理: post=anyone で listname 宛の挙動は変えられる。
	listname-ctl は $ML_MEMBER_CHECK の設定に従い振舞いを変える。


定義:
	&DEFINE_MODE(DEFINE_SYNTAX)

	DEFINE_SYNTAX := ACTION "=" RESTRICTION / 
			 AUTOREGIST_TYPE "=" AUTOREGIST_TYPE_KINDS /
			 BACKWARD_MODE_DEFINITION

	ACTION        := "post" / "command"
	RESTRICTION   := "anyone" / "members_only" / "moderated"
	
	AUTOREGIST_TYPE       := "artype"
	AUTOREGIST_TYPE_KINDS := "confirm" / "subject" / "body"

	BACKWARD_MODE_DEFINITION := いままで [a-z_]+ のやつを押込める


解説:

○ listname

	・ post=
	post= syntax は listname 宛の振舞いを変える
	宣言しないならデフォールトの listname = distribute + command

	・ listname のメンバーチェックで reject 時の振舞いは
	 $ML_MEMBER_CHECK の設定に従い変わる。


○ listname-ctl

	・ command=
	command= syntax は listname-ctl 宛の振舞いを変える

	デフォールトは「メンバーだけがコマンドを使える」なので
	command=anyone だけが例外
	注意:一般に誰でもコマンドが使えるのは推奨しないが、
	自動送り返しサーバ等の応用がありうる。

	・ listname-ctl のメンバーチェックで reject 時の振舞いは
	 $ML_MEMBER_CHECK の設定に従い変わる。


○ 自動登録のタイプ

	・ artype=
	$ML_MEMBER_CHECK = 0 の時の AUTO REGISTRATION TYPE を決める。
	タイプを決めるだけなので 0 は必要。makefml interface でない時
	は要注意。

	--auto* は便利なように $ML_MEMBER_CHECK の overwrite をしてい
	るがそれだと config.ph と dup するのでよくない。

	矛盾を防ぐためにモード設定は config.ph (cf/MANIFEST 内の定義)
	と直交している必要がある。その意味で confirm 以外の artype= は
	本当はよくない。

	備考:
	artype って makefml では confirm くらいしか使ってないのだが…


.S	配送だけをするサーバ(&DEFINE_MODEによる)

makefml は makefml newml listname で listname (配送用), listname-ctl
(コマンド用)という２つのアドレスを作ります。config.ph では 
$CONTROL_ADDRESS も listname-ctl として設定されています。

listname のデフォールトの挙動は (backward compatibleのため) サーバは一
つのアドレスで配送もコマンドも受け持ちます。

listname のアドレスでコマンドを使えなくし配送専用のアドレスにするため
には

	&DEFINE_MODE("post=anyone");       (誰でも投稿できる)
OR
	&DEFINE_MODE("post=members_only"); (メンバーだけが投稿できる)

を設定してみて下さい。listname は配送専用になります。コマンドは 
listname-ctl を使ってもらうことになります。


.S	再配送だけをするサーバ(&DEFINE_MODEによる)

単に配送を待って、それをスプールすることだけを目的にするメーリングリス
トを作ることもあるでしょう。つまり ガイドを相手に返すこともなく、単に
再配送するだけです。それは上述のように &DEFINE_MODE("post=anyone"); を
設定することで実現されます。

例: 	elena メーリングリストを再配送専用に設定する

makefml newml elena で elena メーリングリストを作る。/etc/aliases で

	elena: :include:/var/spool/ml/elena/include

となっているとします。 /var/spool/ml/elena/config.ph に

	&DEFINE_MODE("post=anyone");

を書く。別の言い方をすれば、/etc/aliases でやってるただのフォワードに
スプール機能がついてるような状態ですね。



.S	bin/fmlctl.pl (obsolete)
.l	bin/fmlctl.pl
.k	fmlctl.pl
.k	.fmlctlrc

obsolete なのは今後は makefml しか保守されないから。
同じような機能のものが複数あってもしょうがない。

通常 fml のコマンドをテストする場合メール経由で実行しますが、ＭＬのホー
ムで fmlctl を使うと、fml のコマンドをメール経由でなくても実行します。

例えば 
	# mget last:10 mp

をメールで送らずとも

	% fmlctl.pl mget last:10 mp

をすると、このコマンドを実行して、メールでの返答でなく画面に結果を出し
ます。長い場合もあるので less 等で見ると良いでしょう。

-i オプションの場合インタラクティブ・モードに入るので (perl debugger 
もどきのインターフェイス)、これで複数のコマンドを実行したりもできます。

SYNOPSIS
	fmlctl.pl -i [-c configfile] [-d ML_directory] [-h] [DIR] [LIBDIR]

	-a	ADMIN MODE (コマンド は # admin ... が前についてるものと仮定) 
		つまり help をいれても # admin help のことだと思う。
	-c	fmlctl の設定ファイル
		デフォールトでは $HOME/.fmlctlrc を探して評価する
	-d	ＭＬのホームの指定
	-h	このメッセージ
	DIR	ＭＬのホーム (config.ph のある場所)
	LIBDIR	ＭＬのホームとは他の場所に libfml.pl 等があるならその場所


例：	通常は subscribe address をメールで送る場合

	% fmlctl subscribe ひとのあどれす

インタラクティブモード (interactive mode)

	% fmlctl -i 
	fmlctl<1> subscribe address

例：
	fmlctl<1> subscribe 	address
	fmlctl<1> addadmin	address

管理者モードか否かは $ENABLE という変数で決まっているので、
通常のコマンドを実行したい場合は

	u $ENABLE

管理者モードへ移行したい場合は

	e $ENABLE = 1

を実行すればできます。覚え方は「CISCOと同じenable」です（笑）
この場合 # admin シンタックスは要らず、その後の部分だけでよいです。
つまり help といれても admin help の意味になります。
またパスワードは必要ありません(こちらの方が重要でしょう)。


実行例：

   % chdir /var/spool/ml/elena
   % bin/fmlctl.pl -i $PWD /usr/libexec/fml
   Fml Control (Interactive Administration Interface)
   
    chdir /var/spool/ml/elena
   
    Loading the configuration [/var/spool/ml/elena/config.ph]
   
   Setting the Mailing List [Elena@axion.phys.titech.ac.jp], O.K.?
   
 [[[ COMMAND MODE ]]]
   
     FmlCtl<0> h
   
           !number   do the previous action of the number
           !string   do the string in the shell
           e         eval string
           e.g. e $debug = 1
           h         help
           H         history
           p         print the value
           e.g. p $debug
           q         quit
           u         undef the value
           e.g. u $debug
           
     FmlCtl<1> e $debug = 1
   eval "$debug = 1;";
     FmlCtl<2> p $debug
   1
     FmlCtl<3> u $debug
   eval "undef $debug;";
     FmlCtl<4> H
   1:h
   2:e $debug = 1
   3:p $debug
   4:u $debug
   5:H


.S	bin/RecreateConfig.pl (obsolete)
.l	bin/RecreateConfig.pl
.k	RecreateConfig.pl

fml 2.x では配布されていません。 fml 1.x 用なので OBSOLETE です。



.S	mget でユーザから与えることのできるシンタックス(2.1 では削除)
.k	mget と Shell Match Pattern(e.g. * 1?)
.key	$SECURITY_LEVEL

$SECURITY_LEVEL < 2 では 

	# mget * 
とか
	# mget 10? 

が使えます。デフォールトは"Backward Compatibility を無視して2" です。
通常 Backward Compatibility は重視されているのですが、security 関係は
例外です。

また、何もしなくても、

# mget 正規表現 送り返されるメールの時間間隔(sec)

	と

# mget2 1-10,5みたいなsyntax 送り返されるメールの時間間隔(sec)

の両方を理解します。サーバが自動的に切替えます。


.# $Id$
.# Copyright (C) 1993-1998 Ken'ichi Fukamachi
.#          All rights reserved. 
.#               1993-1996 fukachan@phys.titech.ac.jp
.#               1996-1998 fukachan@sapporo.iij.ad.jp
.# 
.# FML is free software; you can redistribute it and/or modify
.# it under the terms of GNU General Public License.
.# See the file COPYING for more details.
