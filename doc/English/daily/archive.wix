.C	アーカイブ, archive
=E.C	archive
.n	auto-archive
.l	archive
.k	archive

fmlのスプールは一通一ファイルです。ある程度溜ると邪魔です;)
この章はＮ通を１つのアーカイブにする方法についてです。

.S	Introduction
.l	archive-and-expire-conflicts

記事は溜ってくるとかなり場所をとります。古い記事は tar で100個くらい固
めて gzip かけると 1/4 くらいになります。
効率がいいのはヘッダとか同じようなものが繰り返し出てくるからです。
100 というマジックナンバーの目安は 100 個固めると 50K bytes 前後になる
ので好都合な値にうまくなるという経験論から来ています。
=E
Articles in $DIR/spool requires a lot of spaces if the number of
articles are many (e.g. 1000 articles may need 2M). You can use "gzip"
(GNU zip) 100 articles to be 1/4 size tar.gz archived file. In my
experience 100 articles to be gzip-ped to be 50K size tar.gz. 50K
seems an appropriate size for one mail. You can save spaces a lot by
archiving articles.

.S	自動アーカイブと自動 expire の諸注意
=E.S	Automatic archive and Expire 

ここでいう『アーカイブ』とはある程度の数のメールを一つにまとめて保存す
る(方法の)ことを意味しています。$DIR/spool に一通ずつためるのもアーカ
イブという概念だとは思いますが、このドキュメントでは区別しています。
=E
Spooling $DIR/spool must be a kind of "archive" (plain format), but in
this document we distinct "archive" and "spooling". Here "archive" is
to pack several articles to one file (e.g. tar.gz) and to store them
in some directories.

手動でアーカイブ作成や古い記事の削除をするのがある意味で安全です。
fml に自動でそれらを行なわせることもできます。
=E
Running archive and expire BY HAND must be safe. FML can expire or
archive articles automatically.  The variables are $USE_EXPIRE
(expire) and $USE_ARCHIVE (archive).

$USE_EXPIRE (古い記事の削除)と $USE_ARCHIVE (アーカイブの作成) という
変数を 1 にすると fml がアーカイブとexpireを行ないます。

expire と アーカイブ は相反する概念です。２つを同時におこなう場合はパ
ラメータの選び方に要注意です。デフォールトはそれを考慮した数値になって
いるつもりです。
=E
Notions of $USE_EXPIRE (expire) and $USE_ARCHIVE (archive) conflicts
each other.  If you set both variables, pay attention on the values.
Default parameters can be considered for this possibility.

「絶対に記事はうしなわれてはいけない」という強い要求がある場合に 
「expire しつつアーカイブも作ることを全自動で行なう」ことは推奨できま
せん。というのはだれかがOSのtarやgzipを間違えて入れ換えたとかいう場合
を想定してみると危険性がわかります。expire はそういうものに依存してい
ないの普通に動いて記事を消していきますが、アーカイブは作成されなくなっ
てしまいます。よって
	『自分の設定は万全、大丈夫』
	『うちのOSはそんなことはしない、大丈夫』
	『まぁこのＭＬの記事はちょっとくらい失われてもOK』
など容認できる必要があります。
=E
Usually we want not to lose ML articles. Hence running both expire
and archive at the same time conflicts each other. Firstly it is
difficult to choose parameters. Secondly archive depends on "gzip"
and "tar", external system commands. It may be broken and may be
mis-replaced for version up. On the other hand expire code does not
depends such a thing. You can run "expire" without archive safely.
Running both functions depends on your confidence :) or tore-lance
that articles may be lost.

アーカイブかExpireのどちらかを自動でどちらかを手動でやるのが理想なのか
もしれません。安全性からいえばやはり『 自動アーカイブ、手動でexpire 』
が理想です。両方やる場合はアーカイブだけを設定してみて、うまくいってい
ることを確認してから expire を設定するべきでしょう。
=E
To do both archive and expire by hand is best.  To do automatic
archive and expire by hand must be second best. 
If you want to use both, firstly use only archive and check it.
After checking archive works well, set expire.

パラメータの選び方ですが、ファイルの取り寄せ等に影響があるため必ず 
$EXPIRE_LIMIT が日数ではなく"記事の数"(残したい記事の数)で指定して下さ
い。そして次の条件
=E
Configuration parameters require $EXPIRE_LIMIT is "number" (articles
left in $DIR/spool) NOT "DAYS" (expire date). It also requires

	$EXPIRE_LIMIT > $ARCHIVE_UNIT 
.k	$EXPIRE_LIMIT > $ARCHIVE_UNIT 
.k	$EXPIRE_LIMIT
.k	$ARCHIVE_UNIT 
.l	relation_EXPIRE_LIMIT_and_ARCHIVE_UNIT 

が必要です。念のため
=E
We recommend such as conditions

	$EXPIRE_LIMIT = $ARCHIVE_UNIT * 2;

くらいにしておくのが良いでしょう。そうでない場合整合性が保証されないの
でエラーとなります。もちろん毎回ファイルを全て調べる等の莫大な 
overhead をかければ実現はできますが、コストが見合うとは思えないので実
装されていません。

.S	何故、まとめてgzip化したいのか?
=E.S	Why "gzip" articles?

1. 一個一個gzipかけると、約半分にしかなりませんが、100個まとめて書ける
と、ヘッダとかの重なりがあるので約25%にまで圧縮できるようになります。
=E
1. Why gzip articles? It is to save directory usage. Compression rate
is very high since each headers are similar each other.

2. Mail-Countが万を越える頃になるといい加減 directory cache などが煩わ
しくなってきます。一つの directory の中のファイル数を減らす or ほかの
場所に移すことに意味があるようになります。そこでspoolの中身を移し、100
分の一のファイル数にすると効果が非常にあります。
=E
2. to avoid a large directory cache in the unix kernel.



.C	utility プログラム

.S	gzip file にする(アーカイブへの変換)
=E.S	Conversion to "gzip"ed file (archive file)
.l	archive.pl
.k	archive.pl
.xref	cron

$USE_ARCHIVE の自動操作にまかせずに時々手で もしくは cron 等でこのプロ
グラムを動かしても良いです。
.xref	cron
=E
If you would like to create archives by hand, please run archive.pl.

	archive.pl [-dh] [-A ARCHIVE_DIR][-u unit] range

	-d	debug mode
	-h	help 
	-A	アーカイブを作る場所を指定
		config.ph より強い
	-u	固める単位。デフォールトは記事１００個ずつ

	range	これで最大どの記事までをアーカイブするか強制指定
		デフォールトでは今の記事番号の直前の”１００の倍数”
		までをアーカイブの対象の記事としてアーカイブを作る。
=E
	-d	debug mode
	-h	help
	-A	archive directory (overwrite $ARCHIVE_DIR)
	-u	unit	(overwrite $ARCHIVE_UNIT)
	range	scan 1-range articles and pack them

注意:このプログラムはMLのホームで実行されることを前提にしています。つ
まり
=E
Please run thig program in $DIR, a mailing list home (config.ph
location).  E.g.

	% cd /var/spool/ml/Elena
	% perl bin/archive.pl

のように使うことを期待されています。

これは archive.pl 2000 とかすると、2000 までのファイルを 100 個ずつの
塊にして、archiveに作ります。変数は archive.pl の先頭でセットしてくだ
さい。元のスプールは消さないので、注意を払って消して下さい
(とりかえしがききませんから、それは)
＃自分じゃ、念のため ある程度まとまったところでこうやって手動でつくっ
＃てます。
=E
Run "archive.pl -u 100 2000" to crate 20 tar.gz files in $ARCHIVE_DIR. 
Each tar.gz file contains 100 articles. $DIR/spool has original
articles in tar.gz, which are not removed. Please remove them by hand
after checking tar.gz contents.

例えば、

	spool/1-100	を tar+gzip して var/archive/100.tar.gz
	spool/101-200	を tar+gzip して var/archive/200.tar.gz

のようなファイルをarchiveの下に作ります。目的のＭＬの場所にまでいって

% ls 

MSendrc		actives		config.ph	deny
guide		help		list		log
members		objective	seq		spool
summary		welcome

% test -d var || mkdir var
% test -d var/archive || mkdir var/archive
% perl archive.pl 3800

	…たくさんメッセージが出るが省略…
=E
	a lot of messages ...

% ls archive

100.tar.gz   200.tar.gz 

	…たくさんメッセージが出るが省略…
=E
	a lot of messages ...

spoolの 3800 までの 100 個ずつのパッケージを作りました。spoolの方の元
メールを自動的に消しはしない(安全のため)ので、自分で消して下さい。

.S	アーカイブ作成を cron で自動処理
=E.S	Automatic archive creation (run archive.pl by cron)
.k	archive by cron

cronで自動的(例えば週一日曜の朝とか)に次の形で
=E
For example, you can run the following command to run archive.pl by
cron once in a week (morning on Sun) in the following:

   (chdir /var/spool/ml/Elena; /usr/local/bin/perl bin/archive.pl)

とでもすれば良いでしょう。bin/archive.sh がその見本です。いくつかＭＬ
があるなら、シェルスクリプトにまとめて呼べば楽です。まとめ送りと同様に 
crontab に記述すればよいです。
=E
It is useful to set up a shell script for plural ML's.

crontab の例：
=E
crontab example:

	0 * * * * /bin/sh /usr/libexec/fml/archive.sh

[/usr/libexec/fml/archive.sh]

	#!/bin/sh

	(cd /var/spool/ml/Elena;    /usr/local/bin/perl bin/archive.pl)
	(cd /var/spool/ml/Freekick; /usr/local/bin/perl bin/archive.pl)

.# $Id$
.# Copyright (C) 1993-2000 Ken'ichi Fukamachi
.#          All rights reserved. 
.#               1993-1996 fukachan@phys.titech.ac.jp
.#               1996-2000 fukachan@sapporo.iij.ad.jp
.# 
.# FML is free software; you can redistribute it and/or modify
.# it under the terms of GNU General Public License.
.# See the file COPYING for more details.
