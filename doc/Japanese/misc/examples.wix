.C	いろいろ


.S	From と 配送先が一致した時に、配送を止めたい(dynamical skip?)
=E.S	Not Deliver From: Field Address Of In-Coming Mail. 
.k	%SKIP
.k	$SKIP{アドレス}
.k	skip
.k	$START_HOOK

こういう処理を config.ph にかいてください。
=E
If you do not deliver an article when you yourself post it, set

$START_HOOK = q#
	$SKIP{'fukachan@phys.titech.ac.jp'} = 1
		if &AddressMatch($From_address, 'fukachan@phys.titech.ac.jp');
#;

こうすると fukachan@phys.titech.ac.jp あてのメールは skip します。
↑ここは actives とかに現れるものと同じにして下さい。

複数あるなら 全部を うえのフックに加えて下さい。


.S	スプールに記事をためない
=E.S	Not spooling of articles
.k	スプールに記事をためない
.l	$NOT_USE_SPOOL

DISKが足りない等で記事をためずに配送するだけにしたいなら
=E
If you have not enough disk, you may not spool articles. If so, set

	$NOT_USE_SPOOL = 1;

と設定してください。もちろんその場合は古い記事の取り寄せ等ができません
(当たり前)。
=E
Of course, "get", "mget" commands do not work.


.S	off と skip

fml-support: 07144

off はメンバ用
skip は管理者だけが使えるように

Count: 07122 で話題にあったように、エラー対策 (を兼ねたお知らせメイルな
んですが) として on off matome のメンバには定期的に個別にメイルを送って
ます。(skip の場合には送らないようにしている)

.S	登録/削除以外は限りなく不必要

fml-support: 07271

条件1. 登録者に一切報告メール(welcome も)は送らない
条件2. 登録した、退会した、旨のメールのみ送る
条件3. よってコマンドは subscribe と bye 以外不要だろう

@PermitProcedure = ('subscribe', 'confirm', 'bye');

で、この３つ以外のコマンドをdisableして、さらに

     &DEFINE_MODE('disablenotify');

とかするとほとんどなくなるでしょうかね…


.S	command status report をしなくさせる

command status をおくりかえしている部分を disable するには
＃コマンドの普通の受け答え（？）の類をやみにほうむるには

    &DEFINE_MODE('disablenotify'); 

と config.ph に書くとこの関数がダミーの状態で呼ばれるけど何もしないよ
うになります。ただし新規登録の時の welcome 部分は例外処理してるからこ
れじゃだめなんですけどね


.S	メーリングリストへの初投稿に至る手数をなるべく少なくしたい

fml-support: 07521 より

Q: メーリングリストへの初投稿に至る手数をなるべく少なくしたい

   A) メンバ以外のアドレスからML名@xxxxxxxxxx ($MAIL_LIST)
      へ投稿した場合は、
   [1] members ファイルに自動登録する。
   [2] 投稿されたメールをmembersに配送する。

これだけですとメーリングリストへ参加するために何か投稿しなくてはならな
いので、コマンド用のアドレスでは登録のみを行うようにする。即ち、

B) メンバ以外のアドレスからML名-ctl@xxxxxxxxxx ($CONTROL_ADDRESS)
   へメールを送信した場合は、

   [1] membersに自動登録する。

A: config.ph でちょっと tricky だが 
   
    $AUTO_REGISTRATION_LINES_LIMIT = -1;
    $START_HOOK = q#
    	if ($Envelope{'mode:ctladdr'}) {
    		$AUTO_REGISTERED_UNDELIVER_P   = 1;
    	}
    	else {
    		$AUTO_REGISTERED_UNDELIVER_P   = 0;
    	}
    #;

のような設定をする。


.S	意見受付用アドレス？

意見受付用アドレスをMLでうけて、送ってきた人に「ご意見ありがとうござい
ました。返事はしばらく待ってね。」と自動で応答させる。

改造:
そのために投稿は誰でもOK。ただし、メンバー以外からの投稿はMLに流し、か
つ投稿者にguideファイルを返す（自動登録はしない）。

config.phの設定例 1:
.fi
.if LANG == ENGLISH
We accept opinions by mail from anyone and send back the reply "thank
you for your opinion" to the sender.

object:
return guide if fml receives post from the member.

config.ph configuration Example 1:

1. permit post from anyone
2. add $START_HOOK to send back "guide"
.fi

.q
### sample configuration ###
$PERMIT_POST_FROM              = "anyone";

# YOU CAN EDIT MANUALLY AFTER HERE.
$START_HOOK = q# 
   if (! &MailListMemberP($From_address)) { &GuideRequest(*Envelope);} 
#;
.~q

.if LANG == JAPANESE
config.ph 設定例 2:
guide ではなくguideとは別に用意したファイルを返す。
ヘッダもカスタマイズ
.fi
.if LANG == ENGLISH
config.ph configuration Example 2:
return another file not guilde with the header:
.fi

From: $MAIL_LIST
Subject: Thanks you for your mail


.q
### sample configuration ###
$PERMIT_POST_FROM              = "anyone";



# YOU CAN EDIT MANUALLY AFTER HERE.
$RECRUIT_ACK_STATEMENT = "Thanks you for your mail";
$RECRUIT_ACK_FILE      = "$DIR/recruit_reply";

$START_HOOK = q#
    if (! &MailListMemberP($From_address)) {
	&DEFINE_FIELD_OF_REPORT_MAIL('From', $MAIL_LIST);
        &SendFile($From_address, $RECRUIT_ACK_STATEMENT, $RECRUIT_ACK_FILE);
    }
#;
.~q



Q: 一日のMail数が 一目でも分かるように…

例えば0:00を境に
   Subject: [elena 00100] の番号を自動的に 
   Subject: [elena 00000] にしたい

/var/spool/ml/elena 以下の seq, summary, log, spool などを全部初期かし
てしまうしかないです。

解答例: このプログラム(shell script)を毎日夜12時にまわす

   #!/bin/sh

   ml=elena
   date=`date -u +%C%y%m%d`

   /usr/local/fml/makefml lock $ml 60 &

   cd /var/spool/ml/$ml || exit 1

   for file in seq spool summary log
   do
       if [ -f $file ];then
          # mv $file $file.$date
          cp  $file $file.$data
         cp /dev/null $file
       fi
   done


.S	避けた方が良いアドレスはありますか？

RFC2142 に以下のようなリストがあります。一番左の列がそのアドレスです。
これは(spammer が狙いそうな)各組織に必ず存在しているだろうと思われてい
るアドレスと考えられます。

企業の場合 info や sales support といったアドレスはまさにこれですが、
逆に変なフィルタ制限をかけるとはまることがあります。変なメールを送るお
客さんかもしれないからです。

しかし組織内利用等のＭＬ名にはこれらを避けておく方が吉でしょう。

   アドレス       サービス            仕様について
   -----------    ----------------    ---------------------------
   INFO           Marketing           Packaged information about the
                                      organization, products, and/or
                                      services, as appropriate
   MARKETING      Marketing           Product marketing and
                                      marketing communications
   SALES          Sales               Product purchase information
   SUPPORT        Customer Service    Problems with product or
                                      service

   ABUSE          Customer Relations  Inappropriate public behaviour
   NOC            Network Operations  Network infrastructure
   SECURITY       Network Security    Security bulletins or queries

   POSTMASTER     SMTP                [RFC821], [RFC822]
   HOSTMASTER     DNS                 [RFC1033-RFC1035]
   USENET         NNTP                [RFC977]
   NEWS           NNTP                Synonym for USENET
   WEBMASTER      HTTP                [RFC 2068]
   WWW            HTTP                Synonym for WEBMASTER
   UUCP           UUCP                [RFC976]
   FTP            FTP                 [RFC959]


.C	permission について

.S	ＭＬのスプールの read permission
=E.S	read permission for ML's spool ($SPOOL_DIR)

通常ＭＬ管理者の権限で fml は走っています。そしてＭＬの全てのファイル
は管理者以外の人が見れない様になっています。
=E
FML runs as an owner of a ML maintainer. In default the only maintainer
can read articles, spools, ...

例外としてメーリングリストの directory でも htdocs だけはすべての人が
読めるようになっています。これは httpd がどのユーザ権限で走っているか
わからないためです(通常 nobodyとかで走っている)。
=E
Some exceptional files exist. For example directories under htdocs/ is
world readable for httpd.

セキュリティについては .ptr{security}
=E
See .ptr{security} for security.


.S	スプールにあるファイルをMIME逆変換する
=E.S	reconvert MIME characters in the spool
.k	スプールにあるファイルをMIME逆変換

lib/MIME/rmime を使って、/bin/sh なら
=E
use lib/MIME/rmime and runs shell scripts like 

	for file in *
	do
	   mv   $file     $file.org
	   perl rmime $file.org > $file
	done

くらいでＯＫでしょう
＃とりあえず .org つきのをバックアップに残すコードつき:-)

nkf -m でもいいだろう
=E
nkf -m must be also useful if nkf is not too old.


.S	mget でえた spool の下のファイルを mh 以外で読む時
=E.S	read not MH in the spool which is sent back by "mget".
.l	lib/Utilities/packmbox.pl
.k	packmbox.pl
 
lib/Utilities/packmbox.pl を使って、
=E
To create "mbox", you use lib/Utilities/packmbox.pl and runs 

	(cd spool; packmbox.pl ) > ~/mbox

として、mbox をつくれば、これにたいして、/bin/Mail なり Rmail なりを使
うことができて便利でしょう。


.S	配送するメールのMIME部分はDecodeしてしまいたい
=E.S	MIME-Decode MIME parts of mail to distribute
.xref	MIME

では、配送するメールのMIME部分はDecodeしてしまいたい時はどうするか？
例えば、fml.pl の sub GetFieldsFromHeaderで
=E
To MIME-Decode MIME parts of mail to distribute is to change

    if ($USE_LIBMIME && ($MailHeaders =~ /ISO\-2022\-JP/o)) {
        require 'libMIME.pl';
	$Summary_Subject = &DecodeMimeStrings($Summary_Subject);
    }

を
=E
to

    if ($USE_LIBMIME && ($MailHeaders =~ /ISO\-2022\-JP/o)) {
        require 'libMIME.pl';
	$Summary_Subject = &DecodeMimeStrings($Summary_Subject);
	$MailBody = &DecodeMimeStrings($MailBody);
    }

で本文の任意の ISO-2022-JP で始まる部分だけをMIME decodeします


.S	fmlのコマンドが送れるページの例
=E.S	URL where you can send FML commands
.url	http://www.infosite.ne.jp/fml/

.q
in fml-support: Count: 01585
From: Yuao Tanigawa <yuao@infonia.or.jp>
>   fmlのコマンドが送れるページを作ってみました。URLは

…
.~q

.S	spool はなにを保存してるの？

配送された記事です。get などの取り寄せ時に同じものが返るように、配送さ
れたものと同じものを保存しています。
fml に入力されたものとは違います。


.S	fml に入力されたものを spool/ に保存できますか？

そういうオプションはありません。

expire してもいいなら $USE_LOG_MAIL を on にすると入力(のメール)を 
var/Mail/ の下に貯めていけます。

spool.orig とかにオリジナルをずっと貯めておきたいなら、こんなかんじで
すかね

# $ID は $START_HOOK ではまだ決まっていないので最後のHOOKにする
$FML_EXIT_HOOK = q#
	my ($f) = "$SPOOL_DIR.orig/$ID";
	-d "$SPOOL_DIR.orig" || mkdir("$SPOOL_DIR.orig", 0700);
	if (open($f, "> $f)) {
		print $f $Envelope{'Header'}."\n".$Envelope{'Body'};
		close($f);
	}
#;


.S	ロックで変になっている時にlockfileを全部消してもいいですか？

多くの(古そうな)ファイルは消してもいいですが、走ってるプロセスに関係し
てるのだけは避けた方がいいです。その時は rm -f var/run/lockfile.v7 (た
ぶん日付があきらかかに一時間以上古いはず)っていうファイルだけ消してみ
るのが良いです。
