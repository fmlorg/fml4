.S	Cron (FML Vixie cron compatible program, bin/cron.pl)
=E.S	Cron (FML Vixie cron compatible program, bin/cron.pl)
.l	cron
.l	cron.pl
.k	cron.pl
.k	bin/cron.pl
.k	etc/crontab
.k	$DIR/crontab

○ cron.pl って何？
cron.pl(例: /usr/local/fml/bin/cron.pl)はシステムにユーザごとに定義で
きる cron がない場合に使います。まずはユーザごとに定義できる cron がな
いかどうかを調べて下さい。まずはマニュアルを引いてみて下さい。
	man cron
	man crontab
を試してみるのが最初です。
=E
The present OS may have a cron for users. Please check it in the
first.  e.g. man cron, man crontab If only root can set up OS's cron
so a general user cannot control cron, you can use FML cron (clone of
4.4BSD cron).

○ どう動くの？
動きとしてはOS附属の cron と同じです。つまり１分に一回起きて今やるべき
ことがあるかどうかを確認するためにcrontabを見ます。そしてするべきこと
があればそれを実行します。
=E
FML cron sleeps and runs once a minute.  If the crontab entry has a
job now, cron run it.  It is same as UNIX cron daemon.

○ cron.pl は誰がいつ走らせるか？
管理者が手で起動してもいいし、fml.pl が cron.pl を走らせてるようにして
もよいです。注意として fml.pl から cron.pl を走らせると各ＭＬごとに一
つのcronが走って無駄です。複数のＭＬがある場合は一つの cron.pl で複数
のＭＬを担当するような設定ファイルを書くのが良いです。
=E
You can run cron manually. fml.pl can run cron.pl automatically. If
fml.pl automatically runs cron.pl, it runs each cron.pl for each
ML. It is of no use. It is enough that one cron.pl for one user.

fml.pl から起動すると何回も cron.pl を起動しますが、複数は走りません。
最初の一個以外は自殺します。各ＭＬごとに一つです。$CRON_PIDFILE
($DIR/var/run/cron.pid)というファイルにプロセス番号を保存し一意性を保
証しています。
=E
fml.pl runs only one cron.pl, not plural for one ML. fml.pl checks
$CRON_PIDFILE ($DIR/var/run/cron.pid) to ensure only one cron.pl
running.

○ cron.plは一度起動するとずっと走っている？

理想的としてはそうです。が、cron.pl が知らない間に落ちてるかもしれない？
という可能性もあります。システムの cron なら大丈夫ですが、マシンがリブー
トしたら当然FMLのcronは止まったままになってしまいます。そのため何らか
の方法で定期的に起動しなおしてやる必要があります。
=E
cron.pl may be down. OS does not run cron.pl automatically, so 
digest delivery does not run until you are aware of it. 
For it, you can set up fml.pl runs cron.pl when mail comes in.


○ 注意
また長く走り過ぎておかしくなる場合も考慮してデフォールトでは24時間で次
の cron.pl を起動しなおします。これは予防策であって必ずしもする必要は
ありません。-n オプションをつけるとずっと走り続けるようになります。
=E
In default cron.pl itself exits, and new cron.pl runs to avoid strange
behavior when a process runs long long time.
However -n option enables infinite running.

○ コマンドシンタックス

SYNOPSIS
	cron.pl [-a] [-d] [-b43] [-fcrontab] [-bd] $DIR [$LIBDIR]

    -d                debug mode 
    -a                run eternally(default: 180sec. = 60sec. * 3times) 
    -n                working all times without RESTART
    -mtimes           run from now to (60 * times) sec. after 
    -fcrontab-file    alternative crontab 
    -h                show this help and exit 
    -bd		      daemon (Become Daemon) 
    -bOSTYPE          -b43(OSTYPE = 43): 4.3BSD Like. not mailed to you 

-b43 オプションは 
.k	-b43
=E
-b43 option set

	$CRON_NOTIFY    = 0; (default 1)
.k	$CRON_NOTIFY

ということをします。デフォールトでは cron が何らかの処理をした場合はそ
のログをそのユーザに知らせます。
=E
In default, cron.pl notify the cron job log to the owner of the
process by mail (like 4.4BSD cron).

またデフォールトでは cron.pl はデーモン化しません。
=E
Also in default, cron.pl does not detach the current tty, that is, not
become a daemon since becoming daemon does not work well on an OS.

	-onotty
.k	-onotty

オプションをつけると自分でデーモン化します。
うまくいかないＯＳがありうることを考慮してデフォールトでは
=E
cron.pl becomes daemon by itself. In default

	$NOT_USE_TIOCNOTTY = 1;		# no ioctl
.k	$NOT_USE_TIOCNOTTY

つまりデーモンにならないようになっています。

.S	Vixie Cron
.k	P.Vixie
.k	ISC (Internet Software Consortium)

4.4BSD には Paul Vixie の書いた各ユーザごとに cron を定義できる cron 
が入っています。これがあるなら cron.pl は要らないです。詳しくはシステ
ムのマニュアルを見て下さい。
＃全然関係ないけど vixie enterprise にftp.NetBSD.ORGとかあります。
＃Vixie偉い
=E
4.4BSD has Vixie Cron, so you can use it for yourself. Please use it
on 4.4BSD. Also firstly you should check your OS's manuals. 

.q
cron (8) - daemon to execute scheduled commands (Vixie Cron)
crontab (1) - maintain crontab files for individual users (V3)
crontab (5) - tables for driving cron
.~q

古いOSにはありません。しかし元々入っていなくても管理者の人がインストー
ルしているかもしれません。探してみる価値/聞いてみる価値はあります。
=E
An old OS has no such cron. However an administrator installed Vixie
cron. It is of value to trek your system:-)

FMLのcron.plはあくまでも『そういう cron を提供してくれていないOS』でま
とめ送りを支援するためのものです。こういうサービスはOSが提供してくれる
のが本筋というべきでしょう。
=E
cron.pl is a clone for such an old OS.

.S	cron.plを自動的に起動するようにするためには？
=E.S	How To Install cron.pl

システムが定期的に何かをしてくれないので、cron.pl をなんとかして(疑似
定期的に)起動したいわけです。問題はどう起動するか？だけです。
=E
The system in the bootstrap time does not run cron.pl automatically.
We would like to run cron.pl anyway. What should we do?

まず起動自体は
=E
To run cron.pl, the arguments are

	% cron.pl $DIR(config.phの場所) $LIBDIR(libsmtp.plとかの場所) 
=E
	% cron.pl $DIR(config.ph location) $LIBDIR(lib*.pl location)

の形で起動します。
＃注意: Argument がないと、その環境の $HOME にいってしまう

問題はどうやって定期的に起動をトライするかですが、例えば
=E
The problem is how to run cron!.  For example, you can set up the
following ways:

   1. たとえば ~/.login で cron.pl を起動するとか(すでに走っていれば走
      らないから大丈夫)…
=E
   1. 	set up your ~/.login which run cron.pl. When you log in the
	system, you run cron.pl. Cron.pl always checks other cron.pl 
	runs or not, so	only one cron.pl runs.

   2. loginしたとき、まめに(手動で)たちあげるとか…
=E
   2. runs cron.pl manually :)

   3. MLサーバにメールが来たときに起動させる↓とか…
=E
   3. fml.pl runs cron.pl when mail comes in.

が考えられます。３の設定としては config.ph に
=E
config.ph example for case 3 is 

.k	$CRON_PIDFILE
.k	$CRONTAB
.k	$DISTRIBUTE_CLOSE_HOOK

	$CRON_PIDFILE = "$DIR/var/run/cron.pid";
	$CRONTAB      = "$DIR/etc/crontab";

	$FML_EXIT_PROG = "$LIBDIR/bin/cron.pl $DIR $LIBDIR -a";

をつけたします。
＃いずれも適当にパスとかは変えてください

cron.pid は cron.pl の pid を記録するファイルです(/var/run/cron.pidに
相当するもの)。
=E
cron.pid ($DIR/var/run/cron.pid) corresponds to /var/run/cron.pid but
exists for each ML under FML.

crontab は システムの /var/cron/tabs/$USER (4.3BSDの/etc/crontab)に相
当するものです。makefml newml した時に各ＭＬの HOME (config.phのある場
所)には crontab という見本(4.4BSD形式) が作られます。4.4BSD 形式ではこ
れを使えばまとめ送りの設定ができます。
=E
When you run "makefml newml", FML sets up each crontab for each ML.
It is an example for Vixie cron.  You can use it on 4.4BSD and under
Vixie cron.

[Example]
	% makefml newml elena
	  ...
	% cd /var/spool/ml/elena
	% crontab crontab

＊＊＊注意＊＊＊
cron.pl は 4.4BSD FORMAT を理解します。4.3BSDの形式ではありません

.# $Id$
.# Copyright (C) 1993-2000 Ken'ichi Fukamachi
.#          All rights reserved. 
.#               1993-1996 fukachan@phys.titech.ac.jp
.#               1996-2000 fukachan@sapporo.iij.ad.jp
.# 
.# FML is free software; you can redistribute it and/or modify
.# it under the terms of GNU General Public License.
.# See the file COPYING for more details.
