.C	FML 設定ファイルのフォーマットと構造
=E.C	FML configuration files, formats and structures
.l	fml-file-structure
.k	fml 設定ファイルのフォーマットと構造

fml の設定ファイル、メンバーリストは基本的に shell like な構造で記述さ
れていると期待されています。つまり基本的に # ではじまる行はコメント、
空行は飛ばす等の挙動を各ルーチンはしています。
=E
Lists used in FML assumes shell like structures:
	a line with "#" is comment.
	skip null lines.

以下では各設定ファイルのフォーマットについて言及します。

.S	members ファイルのフォーマットと構造
=E.S	members file formats
.k	members ファイルのフォーマットと構造

生のファイルのフォーマットは後述のようなものです。コマンドの挙動は 2.2 
以前と以後でちょっと違います。2.2 以降のmembersコマンドでは一般ユーザ
には下のようなフォーマットは見えません。すでにいなくなったメンバーの情
報をだすべきではないからです。admin members では後述する生のフォーマッ
トが見えてしまいます。一応知っておいて下さい。
=E
Fml 2.2 REL provides the raw format to administrators but not raw
format to general users since general users should not know members
which unsubscribed the ML in the past. Please remember the following
format if you are an administrator.

$MEMBER_LIST (default members) で定義されるファイルは
=E
The format of $MEMBER_LIST (default members) is

.if LANG == JAPANESE
	#.FML
		…fml が自動的につけるコメント…
	#.endFML
	アドレス1
	アドレス2
	# アドレス3
	##BYE アドレス4
	アドレス5
.fi
.if LANG == ENGLISH
	#.FML
		comments put by fml
	#.endFML
	address-1
	address-2
	# address-3
	##BYE address-4
	address-5
.fi

のような形をしています。歴史的理由により現在では

   # の後空白 でコメントアウトされていてもメンバーチェックの対象になる
   ## ではじまるところはコメント
=E
   "# something" syntax is comment out but used for member check. 
   But it is not used for delivery.
   "##something" syntax is real comment out.

となっています。よって上の例では ##BYE の行は無視されますが、それ以外
の アドレス1 〜 アドレス5 (4を除いて) すべてがメンバーチェックの際には
対象となります。
=E
Hence fml.pl ignores "##BYE address-4" line but address-1,2,3,5 is
candidates for ML members. fml.pl compares a sender (From: line's
address) and address-1,2,3,5 for member check.

［歴史］
この動作は 1.2 release version の直後、自動登録を拡張する際に導入され
ました。またこの導入のため # off と # skip はどう違う？という疑問がそ
の後生まれることになりました。

なおメンバーファイルとしては各行のアドレスより後ろの部分は
何にも使われていませんので、勝手に使って構いません。

しかしながら、自動登録の場合は $MEMBER_LIST と $ACTIVE_LIST は同じもの
（$MEMBER_LIST）が使われます。よってそのフォーマットは $ACTIVE_LIST 形
式であると仮定する必要があります。

.S	actives ファイルのフォーマットと構造
=E.S	actives file formats
.k	actives ファイルのフォーマットと構造

$ACTIVE_LIST (default actives) で定義されるファイルは ＄MEMBER_LIST と
同様の構造を持ちます。
=E
$ACTIVE_LIST (default actives) has a format similar to $MEMBER_LIST.

しかし actives ファイルは拡張された表現として各アドレスのオプションを
行の残りの部分に持つことができます。
=E
The format is 
	address		options		# comments

	アドレス	オプション	# コメント

	注意：なお、それぞれの↑ブロックの間には必ず一つ以上の SPACE
	か TAB があると仮定しています。

よって勝手に何かを書いた場合オプションとみなされます。付加情報は # コ
メント として行の最後にでも書いて下さい。この辺は shell と同じです。

.if LANG == JAPANESE
オプションは V1 と V2 フォーマットがあります。

   V1 フォーマットは

	数字(フォーマット)	まとめおくりの指定
	数字以外		リレーサーバ

   V2 フォーマットでは将来の拡張のため

	m=まとめ送り指定
	r=リレーサーバ
	s=1(skip を意味する)

のように alphabet=option-value の形で定義されています。現在のところこ
れ以外のキーワードは将来のために予約されています。
.fi
.if LANG == ENGLISH
* available options:

	m=digest-options
	r=relay-server
	s=1 (skip)
.fi

現在のルーチンは V2 のみを理解します。よって V1 -> V2 に変換する必要が
あります。この変換は

	libfml.pl で ChangeMemberList が呼ばれた時

つまりメンバーリスト等へのなんらかの変更を行なう時に自動的に行なわれま
す。

.S	actives と members の違い
=E.S	Differences between $ACTIVE_LIST and $MEMBER_LIST
.k	actives と members の違い

フォーマット的には上述の通りです。後は自動登録の章で述べられている通り
members はメンバーであるか否か？の認証、 actives は配送リストです。
=E
Please see above on formats. For functions see the chapter on
automatic registration (.ptr{auto-regist}).  $MEMBER_LIST is used to
compare a sender (From: address) and addresses in lists to check the
sender is a member or not.  $ACTIVE_LIST is a list to distribute.
Under automatic registration (not auto_asymmetric_registration),
$MEMBER_LIST == $ACTIVE_LIST internally, fml does not read
$ACTIVE_LIST.

自動登録では members 一つを認証と配送リスト両方に使っています。そのた
め表現の拡張が必要だったわけです。

.S	複数のメンバーリスト、複数の配送リスト
=E.S	Plural member lists and delivery lists
.l	@ACTIVE_LIST
.l	@MEMBER_LIST
.k	@ACTIVE_LIST
.k	@MEMBER_LIST

	@ACTIVE_LIST	複数の配送リスト
	@MEMBER_LIST	複数のメンバーリスト

を定義できます。地方ごととか組織ごとにリストを管理するのに便利かも知れ
ません。
=E
You can define arrays
==
	@ACTIVE_LIST	plural member lists
	@MEMBER_LIST	plural delivery lists

デフォールトでは @ACTIVE_LIST は $ACTIVE_LIST と同じになります。
@MEMBER_LIST は members と members-admin です。
=E
fml automatically put $ACTIVE_LIST to @ACTIVE_LIST and uses
@ACTIVE_LIST as a distribute list. In the same way for MEMBER_LIST.

歴史: 最初に管理者を設定して後はリモートですべてをおこなうという目的の
ために拡張されました。

***
actives members のバックアップについて => .ptr{list-turn-over}
=E
turn over actives/members list => .ptr{list-turn-over}

.##########
.# .include member_name.wix
.##########

.S	msendrc ファイルのフォーマットと構造
=E.S	$MSEDN_RC format (digest control file msend.pl uses)
.k	msednrc ファイルのフォーマットと構造

msendrc は $MSEND_RC で定められる場所におかれます。そのフォーマットは
=E
$MSEND_RC is used by msend.pl, the digest delivery program. The format
is

	アドレス	次回に送る最初の記事番号
=E
	address		the first sequence number to send in the next digest.

です。msednrc は msend.pl が制御するログファイルです。msend.pl は 
$ACTIVE_LIST を見て、

.if LANG == JAPANESE
	・あるアドレスがまとめ送りになった
		そのアドレスのエントリを msendrc 内に新しく作る

	・あるアドレスがまとめ送りで”なくなった”
		そのアドレスのエントリを消去

	・まとめおくりを配送した
		次回に送る最初の記事番号を msendrc に記録する		
.fi
.if LANG == ENGLISH
	msend.pl 
	* generates new user entries.
	* updates msendrc if digest is sent.
	* removes entry if the mode for a user 
	  is changed to real time delivery.
.fi

ということを msendrc に対して行ないます。msend.pl 以外のプログラムが 
msendrc をいじることはありません。
=E
Only msend.pl control this file. 

.S	パスワードファイルのフォーマットと構造
=E.S	Password file format
.k	パスワードファイルのフォーマットと構造
.l	etc/passwd
.xref	bin/passwd.pl remote
.k	$PASSWD_FILE
.k	$DIR/etc/passwd

リモート管理の時の認証で用いるパスワードを保存しているファイルは
$PASSWD_FILE でデフォールトでは $DIR/etc/passwd です。フォーマットは
.xref	remote
=E
Password file ($PASSWD_FILE, in default $DIR/etc/passwd) format is

	アドレス	cryptされたパスワード
=E
	address		crypted-password

です。つまり UNIX 伝統のパスワードファイル形式の先頭の２つが空白で区切
られたものです。＃crypt(3) についてはマニュアル参照
=E
FML can use MD5 password format file if you set

	$REMOTE_ADMINISTRATION_AUTH_TYPE = "md5";
.xref	$REMOTE_ADMINISTRATION_AUTH_TYPE

と設定されている時は fml.pl の crypt 関数は crypt(3) ではなく MD5 の値
を返すようになります。これは MD5.pm を用いた実装なので perl 5 であるこ
とと MD5-1.7.tar.gz のインストールが必要です。MD5.pm のソースは fml の 
directory に一緒に置いてあります。
=E
This uses MD5.pm, so you must use perl 5. 

admin コマンドには initpass というパスワード初期化コマンドがあります。
あるアドレスをこのファイルへ登録する時などは makefml passwd を使うと良
いでしょう。makefml の使い方については INSTALL ファイルを参照。
=E
To initialize a new password, you can use "makefml passwd ML" and 
"admin initpass" command is available when remote administration.
Please see INSTALL for more details how to use makefml.

.S	FMLインストール後の maintenance と version up に関して
=E.S	Maintenances
.l	fml-maintenance
.k	How to maintain the installed fml source
.k	インストール後のメインテナンスとversion up
.k	version up
.k	maintenance

.if LANG == JAPANESE
install は makefml install を使います。version up も同様にして下さい。
というのはインストールするOSなどに依存することがあるので、makefml
install を使うべきだからです。なにをやっているか知っている人は別に cp 
でも構いません:)

version up の仕方は、例えば次のようになるでしょう。

	% cd /var/tmp
	% tar zxvf fml-current.tar.gz
	% cd fml-version番号他の名前
	% make install

以下では例として
	/usr/local/fml に executable
	/var/spool/ml/elena に elena ML
ということにしましょう。

makefml install はいつでも /usr/local/fml に executable やライブラリを
入れるだけです。version up の際に違うことは既にあるＭＬ群に対してロッ
クをしてからインストール作業を行なうことだけです。/var/spool/ml/elena 
の下つまり config.ph 等は変更を受けません。

fml.pl を筆頭に lib*pl 群は overwrite されますから自分でいじってしまっ
ている場合は一旦バックアップを取っておくことが必要です。

メインテナンスを楽にするにはコマンドのパスやＭＬ全体共通の設定はファイ
ルに全部書いておくべきだし、可能な限りHOOKなどにするべきです。例えば

	$HOME/libexec/fml/sitedef.ph 
.k	sitedef.ph 

で行ない各ＭＬごとの設定は

	$HOME/w/spool/fml-support/config.ph 
.k	config.ph 

で制御するなどの運用ポリシーを立てておくことも大事です。
.fi
.if LANG == ENGLISH
Let the configuration be like this 

	/usr/local/fml		executable and libraries
	/var/spool/ml/elena	elena ML home

"makefml install" installs executables and libraries to /usr/local/fml
and makes directory /var/spool/ml if it does not exist. makefml does
not touch files under /var/spool/ml/elena.  In version up, makefml
locks /var/spool/ml/elena before installing. It is just a difference
between initial installation and version up.

How should we maintenance mailing lists? You should set up all
configurations in files, config.ph, site*ph and uses hooks as could as
possible not hack original libraries. If you hack fml sources, version
up working overwrites them.  It is also useful for common settings in
ML's are /usr/local/fml/sitedef.ph or /usr/local/fml/site_init.ph.
.fi
