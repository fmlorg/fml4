.C	事例集

.S	例: fmlでの confirm のメールの本文をハックする (ひとつのＭＬだけ)

fml-support: 07974, 07975
「FMLから確認のメールの内容を、一つのメーリングリストだけ変えたい」

日本語で返事を返すテンプレートが /usr/local/fml/messages/ にあります。

	% cp -pr /usr/local/fml/messages /var/spool/ml/elena 

してください。confirmation 関係は

	/var/spool/ml/elena/messages/Japanese/confirm 

というテンプレートがあります。
このファイルの一番上のテンプレートを変更してみて下さい。

confirm.auto_regist.preamble:
	こちらは<_ARG0_>メーリングリスト(ＭＬ)のfmlです。
	これはＭＬに登録する意志の確認をするメールです。
	このＭＬに登録していいなら
	...

という部分があります、そこを編集してみてください。
/var/spool/ml/elena/messages が /usr/local/fml/messages に優先されます。

NOTE: 現在の実装(2000/05: 3.0-current も 3.0-stable も)ではこのように
して下さい。しかし、これでは upgrade した時にそのＭＬだけ upgrade され
なくなってしまいます。もうちょっと検索の仕方を工夫する余地があります。
将来の version ではもうちょっと賢くならないかと検討しています。


.S	例: fmlでのwelcomeメールの本文をハックする (全ＭＬ共通)

◯ $DIR/welcome ファイルをいじる

◯ 一番先頭の

   メーリングリストへの投稿は	<foo@bar.jp>
   コマンドは			<foo-ctl@bar.jp>
   管理者宛のメールは		<foo-admin@bar.jp>

のような部分をいじりたい場合は

/usr/local/fml/messages/Japanese/amctl というファイルの

amctl.added.caution:
	注意: このメールにリプライするとメーリングリスト宛になります。
	メーリングリストへの投稿は	<_ARG1_>
	コマンドは			<_ARG2_>
	管理者宛のメールは		<_ARG0_>
	へ送って下さい。

という部分をいじってください。

[KNOWN_BUGS]

XXX ただこのファイルはインストール時に上書きされてしまうので
XXX /var/spool/ml/etc/fml/messages/Japanese/amctl などという場所へコピー
XXX してそのファイルを好きなようにいじるべきです。しかし今度は fml を
XXX updateしたときに新しい /usr/local/fml/messages/Japanese/amctl の内
XXX 容が最新版を反映してくれません。現在のコードを修正してだめなら 
XXX /usr/local/fml のほうもさがすように修正するべきでしょう。


.S	welcomeというファイルの内容の前についてしまう部分を削除/編集

[3.0pl113 以降]

この部分はあるテンプレートファイルを変換して生成しています。

/usr/local/fml/messages/Japanese/amctl というファイルに

amctl.added.caution:
        注意: このメールにリプライするとメーリングリスト宛になります。
        メーリングリストへの投稿は      <_ARG1_>
        コマンドは                      <_ARG2_>
        管理者宛のメールは              <_ARG0_>
        へ送って下さい。

という定義があります。この文章の部分を編集/消してみることでカスタマイ
ズできます。

[3.0pl112 まで]

それでも英語のwarningがでてしまいます。

A2: 注意書きを後ろに持っていくのはwelcome というファイルを編集しましょう

.if LANG == ENGLISH
Q: customize welcome message in registration

A: sorry it is hard coded but you can customize only in Japanese mode. 
In the near future, we should expand it by using &MesgLE(). It is just
a problem to define templates.

.fi

.S	メールの最後に付加情報をつける設定
=E.S	Mail Preamble And Trailer

.if LANG == JAPANESE
注意: 基本的にコマンドの話です。

	$PREAMBLE_MAILBODY	（前）
	$TRAILER_MAILBODY	（後）
	を本文の前後に必ず付けます。

つまり、
	e.g. HELP コマンドにたいして、

	$PREAMBLE_MAILBODY	（前）
	HELPファイル本文
	$TRAILER_MAILBODY	（後）

のようになります。昔のやり方は

   $SMTP_OPEN_HOOK = q# $e{'Body'} .= $PREAMBLE_BODY.$e{'Body'}; #;
   ＃注：普通のＭＬのメールに $PREAMBLE_BODY がついて配送

ですが今は汎用性のためSMTPライブラリ中で処理されます。
.fi
.if LANG == ENGLISH
To append additional information, you can use $PREAMBLE_MAILBODY and
$TRAILER_MAILBODY. The command mail reply body becomes

	$PREAMBLE_MAILBODY
	command mail reply
	$TRAILER_MAILBODY
.fi

これと同様にすれば、本文にメールカウントを埋め込むことも可能になります。
注意： 配送されるメール本体につける方法。これは倫理的な問題があるので
変数などで容易にできるように実装されていません。
=E
FML DOES NOT IMPLEMENT THE VARIABLE TO REWRITE MAIL BODY IN TO
PRESERVE MORAL. It is against morals to rewrite mail body even if it
is an electric mail. We should treat it as the same as a postal mail.
The rewriting is to cut out a postal mail and rewrite it is mail
forgery.
==
If you rewrite the distribution mail, please use a hook BY YOUR OWN
RESPONSIBILITY AND RISK.

Example: 注意:このHOOKが走る関数中では %e == %Envelope 
=E
Example: In this hook %e == %Envelope. Append "Mail Count:
sequence-number" in the begging of distributed articles.

   $SMTP_OPEN_HOOK = q# $e{'Body'} .= "Mail Count: $ID\n\n".$e{'Body'}; #;

例： メール本文にヘルプを常につけたす
=E
Example: Append "how to get help" to the last of a distributed article.

   $SMTP_OPEN_HOOK = q% 

	$e{'Body'} .= 
       "\nTo need help, please send 'help' to elena-ctl\@fml.org."; 

   %;

.# $Id$
