GEN_DOC () {

	echo "Generating Plain Doc"
	( 
		chdir $FML
		make plaindoc
	)

	echo "Generating WWW Doc"
	(
		echo "Making WWW pages of doc/smm/op => var/html/op";
		chdir $FML; 
		make htmldoc 
	)
}


GEN_WWW () {
	echo "ReGenerating WWW Search Environment";
	(cd $FML; make syncwww search)
}


GEN_LIBRARY () {

	#perl cf/config -cn -I cf/compat.ignore |\
	#sed 's/sapporo.iij.ad.jp/phys.titech.ac.jp/' > proc/libcompat_cf1.pl

	echo  " ";
	echo  "Generating libkern.pl  ";
	sed '/^$Rcsid/,/MAIN ENDS/d' kern/fml.pl > proc/libkern.pl

}


INCREMENT_VERSION () {
	echo " "; 
}


CLEAN_UP_SNAPSHOT () {
	echo " "; echo "rm -f $DESTDIR/fml-*.gz"
	rm -f $DESTDIR/fml-*.gz
	echo " ";
}


MKDIR_DISTRIBUTION () {

	if [ -d $DESTDIR/distrib ]
	then 
		echo ""
		echo "      mv $DESTDIR/distrib $DESTDIR/FML/distrib.$BAKID" 
		mv $DESTDIR/distrib $DESTDIR/FML/distrib.$BAKID
		echo ""
	fi

	echo make a directory $DESTDIR/distrib; 
	mkdir $DESTDIR/distrib;

	for dir in `cat $DIRECTORY_LIST`
	do
		echo "mkdir $DESTDIR/distrib/$dir"
		mkdir $DESTDIR/distrib/$dir
	done

	(chdir $DESTDIR/distrib; ln -s contrib lib )
	(chdir $DESTDIR/distrib/doc; ln -s ../drafts drafts )
}


COPY_DOCS () {
   (
	echo " "; echo "Copying Documents (doc/ri)...";
	cd var/doc;
	cp -p $DOC $DESTDIR/distrib/doc;

	if [ -d advisories ]
	then
	   rsync -av advisories $DESTDIR/distrib/doc;
	fi
   )
   (
	echo " "; echo "Copying 'contrib' Documents (doc/master)...";
	cp -p $DOC_CONTRIB $DESTDIR/distrib/doc;
   )

   echo " "; echo "Copying doc/man/"
   rsync -C -av doc/man/ $DESTDIR/distrib/doc/man/;

   (
	echo " "; echo "Copying Documents (doc/smm/)...";
	(chdir doc; tar cf - smm/*.wix smm/app/*wix) |\
	(chdir $DESTDIR/distrib/doc; tar xvf - )

	perl distrib/bin/fix-wix.pl -X $FML -R doc/smm/op.wix \
	> $DESTDIR/distrib/doc/smm/op.wix

	echo " "; echo "Copying Documents (doc/ri/)...";
	(chdir doc; tar cf - ri/*.wix) |\
	(chdir $DESTDIR/distrib/doc; tar xvf - ) 
   )

   # http
   echo " ";

   CPP="cpp -P -DDIST "
   HTML_DIR=$DESTDIR/distrib/doc/html
   $CPP -DJAPANESE doc/html/index.html > $HTML_DIR/index-j.html
   $CPP -UJAPANESE doc/html/index.html > $HTML_DIR/index-e.html

   $CPP -DJAPANESE doc/advisories/index.html > $HTML_DIR/advisories/index-j.html
   $CPP -UJAPANESE doc/advisories/index.html > $HTML_DIR/advisories/index-e.html

   cp doc/html/release-index.html $HTML_DIR/index.html
   cp doc/html/fml.css $HTML_DIR/

   echo "rsync -av var/html/[A-Z]* $DESTDIR/distrib/doc/html/"
   rsync -av var/html/[A-Z]* $DESTDIR/distrib/doc/html/

   echo "rsync -av advisories $DESTDIR/distrib/doc/html/"
   rsync -av var/html/advisories $DESTDIR/distrib/doc/html/
}


COPY_SOURCES () {
	archsrc=/tmp/archsrc$$


	echo ""; echo "Copying Main Sources ... ";
	cp -p $SOURCES 		$DESTDIR/distrib/
	cp -p $DRAFTS_SOURCES   $DESTDIR/distrib/drafts
	cp -p $C_SOURCES	$DESTDIR/distrib/C
	cp -p $PERL_SOURCES	$DESTDIR/distrib/src

	find sys -type f -print|\
	egrep -v '*~|/RCS' |sed 's#proc/##' > $archsrc

	# removed proc/arch (98/08/01)
	# (chdir proc; tar cf - `cat $archsrc`)|\
	# (chdir $DESTDIR/distrib/src; tar xvf -)

	echo "   copying $ARCH_SOURCE -> $DESTDIR/distrib/"
	find $ARCH_SOURCES -type f -print|\
	egrep -v '*~|/RCS|/FVS|/CVS|WINDOWS_NT4/docs|WINDOWS_NT4/lib|WINDOWS_NT4.old|Makefile' > $archsrc

	tar cf - `cat $archsrc`|(chdir $DESTDIR/distrib; tar xvf -)

	# cf
	echo " "; echo "cf/ ...";
	(cd cf;
	cp -p `find . -type f|egrep -v 'sapporo|beth|RCS|CVS|FVS'|grep -v '~'` \
	$DESTDIR/distrib/cf;
	)

	# bin
	echo " "; echo "Copying bin/ ";
	cp -p $BIN_SOURCES $DESTDIR/distrib/bin
	echo "chmod 755 bin/\*";
	chmod 755 $DESTDIR/distrib/bin/*

	# sbin
	echo " "; echo "Copying sbin/ ";
	cp -p $SBIN_SOURCES $DESTDIR/distrib/sbin
	echo "chmod 755 sbin/\*";
	chmod 755 $DESTDIR/distrib/sbin/*

	# libexec
	echo " "; echo "Copying libexec/ ";
	cp $FML/etc/dot_fmllocalrc $DESTDIR/distrib/etc/dot_fmllocalrc
	cp -p $LIBEXEC_SOURCES $DESTDIR/distrib/libexec

	# etc
	echo " "; echo "Copying etc/ ";
	cp -p $ETC_SOURCES $DESTDIR/distrib/etc;
	tar cf - etc/makefml/Makefile etc/makefml/[0-9a-z]* |\
	(chdir $DESTDIR/distrib; tar xvf - )

	# tar cf - etc/samples/[a-z]* | (chdir $DESTDIR/distrib; tar xvf - )

	rm -f $archsrc
}


FIX_DISTRIBUTION_FILE_RCSID () {

	echo " ";
	echo "Fixing Rcsid ..."

   (cd kern	

	for file in fml.pl msend.pl 
	do
		echo "   Fixing Rcsid in $file ... ( > src/$file )"
		perl $FML_VERSION $file > $DESTDIR/distrib/src/$file
	done

   )

	for file in $LIBEXEC_SOURCES 
	do
		echo "   Fixing Rcsid in $file ... "
		perl $FML_VERSION $file > $DESTDIR/distrib/$file
	done
}


FIX_DISTRIBUTION_FILE_MAKEFILE () { 
	echo " "; echo "Fixing Makefile"

	# sed '/^DISTRIB/,$d' Makefile |\
	# sed '/^include/d'|\
	# sed 's/gar/rm \-f/' |\
	# sed 's/delete/rm \-f/' > $DESTDIR/distrib/Makefile
}


MAKE_CONFIG_PH_EXAMPLE () {
	(echo "";echo -n " cf/release -> config.ph  "; date)
	cf/config cf/release > $DESTDIR/distrib/config.ph
}


FIX_DISTIRUBTION_FILE_INCLUDE () {
	echo "---Including relations";
	echo "   libexec/fml_local.pl"
	$INCLUDE_PROG $DESTDIR/distrib/libexec/fml_local.pl > /tmp/_fml$$_
	cp /tmp/_fml$$_ $DESTDIR/distrib/libexec/fml_local.pl
	rm -f /tmp/_fml$$_
}



FIX_DISTRIBUTION_LINKS () {
   (
	echo "Arrangement of Links ... "
	cd $DESTDIR/distrib;
	ln -s sbin/makefml makefml
   )


   (
	cd $DESTDIR/distrib

	for file in README.jp README.en INSTALL.jp INSTALL.en
	do 
		ln -s doc/$file $file
	done
   )

	#cd $DESTDIR/distrib/doc/drafts
	#for file in help guide deny objective confirm welcome 
	#do
	#	test -f $file && (chdir ../..; ln -s doc/drafts/$file $file)
	#done
}


# XXX: need DESTDIR !!!
GEN_CONTRIB () {
   ( cd $FML/contrib; make FML=${FML} DESTDIR=${DESTDIR} distribution )
}


OLD_GEN_CONTRIB () {

	for dir in `cat distrib/etc/contrib_list`
	do
		echo " "; 
		echo "---installing contrib/$dir"

		(cd contrib/$dir;\
		 make -f $FML/contrib/Makefile.template DESTDIR=$DESTDIR DISTRIB)

	done
}


FIX_DISTRIBUTION_PERMISSION () {
	echo " "
	echo "Fixing Permissions ..."

	find $DESTDIR/distrib |\
	perl -nle '-d $_ && chmod(0755,$_); -f $_ && chmod(0644,$_)'

	if [ -d $FTP_DIR ]
	then
		find $FTP_DIR |\
		perl -nle '-d $_ && chmod(0755,$_); -f $_ && chmod(0644,$_)'
	fi

	(
		cd $DESTDIR/distrib
		chmod 755 src/fml.pl src/msend.pl bin/* sbin/* libexec/*
	)
}


PATCHLEVEL_INCREMENT () {
	echo "$src => $dst"
	perl $FML_VERSION -p $PATCHLEVEL $src |\
	perl -nple 's/(\$Rcsid.*pl\d+)pl(\d+)/sprintf("%s.%04d", $1, $2)/e' |\
	perl -nple 's/(\$Rcsid.*\#\d+)pl(\d+)/sprintf("%s.%04d", $1, $2)/e' \
	> $dst
}


DISTRIBUTION_PATCHLEVEL_INCREMENT () {
	for file in fml.pl msend.pl
	do
		src=$FML/kern/$file
		dst=$DESTDIR/distrib/src/$file
		PATCHLEVEL_INCREMENT
	done

	for file in libexec/fmlserv.pl libexec/popfml.pl
	do
		src=$FML/$file
		dst=$DESTDIR/distrib/$file
		PATCHLEVEL_INCREMENT
	done

}


FIX_LANGUATE () {
   (
	cd $DESTDIR/distrib/drafts
	echo "Fixing Japanese code: "
	for file in *
	do
		echo -n "$file "
		nkf -j $file > $file.j
		mv $file.j $file
	done

	echo " ... Done."
   )
}


GEN_BRANCH_ARCHIVE () {
	chdir $DESTDIR

	FMLID="fml-`sed 's/_//' $FML/conf/release_version`"
	DATE=`date +"%y%m%d"`
	FMLID=fml-SNAP$DATE

	echo mv distrib $FMLID
	mv distrib $FMLID

	set -vx

	tar cf $FMLID.tar $FMLID 
	gzip -9 $FMLID.tar
	find $FMLID |zip -q -@ $FMLID.zip

	set +vx
}

GEN_ARCHIVE () {
	if [ X$__FML_MASTER_MACHINE__ = X ]
	then
		echo ignore GEN_ARCHIVE not on fml distribution master machine
		return
	fi

	# FIX_LANGUATE

	FTP=$FTP_DIR
 	WWW=$WWW_DIR

	if [ ! -d $FTP_DIR ]
	then
		echo ignore GEN_ARCHIVE since \$FTP_DIR is not defined
		return
	fi

	if [ ! -d $WWW_DIR ]
	then
		echo ignore GEN_ARCHIVE since \$WWW_DIR is not defined
		return
	fi


	echo ""
	echo "rm -f $FTP/fml-2.1*gz $FTP/fml-current*gz"
	rm -f "$FTP/fml-2.1*gz $FTP/fml-current*gz"

	echo ""

	chdir $DESTDIR

	FMLID="fml-`sed 's/_//' $FML/conf/release_version`"
	FMLID=`echo $FMLID| sed 's/\#/-snapshot/'`
	DATE=`date +%y%h%d`
	DATE=` $FML/distrib/bin/date `

	# for fml 2.x.y branch series
	# If fml 2.x.y branch series, DO NOT synchronize
	if [ X$BRANCH_SNAPSHOT = X ]
	then
		echo "Synchronizing $FTP/snapshot ..."
		echo " "
		test -d $FTP/snapshot || mkdir $FTP/snapshot;
		rsync --delete -av distrib/ $FTP/snapshot/

		echo " Making snapshto/info for fml@eriko.sapporo.iij.ad.jp ... "
		echo " "
		echo "nkf -j $DESTDIR/distrib/doc/INFO.jp => $FTP/snapshot/info"
		nkf -j $DESTDIR/distrib/doc/INFO.jp > $FTP/snapshot/info

		echo "Synchronizing $WWW ..."
		echo " "
		echo rsync -av $FML/var/html/ $WWW/
		rsync -av $FML/var/html/ $WWW/
	fi

	echo " "
	echo "Unlinking *~ ..."
	echo " "
	find distrib -name '*~' -print|perl -nple unlink

	echo " "
	echo "Making tar.gz ...a "
	echo " "
	mv distrib $FMLID
	tar cvf $FMLID.tar $FMLID
	gzip -9 $FMLID.tar
	ln $FMLID.tar.gz fml-current.$DATE.tar.gz

	echo cp -p $FMLID.tar.gz $FTP
	cp -p $FMLID.tar.gz $FTP

	if [ X$BRANCH_SNAPSHOT = X ]
	then
		echo cp -p $FMLID.tar.gz $WWW/fml-current.tar.gz
		cp -p $FMLID.tar.gz $WWW/fml-current.tar.gz

	   (
		echo 	chdir $FTP
		echo    rm -f fml-current.*.tar.gz
		echo 	ln $FMLID.tar.gz fml-current.$DATE.tar.gz
		echo 	ln $FMLID.tar.gz fml-current.tar.gz
		echo 	ln $FMLID.tar.gz old/$FMLID.tar.gz

		chdir $FTP
		rm -f fml-current.*.tar.gz fml-current.tar.gz
		ln $FMLID.tar.gz fml-current.$DATE.tar.gz
		ln $FMLID.tar.gz fml-current.tar.gz
		ln $FMLID.tar.gz old/$FMLID.tar.gz
		(uuencode fml-current.$DATE.tar.gz fml-current.$DATE.tar.gz)|\
		cat > $FTP/fml-current.uu
	   )
	fi

	echo "Generating $FMLID.zip";
	find $FMLID |zip -q -@ $FMLID.zip
	(
		echo 	chdir $FTP
		chdir $FTP

		if [ X$BRANCH_SNAPSHOT = X ]
		then
			echo 	rm -f *.zip
			rm -f *.zip
		fi
	)

	cp -p $FMLID.zip $FTP

	(
		if [ X$BRANCH_SNAPSHOT = X ]
		then
			echo 	chdir $FTP
			echo 	ln $FMLID.zip fml-current.zip
			chdir $FTP
			ln $FMLID.zip fml-current.zip
		fi
	)

	#	echo "Generating ls-lR.gz";
	#	(
	#		chdir $FTP
	#		ls -lR . | gzip -9 > ls-lR.gz
	#	)

	(
		echo "Creating MD5"
		chdir $FTP

		md5 *gz *zip |sort |tee MD5SUM
	)
}
