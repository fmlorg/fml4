INIT_PACKAGE () {

	# initialize
   	cp /dev/null $PATCHLEVEL_DIR/version

	(

		### rcsid is not used explicit, so delete here
		#	echo " "; echo "Fixing rcsid ... " 
		#	/bin/sh usr/sbin/fix-rcsid.sh

		echo " "; echo "O.K. rcs check in var/doc/ ... ";
		sh usr/sbin/sync-rcs-of-doc.sh

		echo " "; echo "Fixing permissions ... ";
		chmod 755 *.pl bin/* sbin/* libexec/*
		chmod 644 lib*.pl proc/*.pl
	)
}


INIT_DIST () {
	test -d $PATCHLEVEL_DIR || mkdir $PATCHLEVEL_DIR

	( chdir $PATCHLEVEL_DIR; version.pl )

	PATCHLEVEL=`cat $PATCHLEVEL_FILE`
}


INIT_VERSION () {
   (
	echo " "; 
	echo "fml release version::Initialize() ... "
	echo "fml release          Date() ... "
	perl usr/sbin/fml_version.pl -t fml.pl > /dev/null

	if [ $init = 1 ]
	then
		echo "fml release          Increment() ... "
		perl usr/sbin/fml_version.pl -i fml.pl > /dev/null
	else
		echo ""
		echo "RELEASE VERSION NOT INCREMENTED"
		echo "        (but patchlevel up? :-) ... "
		echo ""
		echo If you increment fml snapshot release version
		echo 	USAGE: $0 -i fml.pl
	fi

	RID=`cat etc/release_version`
	echo -n $RID     > $RELEASE_MANIFEST
	echo -n ";"	>> $RELEASE_MANIFEST
	date 		>> $RELEASE_MANIFEST
	echo "" 	>> $RELEASE_MANIFEST

	RS="???*.pl proc/*.pl bin/*.pl sbin/*.pl libexec/*.pl contrib/*/*.pl"

	if [ $package = 1 ]
	then
		echo "record rcs revision set for the symbol [$RID]"
		echo " "; 
		for file in $RS
		do
			perl usr/sbin/show-rcsid.pl $file |\
			tee -a $RELEASE_MANIFEST
		done

		cat $RELEASE_MANIFEST >> doc/rcs/$RID
		(echo "--------------------------"; echo "";) >> doc/rcs/$RID
		echo " "; 
	fi

   )

	echo "Done."; 
	echo " "; 
}


INIT () {
	if [ $package = 0 ]
	then
		INIT_DIST
	elif [ $package = 1 ]
	then
		INIT_PACKAGE
	fi


	INIT_VERSION
}
